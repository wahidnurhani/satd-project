DEFECT	todo we loose encoding information here fix it
DEFECT	todo numeric.new works in ruby and it does here too. however trying to use that instance in a numeric operation should generate an argumenterror. doing this seems so pathological i do not see the need to fix this now.
DEFECT	todo adding implicit nils caused multiple problems in compiler revist after landing assert bodynode ! null bodynode is not null
DEFECT	todo take bigdecimal.mode into account.
DEFECT	fixme for some reason this dispatcher causes a verifyerror... classclass.dispatcher callbackfactory.createdispatcher classclass
DEFECT	fixme i doubt any of the constants referenced in this method are ever redefined should compare to the known values rather than do an expensive constant lookup.
DEFECT	todo rewriter and compiler assume case when empty expression. in mri this is just a when. assert casenode ! null casenode is not null
DEFECT	xxx wrong but will have to do for now
DEFECT	important receive the block argument before the opt and splat args this is so that the arg can be encoded as rest of the array . this won t work if the block argument hasn t been received yet!
DEFECT	fixme i got a bunch of npes when i didn t check for nulls here...how?!
DEFECT	sss fixme there are also differences in variable scoping between 1.8 and 1.9 ruby 1.8 is the buggy semantics if i understand correctly. the semantics of how this shadows other variables outside the block needs to be figured out during live var analysis.
DEFECT	this was a getopt with one mandatory arg but it did not work so i am parsing it for now.
DEFECT	this is the result of a bug that left off all trailing arguments. e.g. system ls 1 dir would be seen as system ls
DEFECT	todo we overflow on large files...we could increase to long to limit this but then the impl gets more involved since java io apis based on int means we have to chunk up a long into a series of int ops .
DEFECT	if we outgrow our pushback stack then grow it this should only happen in pretty pathological cases .
DEFECT	fixme arg may also be true false and nil and still be valid. strangely enough protocol conversion is not happening in ruby on this arg?
DEFECT	todo proper sign
DEFECT	todo in mri 1.9 an explicit check for negative length is added here. indexerror is raised when length is negative. see ruby core 12953 for more details. new note this is actually under re evaluation see ruby core 17483 .
DEFECT	fixme if we terminate immediately this appears to break while in method arguments we need to push a nil for the cases where we will never enter the body
DEFECT	the following constants capture pre known static call sites jruby implementations of methods of ruby classes sss fixme note that compiler impl basebodycompiler is using op match2 for match and and op match for match2 ... is this a bug there?
DEFECT	sss fixme this doesn t preserve original order of when clauses. we could consider preserving the order or maybe not since we would have to sort the constants first in any case for outputing jump tables in certain situations. add body to map for emitting later
DEFECT	sss fixme why is the for node being built using closures and not as a regular loop with branches? this has implications on inlining implementations of closures next break etc. when each and the block it consumes are inlined together in the caller the loop from the each should become a normal loop without any closures. but in this implementation of for we replace one closure with another!
DEFECT	synchronized method per jruby 1173 unsafe double checked locking fixme synchronization is still wrong in cp code
DEFECT	vulture thread will periodically expunge dead entries. entries are also expunged during put operations this is designed to cover the case where many objects are created initially followed by limited put activity. fixme disabled below pending resolution of finalization issue
DEFECT	fixme we are assuming that original string will be raw bytes. if ku is provided this will not be true but that is ok for now. deal with that when someone needs it.
DEFECT	todo rubicon testkernel dies without this line. a cursory glance implies we falsely set ! to nil and this sets it back to something valid. this should get fixed at the same time we address bug 1296484.
DEFECT	mri 1.8 behavior this combination of flags is not allowed
DEFECT	zero args with block fixme omit args index subtract one from normal block index
DEFECT	fixme it may be possible to killpg on systems which support it. posix library needs to tell whether a particular method works or not
DEFECT	todo this code effectively disables all inspection based optimizations none of them are 100 safe yet
DEFECT	fixme no argument seems to work for k in mri plus this should not siphon off additional args jruby k scripts foo . also better error processing.
DEFECT	we are in eval with binding break out early fixme this is broken with the new backtrace stuff
DEFECT	fixme this is a system error based on errno
DEFECT	todo make sure it s really safe to not to copy it
DEFECT	fixme not correct exception
DEFECT	fixme we can t guarantee this will always be a rubyio...so the old code here is not safe
DEFECT	dump the trace and continue this is currently only here for android which seems to have bugs in its enumeration logic http code.google.com p android issues detail?id 2812
DEFECT	fixme add at exit and finalizers to exit then make exit bang not call those.
DEFECT	todo need to isolate the current thread from class creation
DEFECT	xxx actually only on windows...
DEFECT	enebo should frogger foo work it doesnt in linux ruby ?
DEFECT	fixme can t use static would interfere with other runtimes in the same jvm
DEFECT	todo anything threads attached to original fd are notified of the close... see rb thread fd close
DEFECT	todo this is an freopen in mri this is close but not quite the same
DEFECT	todo ruby locks the string here
DEFECT	fixme check how ruby 1.9 handles this
DEFECT	todo full precision divmod is 1000x slower than mri!
DEFECT	fixme i m not sure this is right but the old code returned the undef which definitely isn t right...
DEFECT	enebo very wrong
DEFECT	fixme mri has special case for constants here
DEFECT	fixme throw the right argumenterror s if the class is missing or if it s a module.
DEFECT	todo we should use implicit nil for body but problem punt til later
DEFECT	. get value from current scope or one of its captured scopes.. . fixme block variables are not getting primed to nil so we need to null check those. until we prime them properly. also add assert back in.. . param offset zero indexed value that represents where variable lives. param depth how many captured scopes down this variable should be set. return the value here.
DEFECT	fixme x flag not supported case x break
DEFECT	fixme this is causing a verification error for some reason nilclass.dispatcher callbackfactory.createdispatcher nilclass
DEFECT	walk up the scope tree right now as much as possible to avoid run time walking sss fixme any reason why this might break in the presence of ruby s dynamic resolution? what might break?
DEFECT	fixme errno descriptions from constantine on windows are not useful at the moment.
DEFECT	fixme this should reset to what it was before
DEFECT	sss fixme incorect!
DEFECT	fixme vulture daemon thread prevents finalization find alternative approach. vulture.start
DEFECT	fixme this seems like a good assertion but it breaks compiled code and the code seems to run without it... assert currentmodule ! null can t push null rubyclass
DEFECT	sss fixme for constant arrays we should never get here!
DEFECT	fixme this is wrong
DEFECT	fixme may need to broaden for ipv6 ip address strings
DEFECT	todo sys fail
DEFECT	are there are available data flow facts to run this problem? sss fixme silly optimization?
DEFECT	sss fixme verify semantics of this instruction
DEFECT	fixme this isn t quite right it shouldn t evaluate the value if it s going to throw the error
DEFECT	todo full precision remainder is 1000x slower than mri!
DEFECT	fixme broken but behaving
DEFECT	todo don t require pop
DESIGN	we basically ignore protocol. let someone report it...
DESIGN	fixme i use a for block to implement end node because we need a proc which captures its enclosing scope. forblock now represents these node and should be renamed.
DESIGN	sss fixme 1. is the ordering correct? poll before next
DESIGN	we use a highly uncommon string to represent the paragraph delimiter 100 soln not worth it
DESIGN	add a self recv here todo is this right?
DESIGN	todo mri behavior call or add depending on the call. but this leads to exceptions when floats are added. see http blade.nagaokaut.ac.jp cgi bin scat.rb ruby ruby core 17374 return callcoerced context op b true this is mri behavior. we ll use ours for now thus providing an ability to add floats.
DESIGN	sss fixme is this correctly placed ... at the end of the loop iteration?
DESIGN	todo ruby reuses this logic for other write behavior by checking if it s an io and calling write again
DESIGN	sss fixme where does this go? m.setlineposition arraynode.getposition
DESIGN	it would be nice and logical! if exponent form behaved like e e and decimal form behaved like f but no such luck. hence
DESIGN	sss fixme these should get normally compiled or initialized some other way ... sss fixme parent super type info is incorrect! these are just placeholders for now .. this needs to be updated with real class objects later!
DESIGN	sss fixme i could make ir loop a scope too ... semantically it is a scope but functionally not sure if this is required yet ...
DESIGN	this covers the rare case of lower case class names and thus will fail 99.999 of the time . fortunately we ll only do this once per package name. and seriously folks look into best practices...
DESIGN	sss fixme should this be a string literal or a string? dummy class for the script
DESIGN	todo should this be deprecated ? to be efficient internals should deal with rubyhash directly
DESIGN	sss fixme does int suffice or do we need long?
DESIGN	modules are included with a shim class we must find that shim to handle super appropriately
DESIGN	reset value map if this instruction is the start end of a basic block right now calls are considered hard boundaries for optimization and information cannot be propagated across them! sss fixme rather than treat all calls with a broad brush what we need is to capture different attributes about a call uses closures known call target can modify scope etc. this information is probably already present in the ast inspector
DESIGN	todo determine whether we should perhaps store non singleton class in the implementationclass
DESIGN	sss fixme correct? where does closure arg come from?
DESIGN	sss fixme should i have a reference to the ir loop that is being retried?
DESIGN	temporary hack to handle non ruby values will come up with better solution shortly
DESIGN	simplify the variables too to keep these variables in sync with what is actually used in the when clauses this is not required for correctness reasons but only for performance reasons.
DESIGN	must be called from main thread it is currently but this bothers me
DESIGN	con fixme i don t know how to make case be an expression...does that logic need to go here?
DESIGN	something wrong we don t know the cwd... todo is this behavior really desirable? mov
DESIGN	todo no java stringity
DESIGN	fixme total hack to get flash in rails marshalling unmarshalling in session ok...we need to totally change marshalling to work with overridden core classes.
DESIGN	todo this method is not present in mri!
DESIGN	fixme ideally javaobject instances should be marshallable which means that the javaobject metaclass should have an appropriate allocator. jruby 414
DESIGN	todo public only?
DESIGN	fixme this should probably do some translation from ruby priority levels to java priority levels until we have green threads
DESIGN	todo consider a better way of synchronizing
DESIGN	using ioinputstream may not be the most performance way but it s easy.
DESIGN	fixme we should not be regenerating this over and over
DESIGN	xxx this check previously used callmethod to check for equality between classes when scanning the hierarchy. however the check may be safe we should only ever have one instance bound to a given type constant. if it s found to be unsafe examine ways to avoid the call.
DESIGN	todo why are we duplicating the constants here and then in file constants below? file constants is included in io.
DESIGN	a cloned method now belongs to a new class. set it. todo make dynamicmethod immutable
DESIGN	todo these were missing so we re not handling them elsewhere?
DESIGN	fixme wtf is this? why would these use the class?
DESIGN	todo figure out how this can happen and possibly remove
DESIGN	fixme i don t like this
DESIGN	fixme these descriptions should probably be moved out to constantine project which deals with all platform dependent constants.
DESIGN	fixme this below is temporary but its much safer for cow it prevents not shared strings with begin ! 0 this allows now e.g. bytelist set not to be begin aware
DESIGN	todo what about n arg?
DESIGN	fixme i think this chunk is equivalent to mri id2name and not our public method id2name . make into method if used more than once.
DESIGN	todo cache?
DESIGN	fixme this is probably not very efficient since it loads all methods for each call
DESIGN	hack in to replace usual readline with this
DESIGN	todo this is kinda gross
DESIGN	fixme in order for thread to play well with the standard new behavior it must provide an allocator that can create empty object instances which initialize then fills with appropriate data.
DESIGN	these extra arrays are really unfortunate split some of these paths out to eliminate?
DESIGN	if not overloaded we add a method that guesses at which signature to use todo just adding first one right now...add in signature guessing logic
DESIGN	sss fixme this should never get called for constant svalues
DESIGN	. todo this version is better than the hackish previous one. windows. behavior needs to be defined though. i suppose this version. could be improved more too.. todo etc passwd is also inadequate for macosx since it does not. use etc passwd for regular user accounts.
DESIGN	fixme there s some code duplication here with rubyobject inspect
DESIGN	fixme figure out why we get null sometimes
DESIGN	hacky advance position to eat newline here....
DESIGN	need to reexamine this
DESIGN	workaround for jruby 4149
DESIGN	using iooutputstream may not be the most performance way but it s easy.
DESIGN	enebo lots of optz in 1.9 parser here
DESIGN	fixme move out of this class!
DESIGN	in fact we should probably raise an error yes?
DESIGN	todo get rid of this lax returns 0.0 strict will throw
DESIGN	bit risky if someone changes completor but useful for method calls
DESIGN	todo the rest of this...seeking to same position is unnecessary since we share a channel but some of this may be needed?
DESIGN	todo is this the right thing to do?
DESIGN	fixme this probably belongs in a different package.
DESIGN	we clone dynamic scope because this will be a new instance of a block. any previously captured instances of this block may still be around and we do not want to start overwriting those values when we create a new one. enebo once we make self lastclass and lastmethod immutable we can remove duplicate
DESIGN	todo is this correct ?
DESIGN	sss fixme do we need to check if l is same as whatever popped?
DESIGN	sss fixme where is this set up? how is this diff from classvardeclnode??
DESIGN	fixme do we need the check or does main.java not call this...they should consolidate
DESIGN	fixme this table will get moved into posix library so we can get all actual supported signals. this is a quick fix to support basic signals until that happens.
DESIGN	fixme this worries me a bit since it could allocate a lot with a large newlength
DESIGN	todo this filtering is kind of gross...it would be nice to get some parser help here
DESIGN	this is gross but java api s aren t iso 8601 compliant at all
DESIGN	fixme get rid of laziness and handle restricted access elsewhere
DESIGN	todo for now we use a faithful reimplementation of mri s algorithm but should use utf8encoding facilities from joni once it starts prefroming utf 8 content validation.
DESIGN	fixme determine if a real allocator is needed here. do people want to extend javaclass? do we want them to do that? can you class.new javaclass ? should you be able to? todo not allocatable allocator is probably ok here since we don t intend for people to monkey with this type and it can t be marshalled. confirm. jruby 415
DESIGN	grrr arghh want to subclass sun.misc.floatingdecimal but can t so we must do all this the next 70 lines of code which has already been done by floatingdecimal.
DESIGN	fixme do we really want declared methods? includes private protected and does not include superclass methods. also the getdeclared calls may throw securityexception if we re running under a restrictive security policy.
DESIGN	small hack to save a cast later on
DESIGN	there s not a compelling reason to keep javaclass instances in a weak map any proxies created are were kept in a non weak map so in most cases they will stick around anyway and some good reasons not to javaclass creation is expensive for one many lookups are performed when passing parameters to from methods etc. . todo faster custom concurrent map
DESIGN	todo check for java reserved names and raise exception if encountered
DESIGN	fixme jruby 3188 ends up with condition returning null...quick fix until i can dig into it
DESIGN	workaround for a bug in sun s jdk 1.5.x see http bugs.sun.com bugdatabase view bug.do?bug id 6303753
DESIGN	fixme weakref.rb also does caller 2 here for the backtrace
DESIGN	fixme remove this from grammars.
DESIGN	todo it s perhaps just a coincidence that all the channels for which we should raise are instanceof selectablechannel since stdio is not...so this bothers me slightly. con
DESIGN	fixme not sure what the semantics of transfer are cfiber.definefastmethod transfer cb.getfastoptmethod transfer
DESIGN	fixme this is pretty gross we should have a cleaner initialization that doesn t depend on package visible fields and ideally is atomic probably using an immutable structure we replace all at once. lazy null when no groups defined
DESIGN	this is a dummy scope we should find a way to make that more explicit
DESIGN	fixme resolve what the hell is going on
DESIGN	fixme maybe not best place but move it to a good home
DESIGN	todo not allocatable allocator may be ok here but it s unclear how structs work with marshalling. confirm behavior and ensure we re doing this correctly. jruby 415
DESIGN	we always prepend an org.jruby.proxy package to the beginning because java and javax packages are protected and signed jars prevent us generating new classes with those package names. see jruby 2439.
DESIGN	todo we should be able to optimize this quite a bit post 1.0. javaclass already has all the methods organized by method name the next version supporting protected methods fields will have them organized even further. so collectmethods here can just lookup the overridden methods in the javaclass map should be much faster.
DESIGN	todo make more efficient by not creating irubyarray
DESIGN	rb mod remove cvar. . fixme any good reason to have two identical methods? same as remove class variable .
DESIGN	from dup setup rb copy generic ivar from dup setup here ...unlikely..
DESIGN	if we don t have opt args start after args they will be assigned later this is for crap like def foo a b true 1 which numbers b before a fixme only starting after required args since opt args may access others and rest args conflicts with compileroot using 0 to indicate signature.
DESIGN	if it s a single arg when but contains an array we know it s a real literal array fixme this is a gross way to figure it out parser help similar to yield argument passing expandarguments would be better
DESIGN	todo only setaccessible to account for pattern found by accessing constants included from a non public interface. aka java.util.zip.zipconstants being implemented by many classes
DESIGN	not intended to be called directly by users private old todo from ruby code this should be implemented in javaclass.java where we can check for reserved ruby names conflicting methods etc.
DESIGN	fixme don t allow multiple threads to do this at once
DESIGN	todo bleeding runtime into parser. arity may be should be in parser to keep bleeding oneway
DESIGN	rb ary push m. fixme whis is this named push m ?.
DESIGN	todo this probably isn t the best hack but it works until we can have different root frame setup for 1.9 easily.
DESIGN	todo at least parsersupport.attrset passes argsnode as null. implicitnil is wrong magic for setupargs since it will irubyobject nil . so we need to figure out a nice fast null pattern for setupargs. assert argsnode ! null receivernode is not null
DESIGN	hack in order to have stdout err act like ttys and flush always we set anything assigned to stdout stderr to sync
DESIGN	todo people extending gzipwriter reader will break. find better way here.
DESIGN	fixme set up a call configuration for this
DESIGN	. process streams get channel.newchannel ed into filechannel but are not actually. seekable. so instead of just the isseekable check doing instanceof filechannel . we must also add this boolean to check which we set to false when it s known. that the incoming channel is from a process.. . fixme this is gross and it s nio s fault for not providing a nice way to. tell if a channel is really seekable..
DESIGN	again shouldn t happen. todo might want to throw exception instead.
DESIGN	fixme can get optimized for ieqlnode
DESIGN	todo rounding mode should not be hard coded. see mode.
DESIGN	fixme moved this here to get what s obviously a utility method out of irubyobject. perhaps security methods should find their own centralized home at some point.
DESIGN	fixme if nativeexception is expected to be used from ruby code it should provide a real allocator to be used. otherwise class.new will fail as will marshalling. jruby 415
DESIGN	fixme this should go somewhere more generic maybe idutil
DESIGN	sss fixme move this code to some utils area .. or probably there is already a method for this in some jruby utils class holy cow! just to append two darned arrays!
DESIGN	todo set our metaclass to target s class i.e. scary!
DESIGN	add new with full signature so it s guaranteed to be directly accessible todo no need for this to be a full formal jvm signature
DESIGN	context is null wipe out the softreference this could be done with a reference queue
DESIGN	todo remove
DESIGN	todo this is actually now returning the scope of whoever called method to proc which is obviously wrong but there s no scope to provide for many methods. it fixes jruby 2237 but needs a better solution.
DESIGN	. . author headius. fixme convert to enum ?.
DESIGN	the following three methods must be defined fast since they expect to modify the current frame i.e. they expect no frame will be allocated for them . jruby 1185.
DESIGN	sss fixme can this return anything other than nil?
DESIGN	xxx const lookup can trigger const missing is that enough to warrant it always being executed?
DESIGN	todo should frozen error have its own distinct class? if not should more share?
DESIGN	todo only used by interface implementation eliminate it
DESIGN	fixme null check is removable once we figure out how to assign to unset named block args
DESIGN	for jruby 2759 when met choose cet timezone to work around joda
DESIGN	fixme this is gross. don t do this.
DESIGN	fixme i think we need these pushed somewhere?
DESIGN	sss fixme deprecated! going forward all instructions should come from the cfg
DESIGN	todo should probably apply the null object pattern for a non allowed class rather than null
DESIGN	todo should next and return also catch here?
DESIGN	yow...this is still ugly
DESIGN	add method with full signature so it s guaranteed to be directly accessible todo no need for this to be a full formal jvm signature
DESIGN	. fixme this version is faster than the previous but both suffer from a. crucial flaw it is impossible to create an objectspace with an iterator. that doesn t either a. hold on to objects that might otherwise be collected. or b. have no way to guarantee that a call to hasnext will be correct or. that a subsequent call to next will produce an object. for our purposes . for now this may be acceptable..
DESIGN	fixme clearing read buffer here...is this appropriate?
DESIGN	todo specifying soft refs may want to compare memory consumption behavior with weak refs specify weak in place of soft below
DESIGN	fixme lose syntactical elements here and others like this
DESIGN	enebo totally weird naming in mri is not allocated and is a local var name
DESIGN	fixme this doesn t actually support anything but string
DESIGN	up to ten stuff into tmp locals load in reverse order and assign fixme there s probably a slightly smarter way but is it important?
DESIGN	xxx do something?
DESIGN	todo only setaccessible to account for pattern found by accessing constants included from a non public interface. aka java.util.zip.zipconstants being implemented by many classes todo not sure we need this at all since we only expose public fields. field.setaccessible true
DESIGN	fixme we want to eliminate these type casts when possible
DESIGN	todo decompose getjavapackagemodule so we don t parse fullname
DESIGN	hack force clinit to be created
DESIGN	fixme if true array is common enough we should pre allocate and stick somewhere
DESIGN	todo this is almost rubymodule instance methods on the metaclass. perhaps refactor.
DESIGN	fixme added this because marshal spec seemed to reconstitute objects without calling datawrapstruct this resulted in object being null after unmarshalling...
DESIGN	todo ary sort check should be done here
DESIGN	exit monitor before making call fixme this not being in a finally is a little worrisome
DESIGN	self args 0 sss fixme verify that this is correct
DESIGN	this is for jruby 2988 since after a suspend the terminal seems to need to be reinitialized. since we can t easily detect suspension initialize after every readline. probably not fast but this is for interactive terminals anyway...so who cares?
DESIGN	todo do above but not below for additional newline nodes
DESIGN	sss fixme receiver this is the class meta object basically? operand receiver build defsnode.getreceivernode s
DESIGN	fixme this whole thing could probably be implemented as a module and mixed into appropriate classes especially if it uses either ioinput outputstream or is smart about the kind of io like object it s being used against.
DESIGN	fixme bit of a kludge here non interface classes assigned to both class and module fields . simplifies proxy extender code will go away when ji is overhauled and proxy extenders are deprecated .
DESIGN	fixme what should these really be? numeric? assert x instanceof rubycomplex y instanceof rubycomplex
DESIGN	we re depending on the side effect of the load which loads the class but does not turn it into a script i don t like it but until we restructure the code a bit more we ll need to quietly let it by here.
DESIGN	fixme we should also support orgs that use capitalized package names including embarrassingly the one i work for but this should be enabled by a system property as the expected default behavior for an upper case value should be and is to treat it as a class name and raise an exception if it s not found
DESIGN	index for the item this could probably be more efficient bailing out on assigning args past the end?
DESIGN	fixme this is temporary since the variable compilers assume we want args already on stack for assignment. we just pop and continue with 1.9 args logic.
DESIGN	todo eliminate?
DESIGN	todo handle writing into original buffer better
DESIGN	this is a fairly specific hack for empty string but it does the job
DESIGN	xxx this constructor is a hack to implement the end syntax. converting a reader back into an inputstream doesn t generally work.
DESIGN	method has more than 500 lines we ll need to split it and therefore need to use a heap based scope
DESIGN	the implementations of these are all bonus see todo above i was going to throw an error from these but it appears to be the wrong place to do it.
DESIGN	entry exists proxy doesn t match. replace. this could happen if old proxy was gc ed todo raise exception if stored proxy is non null? not gc ed
DESIGN	todo better algorithm to set precision needed
DESIGN	. sss fixme used anywhere? i don t see calls to this anywhere. public operand builddasgnassignment node node ir scope s . dasgnnode dasgnnode dasgnnode node . s.getvariablecompiler .assignlocalvariable dasgnnode.getindex dasgnnode.getdepth . .
DESIGN	todo make this more intelligible value
DESIGN	todo split this into two sub classes so that name and constnode can be specified seperately.
DESIGN	not sure how well this works but it works much better than just currenttimemillis by itself.
DESIGN	fixme this is copied code from rubyarray. both re struct and array should share one impl this is also hacky since i construct ruby objects to access ruby arrays through aref instead of something lower.
DESIGN	fixme no i don t like it.
DESIGN	arguments compilers always create irubyobject but we want to use rubyarray.concat here fixme as a result this is not efficient since it creates and then later unwraps an array
DESIGN	fixme set up a callconfiguration for this
DESIGN	todo reads writes from frame todo information on scoping todo visibility?
DESIGN	fixme somehow i d feel better if this could get the appropriate var index from the argumentnode
DESIGN	fixme this is almost entirely duplicated from main.java
DESIGN	we might need to perform a dst correction
DESIGN	create block for this iter node fixme we shouldn t use the current scope if it s not actually from the same hierarchy of static scopes
DESIGN	fixme how much more obtuse can this be? heredoc already parsed this and saved string...do not parse..just return
DESIGN	this needs to be split since conditional calling inherited doesn t fit standard ruby semantics
DESIGN	xxx again screwy evaling under previous frame s scope
DESIGN	sss fixme maybe this is not really a concern after all ... nesting level of this scope in the lexical nesting of scopes in the current file this is not to be confused with semantic nesting of scopes across files. consider this code in a file f class m1 m2 m3 c ... end so c is at lexical nesting level of 1 the file script is at 0 in the file f semantically it is at level 3 m1 m2 m3 are at 0 1 2 . this is primarily used to ensure that variable names don t clash! i.e. definition of v 1 in a closure shouldn t override the use of v 1 from the parent scope! private int lexicalnestinglevel
DESIGN	actual type does not exactly match method return type re get converter fixme when the only autoconversions are primitives this won t be needed
DESIGN	fixme we should probably still be dyncalling write here
DESIGN	don t bother to check if final method it won t be there not generated can t be!
DESIGN	todo generalize this type checking code into irubyobject helper.
DESIGN	fixme needs to be rethought
DESIGN	ruby constants for strings should this be moved somewhere else?
DESIGN	let s only generate methods for those the user may actually intend to override. that includes any defined in the current class and any ancestors that are also javaproxyclasses but none from any other ancestor classes . methods defined in mixins will be considered intentionally overridden except those from kernel java and javaproxymethods as well as enumerable. todo may want to exclude other common mixins?
DESIGN	fixme i don t like the null checks here
DESIGN	invoke callmethodmissing method directly todo this could be further optimized since some dsls hit method missing pretty hard...
DESIGN	todo confirm expected args are irubyobject or similar
DESIGN	todo this is really ineffient and potentially a problem everytime anyone require s something. we should try to make loadpath a special array object.
DESIGN	if we get here we found a matching method use it todo choose narrowest method by continuing to search
DESIGN	rb obj id. . return the internal id of an object.. . fixme should this be renamed to match its ruby name?.
DESIGN	fixme why was this using a fullfunctioncallbackmethod before that did callsuper?
DESIGN	. fixme this does not have exact same semantics as rubyarray.join but they. probably could be consolidated perhaps as join args sep dochomp ..
DESIGN	lame generics issues making segment class static and manually inserting cache reference to work around various problems generically referencing methods vars across classes.
DESIGN	fixme this determine module is in a strange location and should somehow be in block
DESIGN	todo? i think this ends up propagating from normal java exceptions sys fail openfile.getpath
DESIGN	this seems unlikely to happen unless it s a totally bogus fileno ...so do we even need to bother trying to create one?
DESIGN	todo turn off the negative? will return 0.0 in lax mode
DESIGN	todo list.sublist from to .clear is supposed to clear the sublist from the list. how can we support this operation?
DESIGN	sss fixme what is the difference between classvarasgnnode classvardeclnode
DESIGN	see note below re 2 field kludge
DESIGN	we re not setting the provider or anything but it seems that bouncycastle does some internal things in its provider s constructor which require it to be executed in a secure context. ideally this hack should be removed. see jruby 3919 and this bc bug http www.bouncycastle.org jira browse bja 227
DESIGN	this is a rather ugly hack but similar to mri. see hash.c ruby setenv and similar in mri we search all keys for a case insensitive match and use that
DESIGN	todo wrong get interfaces from class
DESIGN	todo make callcoerced work in block context...then fix downto step and upto.
DESIGN	fixme the code below is a copy of rubyio.puts and we should avoid copy paste.
DESIGN	install invokedynamic bootstrapper todo need to abstract this setup behind another compiler interface
DESIGN	fixme inefficient constructing a bignum just for dumping?
DESIGN	todo ruby does not seem to care about invalid numeric mode values i am not sure if ruby overflows here also...
DESIGN	fixme obvious issue that not all platforms can display all attributes. ugly hacks. using generic posix library makes pushing inspect behavior into specific system impls rather painful.
DESIGN	rb copy generic ivar from dup setup here ...unlikely..
DESIGN	fixme this really ought to be in clinit but it doesn t matter much
DESIGN	todo callback for value would be more efficient but unlikely to be a big cost constants are rarely assigned
DESIGN	using iochannel may not be the most performant way but it s easy.
DESIGN	todo this should entry into error handling somewhere
DESIGN	todo make this do specific arity calling
DESIGN	fixme legal here? may want unsupportedoperationexception
DESIGN	fixme this is an ugly hack to resolve jruby 1381 i m not proud of it
DESIGN	for visibility checking without requiring frame self todo don t bother passing when fcall or vcall and adjust callsite appropriately
DESIGN	sss fixme what happens to the add class in this case??
DESIGN	sss fixme is this correct?
DESIGN	fixme big fat hack here because scope names are expected to be interned strings by the parser
DESIGN	ignore...bean doesn t get registered todo why does that bother me?
DESIGN	sss fixme are we guaranteed that we splats dont head to multiple assignment nodes! i.e. a b ?
DESIGN	todo not allocatable allocator is probably ok here. confirm. jruby 415
DESIGN	todo catch exception if constant is already set by other thread
DESIGN	todo this version differs from ioctl by checking whether fcntl exists and raising notimplemented if it doesn t perhaps no difference for us?
DESIGN	todo implement tty? and isatty. we have no real capability to determine this from java but if we could set tty status then we could invoke jruby differently to allow stdin to return true on this. this would allow things like cgi.rb to work properly.
DESIGN	fixme we should be getting this from the runtime rather than assume none? return runtime.getencodingservice .getencoding runtime.getdefaultexternalencoding
DESIGN	object to a is obsolete. we match ruby s hack until to a goes away. then we can remove this hack too.
DESIGN	todo this isn t an exact port of mri s pipe behavior so revisit
DESIGN	todo protected methods. this is going to require a rework of some of the mechanism.
DESIGN	todo factor this chunk as in mri yarv getaster
DESIGN	fixme what should this really be? assert x instanceof rubycomplex
DESIGN	fixme this isn t right for within ensured rescued code
DESIGN	sss fixme token can be final for a method implying that the token is only for this particular implementation of the method but if the mehod is modified we create a new method object which in turn gets a new token. what makes sense?? intuitively it seems the first one ... but let us see ... current code version token for this method can change during execution as methods get redefined!
DESIGN	set up a field for the cacheentry todo make this an array so it s not as much class metadata similar to abstractscript stuff
DESIGN	todo it would be nice to throw a better error for this
DESIGN	todo newtypeerror does not offer enough for ruby error string...
DESIGN	sss fixme i added this in. is this correct?
DESIGN	upper case package name todo top level upper case package was supported in the previous ruby based implementation so leaving as is. see note at getproxyorpackageunderpackage re future approach below the top level.
DESIGN	todo this is also defined in the metaclass too...consolidate somewhere.
DESIGN	fixme constdecl could be two seperate classes or done differently since constnode and name never exist at the same time.
DESIGN	fixme finalizer should be dupped here
DESIGN	todo not allocatable allocator is probably ok here since we don t intend for people to monkey with this type and it can t be marshalled. confirm. jruby 415
DESIGN	todo number formatting here mri uses .10g 1.4 api is a must?
DESIGN	todo need to get this back into the method signature...now is too late...
DESIGN	super calls from proxies must use reflected method fixme possible to make handles do the superclass call?
DESIGN	optional args so we have irubyobject todo confirm
DESIGN	todo better error handling
DESIGN	fixme not very efficient
DESIGN	sss fixme should this be operand or compoundstring? can it happen that symbols are built out of other than compound strings? or can it happen during optimizations that this becomes a generic operand?
DESIGN	fixme we should really not be creating the dynamic scope for the root of the ast before parsing. this makes us end up needing to readjust this dynamic scope coming out of parse and for local static scopes it will always happen because of and . fixme because we end up adjusting this after the fact we can t use any of the specific size scopes.
DESIGN	todo wire into new exception handling mechanism
DESIGN	todo not sure that we should skip calling join altogether. thread.join has some implications for java memory model etc.
DESIGN	hack to get right style for input
DESIGN	if variables were added then we may need to grow the dynamic scope to match the static one. fixme make this so we only need to check this for blockscope ! null. we cannot currently since we create the dynamicscope for a localstaticscope before parse begins. refactoring should make this fixable.
DESIGN	sss fixme this method at least in the context of multiple assignment is a little weird. it calls regular to ary on the object. but if it encounters a method missing the value is inserted into an 1 element array! try a b c 1 first then define fixnum.to ary method and try it again. ex http gist.github.com 163551
DESIGN	fixme potentially could just use bytelist here?
DESIGN	fixme this is currently only here because of some problems with iooutputstream writing to a bare runtime without a proper scope
DESIGN	fixme consider fixing node assign itself rather than single case
DESIGN	this is perhaps innefficient timewise? optimal spacewise
DESIGN	end hack
DESIGN	ignore job was cancelled fixme is this ok?
DESIGN	regular division with some default precision todo proper algorithm to set the precision
DESIGN	todo exec should replace the current process. this could be possible with jna.
DESIGN	sometimes the value can be retrieved at compile time . if we succeed nothing like it! we might not .. for the following reasons 1. the constant is missing 2. the reference is a forward reference 3. the constant s value is only known at run time on first access but this is runtime isn t it?? 4. our compiler isn t able to right away infer that this is a constant. sss fixme 1. the operand can be a literal array range or hash hence operand because array range and hash derive from operand and not constant ... is there a way to fix this impedance mismatch? 2. it should be possible to handle the forward reference case by creating a new forwardreference operand and then inform the scope of the forward reference which the scope can fix up when the reference gets defined. at code gen time if the reference is unresolved when a value is retrieved for the forward ref and we get a null we can throw a constmissing exception! not sure!
DESIGN	fixme not allocatable allocator is probably not right here since we might eventually want javaarray to be marshallable. jruby 414
DESIGN	workaround for jruby 2326 mri does not enter this production for some reason
DESIGN	if body is a rescue node inspect its pieces separately to avoid it disabling all optz todo this is gross.
DESIGN	todo this is probably bad...
DESIGN	fixme do we really want declared methods? includes private protected and does not include superclass methods
DESIGN	fixme shouldn t need java ovrd methods just query locally defined methods.
DOCUMENTATION	fixme document difference between warn and warning or rename one better
DOCUMENTATION	fixme only f setfl and f getfl is current supported fixme only nonblock flag is supported fixme f setfl and f setfd are treated as the same thing here. for the case of dup fd we should actually have f setfl only affect one it is unclear how well we do but this todo is here to at least document that we might need to do more work here. mostly setfl is for mode changes which should persist across fork boundaries. since jvm has no fork this is not a problem for us.
IMPLEMENTATION	todo call config with scope but no frame
IMPLEMENTATION	todo clone setup here
IMPLEMENTATION	todo non strict option
IMPLEMENTATION	todo adjust length so it won t fall in the middle of a multi byte character. mri s sprintf.c uses tables in a modified version of regex.c which assume some particular encoding for a given installation application. see regex.c re mbcinit in ruby 1.8.5 p12 this is only an issue if the user specifies a precision that causes the string to be truncated. the same issue would arise taking a substring of a bytelist backed rubystring.
IMPLEMENTATION	fixme r logic needed
IMPLEMENTATION	todo note lack of command.com support for win 9x...
IMPLEMENTATION	fixme create attrreadermethod attrwritermethod for faster attr access
IMPLEMENTATION	todo 3 times calculate the same value below
IMPLEMENTATION	todo opt for 2 and 3 ?
IMPLEMENTATION	fixme optimize for cases where we have no false branch
IMPLEMENTATION	fixme after jump is not in here. will if ever be? label afterjmp new label
IMPLEMENTATION	todo missing additional logic for dealing with conflicting protected fields.
IMPLEMENTATION	todo deal with unc names
IMPLEMENTATION	todo rescan code range ?
IMPLEMENTATION	todo pass this in?
IMPLEMENTATION	todo warn tried to create proc object without a block
IMPLEMENTATION	todo make threadsafe
IMPLEMENTATION	todo port exact behavior from mri and move most locking logic into channeldescriptor todo for all lock nb cases return false if they would block
IMPLEMENTATION	todo do something here?
IMPLEMENTATION	todo pipe handler to be reopened with path and w mode
IMPLEMENTATION	todo other reserved names?
IMPLEMENTATION	todo better detection when path is absolute or not. if the path isn t absolute then prepend the current working directory to the path.
IMPLEMENTATION	todo store begin and end information into this node
IMPLEMENTATION	todo ruby locks the string here
IMPLEMENTATION	todo put these nil guards into tree bigger than i want to do right now
IMPLEMENTATION	fixme should we make this work with platform s locale or continue hardcoding us?
IMPLEMENTATION	fixme make bodynode non null in parser
IMPLEMENTATION	fixme pass block down?
IMPLEMENTATION	todo add trace call?
IMPLEMENTATION	todo build arg list based on number of args optionals etc
IMPLEMENTATION	todo check for ascii string
IMPLEMENTATION	sss fixme traverse up the scope hierarchy to find the constant as long as the parent is a static scope
IMPLEMENTATION	xxx shouldn t check if valid option variable
IMPLEMENTATION	sss fixme should i be returning the operand constructed here?
IMPLEMENTATION	fixme arg concat missing for opt call args
IMPLEMENTATION	todo add ir instructions for checking method arity! s.getvariablecompiler .checkmethodarity required opt rest
IMPLEMENTATION	todo add safety check for taintedness
IMPLEMENTATION	fixme ruby 1.9 post args code needs to come here
IMPLEMENTATION	todo make sure all appropriate open flags are added to this check.
IMPLEMENTATION	sss fixme somewhere here we need to record information the type of this operand as string
IMPLEMENTATION	xxx check if it s appropriate type?
IMPLEMENTATION	fixme translate this call below! s.unwrappassedblock
IMPLEMENTATION	sublist.clear sublist is supposed to share same backing store as list...todo in rubyarray. asserttrue list.size 1
IMPLEMENTATION	sss fixme we need to build debug information tracking into the ir in some fashion so these methods below would have to have equivalents in ir scope implementations.
IMPLEMENTATION	fix replace type ... with isinstanceof ...
IMPLEMENTATION	sss fixme incomplete!
IMPLEMENTATION	sss fixme pick one of bytelist or string or add internal conversion methods to convert to the default representation
IMPLEMENTATION	todo check if too many open files gc and try again
IMPLEMENTATION	sss fixme cannot optimize this without assuming that range.to ary method has not redefined. so for now return null!
IMPLEMENTATION	todo this and recacherespondsto needed to be synchronized for jruby 3466 but this degraded performance nearly 2x. it s still faster than mri but a reanalysis of this code may show a faster way to ensure we re caching safely.
IMPLEMENTATION	sss fixme to be done
IMPLEMENTATION	fixme arg concat logic missing for opt call args
IMPLEMENTATION	fixme need to detect magic comment in 1.9 here for encoding
IMPLEMENTATION	todo implement won t do this now
IMPLEMENTATION	todo validate port as numeric
IMPLEMENTATION	todo same zero length checks as file above
IMPLEMENTATION	todo this code should really check if a ruby equals method is implemented or not.
IMPLEMENTATION	if not already defined we add a new that guesses at which signature to use todo just adding first one right now...add in signature guessing logic
IMPLEMENTATION	fixme make thread pool threads daemons if necessary
IMPLEMENTATION	todo deal with varargs
IMPLEMENTATION	fixme we may be intern ing more than once.
IMPLEMENTATION	filter out any java primitive names todo should check against all java reserved names here not just primitives
IMPLEMENTATION	todo we can probably release our references to the constantfields array and static instance callback hashes at this point.
IMPLEMENTATION	do not clone cached methods fixme mri copies all methods here
IMPLEMENTATION	todo check safe taint on incoming string
IMPLEMENTATION	todo mri is just a when node. we need this extra logic for ide consumers null in casenode statement should be implicit nil
IMPLEMENTATION	todo formalize conversion mechanisms between java and ruby
IMPLEMENTATION	todo turn off readable? am i reading this right? this only seems to be used while duping below since modes gets reset to actual modes afterward fptr mode m fmode readable ? fmode readable fmode writable
IMPLEMENTATION	todo someday enable.
IMPLEMENTATION	bunch of methods still not implemented
IMPLEMENTATION	todo make it cross runtime safe by cow or eager copy
IMPLEMENTATION	todo don t calculate the same value 3 times
IMPLEMENTATION	todo notify threads waiting on descriptors io? probably not...
IMPLEMENTATION	fixme when we get jna3 we need to properly write this to errno.
IMPLEMENTATION	fixme add text mode to mode flags
IMPLEMENTATION	todo ruby unlocks the string here
IMPLEMENTATION	todo call ruby method
IMPLEMENTATION	fixme don t use rubyio for this
IMPLEMENTATION	todo something about pipe buffer length here
IMPLEMENTATION	todo mri also can hadle bignum here
IMPLEMENTATION	todo ruby truncates string to specific size here but our bytelist should handle this already?
IMPLEMENTATION	todo handle errors in buffered write by retrying until finished or file is closed
IMPLEMENTATION	fixme missing arity check
IMPLEMENTATION	todo must override in rubymodule to pick up constants
IMPLEMENTATION	todo check the return value here
IMPLEMENTATION	todo this isn t handling multibyte yet
IMPLEMENTATION	todo safestringvalue here
IMPLEMENTATION	todo no need to calculate every time.
IMPLEMENTATION	todo this should be something else like a tchar
IMPLEMENTATION	fixme this needs to happen for lambdas args.checkargcount runtime parameters.length
IMPLEMENTATION	todo ruby re checks that the buffer string hasn t been modified
TEST	?r boolean true if file is readable by the real uid gid of the caller fixme need to implement an readable real p in filetest
TEST	?w boolean true if file1 exists and is writable by the real uid gid fixme need to implement an writable real p in filetest
TEST	todo add test methods here. the name must begin with test . for example
TEST	if the method is extending something then we have to test if the handler is initialized...
TEST	todo make an assert here
TEST	todo make into an assert once i get things like blockbodynodes to be implicit nil
WITHOUT_CLASSIFICATION	...and shift the result back to the left multiply by 10 abs scale
WITHOUT_CLASSIFICATION	exceptionnext target is for a next that doesn t push a new value like this one
WITHOUT_CLASSIFICATION	static methods only
WITHOUT_CLASSIFICATION	inside a loop break out of it go to end of loop leaving break value on stack
WITHOUT_CLASSIFICATION	if element count is less than 6 use helper methods
WITHOUT_CLASSIFICATION	rb enc mbclen
WITHOUT_CLASSIFICATION	reverse the entire area of the array selected if it s reversed.
WITHOUT_CLASSIFICATION	a place to store that special hiding space that bindings need to implement things like eval a 1 binding eval p a . all binding instances must get access to this hidden shared scope. we store it here. this will be null if no binding has yet been called.
WITHOUT_CLASSIFICATION	this is the order in which mri does these two tests
WITHOUT_CLASSIFICATION	generate variable writers initialization code
WITHOUT_CLASSIFICATION	this is the order in which mri does these tests
WITHOUT_CLASSIFICATION	used by our duck typification of proc into interface types to allow coercing a simple proc into an interface parameter.
WITHOUT_CLASSIFICATION	basically just forcing a typeerror here to match mri
WITHOUT_CLASSIFICATION	bind normal parameter values to the local scope for this method.
WITHOUT_CLASSIFICATION	con popen is a case where i think we should just always shell out.
WITHOUT_CLASSIFICATION	in number just ignored
WITHOUT_CLASSIFICATION	mri 1.8.5 p12 doesn t support 1 char strings but yarv 0.4.1 does. i don t think it hurts to include this sprintf c a is nicer than sprintf c a 0
WITHOUT_CLASSIFICATION	the reason why we need the stream is to be able to invoke available on it. stdin in java is non interruptible non selectable and attempt to read on such stream might lead to thread being blocked without any way to unblock it. that s where available comes it so at least we could check whether anything is available to be read without blocking.
WITHOUT_CLASSIFICATION	there are two different popular tz formats legacy ast 3 00 00 gmt 3 and newer one us pacific america los angeles . this pattern is to detect the legacy tz format in order to convert it to the newer format understood by java api.
WITHOUT_CLASSIFICATION	special form of sprintf that returns a rubystring and handles tainted strings correctly. version for 1.9.
WITHOUT_CLASSIFICATION	prepare a string with the same number of redundant slashes so that we easily can prepend it to the result.
WITHOUT_CLASSIFICATION	we have a body do a full on method
WITHOUT_CLASSIFICATION	close without removing from finalizers
WITHOUT_CLASSIFICATION	special form of sprintf that returns a rubystring and handles tainted strings correctly.
WITHOUT_CLASSIFICATION	otherwise decrement and possibly close as normal
WITHOUT_CLASSIFICATION	last index 1 accessed by next last index 1 accessed by get
WITHOUT_CLASSIFICATION	nofunctionalitysignalfacade
WITHOUT_CLASSIFICATION	logevery n methods based on configuration
WITHOUT_CLASSIFICATION	get the value from the map via the key
WITHOUT_CLASSIFICATION	finally grab the script
WITHOUT_CLASSIFICATION	mri doesn t flag it as an error if width is given multiple times as a number but it does for
WITHOUT_CLASSIFICATION	truncate can t lengthen files so we save position seek write and go back
WITHOUT_CLASSIFICATION	class could not be found nor generated give up on jit and bail out
WITHOUT_CLASSIFICATION	oh well it was worth a try. go let double floatingdecimal handle it
WITHOUT_CLASSIFICATION	super uses current block if none given
WITHOUT_CLASSIFICATION	next jump
WITHOUT_CLASSIFICATION	test that requiring a normal java class raises an error jruby 3214
WITHOUT_CLASSIFICATION	without a flush ant will miss some of our output
WITHOUT_CLASSIFICATION	copy out any buffered bytes
WITHOUT_CLASSIFICATION	ignore i don t like doing it but it seems like we really just need to make all channels non blocking by default and use select when implementing blocking ops so if this remains set non blocking perhaps it s not such a big deal...
WITHOUT_CLASSIFICATION	..
WITHOUT_CLASSIFICATION	no arg constructor using static references to ruby and rubyclass
WITHOUT_CLASSIFICATION	create the default thread group
WITHOUT_CLASSIFICATION	there should only be one more thread in thread group than before we started
WITHOUT_CLASSIFICATION	skip in bytes will add where appropriate
WITHOUT_CLASSIFICATION	perform the dispatch
WITHOUT_CLASSIFICATION	d and i are the same
WITHOUT_CLASSIFICATION	broken symlinks considered by exists as non existing so we need to check for symlinks explicitly.
WITHOUT_CLASSIFICATION	if root of method is rescue compile as light rescue
WITHOUT_CLASSIFICATION	gotta have at least a zero...
WITHOUT_CLASSIFICATION	runtime.getwarnings .warn id.struct constant redefined frame.getfile frame.getline redefining constant struct name name
WITHOUT_CLASSIFICATION	u with space or plus flags is same as d
WITHOUT_CLASSIFICATION	only supports simple parallel assignment of up to 4 values to the same number of assignees
WITHOUT_CLASSIFICATION	switch for no exponent so drop through for calculation
WITHOUT_CLASSIFICATION	this method has jited already or has been abandoned. bail out.
WITHOUT_CLASSIFICATION	we have read ahead and need to back up
WITHOUT_CLASSIFICATION	if a line is followed by a blank line put it back.
WITHOUT_CLASSIFICATION	send it along as arity specific we don t need the array
WITHOUT_CLASSIFICATION	classes are directly in the hierarchy so no special logic is necessary for implementer
WITHOUT_CLASSIFICATION	create method for toplevel of script
WITHOUT_CLASSIFICATION	we promote our box to being its own box since we re changing visibilities and need it to be reflected on this method object independent of any other sharing the box.
WITHOUT_CLASSIFICATION	has the method that is calling super received a block argument
WITHOUT_CLASSIFICATION	argf object
WITHOUT_CLASSIFICATION	done done done nothing to do for 1.8 done done done done done done done? done done done done done done done done done done done case definednode return builddefined node m incomplete done done done done done done done done case ensurenode return buildensurenode node m deferred done done done done case flipnode return buildflip node m sss fixme what code generates this ast? done done done done done done done done done done done done done done done done done done? done done done done done done partially case opelementasgnnode return buildopelementasgn node m deferred sss fixme what code generates this ast? done case postexenode return buildpostexe node m deferred case preexenode return buildpreexe node m deferred done?? done
WITHOUT_CLASSIFICATION	ok we now have the significand in digits 0...ndigits and the exponent in exponent. we re ready to format.
WITHOUT_CLASSIFICATION	serialization killed our dynamic scope. we can just create an empty one since serialization cannot serialize an eval which is the only thing which is capable of having a non empty dynamic scope .
WITHOUT_CLASSIFICATION	condition is always true just compile it and not body
WITHOUT_CLASSIFICATION	input record separator
WITHOUT_CLASSIFICATION	ruby s designation for some platforms minus version numbers in some cases
WITHOUT_CLASSIFICATION	if the environment variables can t be obtained define an empty env
WITHOUT_CLASSIFICATION	line 1982
WITHOUT_CLASSIFICATION	after defn of stderr as the call may produce warnings
WITHOUT_CLASSIFICATION	for sockets only write as much as will fit.
WITHOUT_CLASSIFICATION	done processing args
WITHOUT_CLASSIFICATION	it s safe since adler.update doesn t modify the array
WITHOUT_CLASSIFICATION	redonode redonode redonode node
WITHOUT_CLASSIFICATION	if we get here no optz cases work fall back on unoptz.
WITHOUT_CLASSIFICATION	skip all whitespace in pack format string
WITHOUT_CLASSIFICATION	need padding i m fairly sure there is a library call to create a string filled with a given char with a given length but i couldn t find it
WITHOUT_CLASSIFICATION	fall back on env entry for user
WITHOUT_CLASSIFICATION	compile into array
WITHOUT_CLASSIFICATION	double testing args.length here but it avoids duplicating the proc setup code in two places
WITHOUT_CLASSIFICATION	call getpwent to fail early if unsupported
WITHOUT_CLASSIFICATION	?o boolean true if file1 exists and is owned by the caller s real uid
WITHOUT_CLASSIFICATION	line 329
WITHOUT_CLASSIFICATION	also create the javaproxy classes
WITHOUT_CLASSIFICATION	drop through for non strict digits
WITHOUT_CLASSIFICATION	inside a loop jump to conditional
WITHOUT_CLASSIFICATION	if root of method is rescue compile as a light rescue
WITHOUT_CLASSIFICATION	do nothing this iteration restarts
WITHOUT_CLASSIFICATION	attempt to set the permissions if we have been passed a posix instance and only if the file was created in this call.
WITHOUT_CLASSIFICATION	always false or nil
WITHOUT_CLASSIFICATION	. jrubymethod. public irubyobject to proc . return rubyproc.newproc getruntime . callblock.newcallclosure this getruntime .getsymbol arity.noarguments new toproccallback this getruntime .getcurrentcontext . block.type.proc . .
WITHOUT_CLASSIFICATION	line 1565
WITHOUT_CLASSIFICATION	check args first since body inspection can depend on args
WITHOUT_CLASSIFICATION	compile condition as non expr and just compile then body
WITHOUT_CLASSIFICATION	must not be used across threads
WITHOUT_CLASSIFICATION	try to read grent to fail fast
WITHOUT_CLASSIFICATION	line 818
WITHOUT_CLASSIFICATION	since we re not actually duping the incoming channel into our handler we need to copy the original sync behavior from the other handler
WITHOUT_CLASSIFICATION	not actually called anywhere all known uses call the fast version
WITHOUT_CLASSIFICATION	first we make modifications to the class to adapt it to being both a ruby class and a proxy for a java type
WITHOUT_CLASSIFICATION	empirical observations null some arity argsnode this.argsnode then check for arity changes newline splatnode argspushnode
WITHOUT_CLASSIFICATION	parent container for this context can be dynamic!! if dynamic at runtime this will be the meta object corresponding to a class script module method closure list of ir instructions for this method
WITHOUT_CLASSIFICATION	reopen
WITHOUT_CLASSIFICATION	long big endian
WITHOUT_CLASSIFICATION	system.err.println stringtolong converted c c
WITHOUT_CLASSIFICATION	in certain places like grep we don t use real frames for the call blocks. this has the effect of not setting the backref in the correct frame this delta is activated to the place where the grep is running in so that the backref will be set in an appropriate place.
WITHOUT_CLASSIFICATION	argf methods
WITHOUT_CLASSIFICATION	system.err.println stringtolong reading c data s
WITHOUT_CLASSIFICATION	even shift.. ..floors to 62 or 63 bit biginteger
WITHOUT_CLASSIFICATION	next v g 1 2 x v
WITHOUT_CLASSIFICATION	rubyclass rubyclass rubyclass rubyclass self rubyclass rubyclass rubyclass
WITHOUT_CLASSIFICATION	bouncy castle doesn t support algorithm
WITHOUT_CLASSIFICATION	can t do it
WITHOUT_CLASSIFICATION	. not normally used but is left in here since it can be useful in debugging. grammar and lexing problems.. .
WITHOUT_CLASSIFICATION	line 1609
WITHOUT_CLASSIFICATION	last node either !instanceof whennode or null is the else
WITHOUT_CLASSIFICATION	we are presumably running a precompiled class load directly
WITHOUT_CLASSIFICATION	if send with a literal symbol compile it as a direct fcall
WITHOUT_CLASSIFICATION	define argv and for this runtime
WITHOUT_CLASSIFICATION	once hasnext has been called we commit to next returning the entry it found even if it were subsequently deleted
WITHOUT_CLASSIFICATION	. r x 2 y.
WITHOUT_CLASSIFICATION	first try our custom generated unsafe
WITHOUT_CLASSIFICATION	aggregate when nodes into a list unfortunately this is no
WITHOUT_CLASSIFICATION	line 1362
WITHOUT_CLASSIFICATION	compile first node only
WITHOUT_CLASSIFICATION	doesn t fit in buffer. write immediately. ensure nothing left to write
WITHOUT_CLASSIFICATION	assignment means the value is already on the stack
WITHOUT_CLASSIFICATION	paths which end in or must be stripped off.
WITHOUT_CLASSIFICATION	this is almost always already interned since it will be called with a symbol in most cases but when created from java code we might get an argument that needs to be interned. addaccessor has as a precondition that the string must be interned
WITHOUT_CLASSIFICATION	?s int nil if file1 has nonzero size return the size otherwise nil
WITHOUT_CLASSIFICATION	if the read buffer is ahead back up
WITHOUT_CLASSIFICATION	next entry to return current slot current entry
WITHOUT_CLASSIFICATION	add setposition impl which stores filename as constant to speed updates
WITHOUT_CLASSIFICATION	mri behavior in this mode trailing zeroes are removed 1.500e 05 1.5e 05
WITHOUT_CLASSIFICATION	next x e d x 2
WITHOUT_CLASSIFICATION	intdigits isn t used here but if it were it would be 1
WITHOUT_CLASSIFICATION	iterate over remainder of buffer until we find a match
WITHOUT_CLASSIFICATION	three args no block load null block
WITHOUT_CLASSIFICATION	deal with length width
WITHOUT_CLASSIFICATION	the problem we trying to solve below stdin in java is blocked and non interruptible so if we invoke read on it we might never be able to interrupt such thread. so we use in.available to see if there is any input ready and only then read it. but this approach can t tell whether the end of stream reached or not so we might end up looping right at the end of the stream. well at least we can improve the situation by checking if some input was ever available and if so not checking for available anymore and just go to read.
WITHOUT_CLASSIFICATION	now for all variables used by i mark them live before i
WITHOUT_CLASSIFICATION	these are only needed if we have a non noop call config
WITHOUT_CLASSIFICATION	because regexp sets backref we have to make this backref aware
WITHOUT_CLASSIFICATION	note currently this optimization is limited to the following situations all expressions must be int ranged literal fixnums it also still emits the code for the safe when logic which is rather wasteful since it essentially doubles each code body . as such it is normally disabled but it serves as an example of how this optimization could be done. ideally it should be combined with the when processing to improve code reuse before it s generally available.
WITHOUT_CLASSIFICATION	if more than 4 vars get values array too
WITHOUT_CLASSIFICATION	optimistic pass calculate value as digits are processed digits lax rules decimal digits lax rules exponent sign digits lax rules digits strict rules decimal digits strict rules exponent sign digits strict rules complete calculation if possible
WITHOUT_CLASSIFICATION	line 1669
WITHOUT_CLASSIFICATION	the method also needs a scope do both
WITHOUT_CLASSIFICATION	intdigits 1
WITHOUT_CLASSIFICATION	build first node and ignore its result and then second node
WITHOUT_CLASSIFICATION	we re doing normal framed compilation or the method needs a frame
WITHOUT_CLASSIFICATION	try to look up field for simple name get field if nonnull go straight to dispatch
WITHOUT_CLASSIFICATION	line 1136
WITHOUT_CLASSIFICATION	long slow way causes disabling
WITHOUT_CLASSIFICATION	precision for g g includes integer digits
WITHOUT_CLASSIFICATION	lattice top bottom any values these will be used during dataflow analyses
WITHOUT_CLASSIFICATION	ok we have fast paths
WITHOUT_CLASSIFICATION	ignore this select will set the correct mode when it is finished
WITHOUT_CLASSIFICATION	execute rescue block
WITHOUT_CLASSIFICATION	if no exception is thrown execute else block
WITHOUT_CLASSIFICATION	note segmentshift differs from concurrenthashmap s calculation due to issues with system.identityhashcode upper n bits always 0 at least under java 1.6 winxp
WITHOUT_CLASSIFICATION	proc implementing an interface pull in the catch all code that lets the proc get invoked no matter what method is called on the interface
WITHOUT_CLASSIFICATION	what static scoping relationship exists when it comes into being.
WITHOUT_CLASSIFICATION	the following constants capture pre known static call sites used to implement ruby internals
WITHOUT_CLASSIFICATION	method handle arg receive return value and call instructions
WITHOUT_CLASSIFICATION	we re set self to the class but store the old self in a temporary local variable this is to prevent it gcing in case the singleton is short lived
WITHOUT_CLASSIFICATION	tempering
WITHOUT_CLASSIFICATION	read
WITHOUT_CLASSIFICATION	normalize the value
WITHOUT_CLASSIFICATION	clear exception when handled or retried
WITHOUT_CLASSIFICATION	arg2
WITHOUT_CLASSIFICATION	ok now it gets expensive...
WITHOUT_CLASSIFICATION	construct the proxy method
WITHOUT_CLASSIFICATION	switch will use this if we have to go back the slow way
WITHOUT_CLASSIFICATION	putting a bit back so we re not at eof anymore
WITHOUT_CLASSIFICATION	?s boolean true if file1 exists and is a socket
WITHOUT_CLASSIFICATION	save entering the try if there s nothing to ensure
WITHOUT_CLASSIFICATION	common constant cvar methods
WITHOUT_CLASSIFICATION	for foo
WITHOUT_CLASSIFICATION	eq 0 i.e. false c
WITHOUT_CLASSIFICATION	4!
WITHOUT_CLASSIFICATION	then try sun s unsafe
WITHOUT_CLASSIFICATION	. is printed
WITHOUT_CLASSIFICATION	value equality
WITHOUT_CLASSIFICATION	not saving dfs instance as it will only be used once at most per call
WITHOUT_CLASSIFICATION	copy any buffered data including ungetc byte
WITHOUT_CLASSIFICATION	need to clamp source buffer size to avoid overrun
WITHOUT_CLASSIFICATION	digits array shifted update all
WITHOUT_CLASSIFICATION	line 1081
WITHOUT_CLASSIFICATION	all precision numebers printed
WITHOUT_CLASSIFICATION	any biginteger is bigger than fixnum and we don t have fixable
WITHOUT_CLASSIFICATION	store each line into this list if not null.
WITHOUT_CLASSIFICATION	default output handle
WITHOUT_CLASSIFICATION	only arrays that are lightweight are being used as args arrays
WITHOUT_CLASSIFICATION	decimal form like but not just like! f
WITHOUT_CLASSIFICATION	check if it s an immediate and don t outline
WITHOUT_CLASSIFICATION	check arity checkarity mv scope
WITHOUT_CLASSIFICATION	no actual test so do when if when expression is not nil
WITHOUT_CLASSIFICATION	found a match above check if remaining separator characters match appending as we go
WITHOUT_CLASSIFICATION	ignore compiler pragmas
WITHOUT_CLASSIFICATION	sss looks like we receive the arg in buildblockargsassignment via the iternode we won t get here for argument receives! so builddasgn is called for assignments to block variables within a block. as far as the ir is concerned this is just a simple copy
WITHOUT_CLASSIFICATION	translate ret a b to ret a ? true b as follows v1 build a opt ret can be set to v1 but effectively v1 is true if we take the branch to l. while this info can be inferred by using attributes why bother if we can do this? ret true beq v1 true l v2 build b ret v2 l
WITHOUT_CLASSIFICATION	iterate over the rubyhash keyset simultaneously iterating over the values
WITHOUT_CLASSIFICATION	assert ! value instanceof rubyarray not an array
WITHOUT_CLASSIFICATION	else leave it null
WITHOUT_CLASSIFICATION	line 1649
WITHOUT_CLASSIFICATION	jruby 646 presumably this require should fail
WITHOUT_CLASSIFICATION	line 1687
WITHOUT_CLASSIFICATION	we lazily initialize this in case readline.readline has been overridden in ruby s readline
WITHOUT_CLASSIFICATION	clean up string representation so that it could be understood by java s bigdecimal. not terribly efficient for now. 1. mri allows d and d as exponent separators
WITHOUT_CLASSIFICATION	line 1784
WITHOUT_CLASSIFICATION	last conditional case use defaultcase
WITHOUT_CLASSIFICATION	we do preand post load outside the body versions to pre prepare and pre push the dynamic scope we need for lastline
WITHOUT_CLASSIFICATION	we are creating a new io object that shares the same iohandler and fileno .
WITHOUT_CLASSIFICATION	significant digits and exponent
WITHOUT_CLASSIFICATION	line 563
WITHOUT_CLASSIFICATION	the method doesn t need a scope but has static scope needs use a dummy scope
WITHOUT_CLASSIFICATION	note serialization is primarily supported for testing purposes and there is no general guarantee that serialization will work correctly. specifically instance variables pointing at symbols threads modules classes and other unserializable types are not detected.
WITHOUT_CLASSIFICATION	no such luck...
WITHOUT_CLASSIFICATION	new factory methods
WITHOUT_CLASSIFICATION	equivalent of data get struct this will first check that the object in question is actually a t data equivalent.
WITHOUT_CLASSIFICATION	wake up any channels that became unblocked
WITHOUT_CLASSIFICATION	we know this is a block scope because a local scope cannot be within a local scope if topscope was itself it would have created a localasgnnode above.
WITHOUT_CLASSIFICATION	s b true since intlength 0
WITHOUT_CLASSIFICATION	is the parser current within a singleton value is number of nested singletons
WITHOUT_CLASSIFICATION	force the client socket to be blocking
WITHOUT_CLASSIFICATION	8!
WITHOUT_CLASSIFICATION	add real top to new top unless this top is empty only begin end nodes or truly empty
WITHOUT_CLASSIFICATION	11!
WITHOUT_CLASSIFICATION	c c c boolean
WITHOUT_CLASSIFICATION	return new calloneargnode firstnode.getposition firstnode operator new arraynode secondnode.getposition secondnode
WITHOUT_CLASSIFICATION	fixme what is correct recv argument? this does produce the desired behavior
WITHOUT_CLASSIFICATION	block and block pass passed in at same time....uh oh
WITHOUT_CLASSIFICATION	package scheme 2 separate module for each full package name constructed from the camel cased package segments java javalang object
WITHOUT_CLASSIFICATION	if there s a second argument it s the path to which the first argument is relative.
WITHOUT_CLASSIFICATION	create ruby proxies for any input arguments that are not primitives.
WITHOUT_CLASSIFICATION	zero argument declaration
WITHOUT_CLASSIFICATION	nothing else to here the module version will be included in the class.
WITHOUT_CLASSIFICATION	set the binding s frame s previous file and line to current so trace will show who called the block
WITHOUT_CLASSIFICATION	kcode.none is used because kcode does not affect parse in ruby 1.8 if ruby 2.0 encoding pragmas are implemented this will need to change
WITHOUT_CLASSIFICATION	other args begin at index 1
WITHOUT_CLASSIFICATION	flush first
WITHOUT_CLASSIFICATION	seek to force underlying buffer to flush
WITHOUT_CLASSIFICATION	brace to match it. bracket expressions must be
WITHOUT_CLASSIFICATION	line 423
WITHOUT_CLASSIFICATION	translate ret a b ret a ? b false v1 build a opt ret can be set to v1 but effectively v1 is false if we take the branch to l. while this info can be inferred by using attributes why bother if we can do this? ret false beq v1 false l v2 build b ret v2 l
WITHOUT_CLASSIFICATION	line 388
WITHOUT_CLASSIFICATION	length check is a hack. we should not be reeiving as a filename ever.
WITHOUT_CLASSIFICATION	line 436
WITHOUT_CLASSIFICATION	o oo ooo or backref
WITHOUT_CLASSIFICATION	line 1093
WITHOUT_CLASSIFICATION	java and are not the same as ruby
WITHOUT_CLASSIFICATION	4 e nn e nn
WITHOUT_CLASSIFICATION	java requires w for creating a file that does not exist
WITHOUT_CLASSIFICATION	create a new variable using the prefix
WITHOUT_CLASSIFICATION	line 509
WITHOUT_CLASSIFICATION	check if the method has been explicitly excluded
WITHOUT_CLASSIFICATION	line 592
WITHOUT_CLASSIFICATION	we limit reads to bulk read sized chunks to avoid nio allocating a huge temporary native buffer when doing reads into a heap buffer if the dst buffer is direct then no need to limit.
WITHOUT_CLASSIFICATION	line 633
WITHOUT_CLASSIFICATION	pre create all the core classes potentially referenced during startup
WITHOUT_CLASSIFICATION	jruby 530 until case
WITHOUT_CLASSIFICATION	if we re not attempting to invoke method missing and method is not visible branch to method missing
WITHOUT_CLASSIFICATION	line 666
WITHOUT_CLASSIFICATION	get the value from the map via the values iterator
WITHOUT_CLASSIFICATION	line 817
WITHOUT_CLASSIFICATION	irubyobject dynamicmethod threadcontext irubyobject rubymodule string irubyobject
WITHOUT_CLASSIFICATION	line 820
WITHOUT_CLASSIFICATION	now clear out any previously selected channels
WITHOUT_CLASSIFICATION	line 902
WITHOUT_CLASSIFICATION	seek to force read buffer to invalidate
WITHOUT_CLASSIFICATION	line 947
WITHOUT_CLASSIFICATION	lazily create class init only if necessary
WITHOUT_CLASSIFICATION	13!
WITHOUT_CLASSIFICATION	line 977
WITHOUT_CLASSIFICATION	. this method takes as input a map of operands to their values and outputs. the result of this instruction.. . if the value map provides a value for any of the instruction s operands. the expectation is that the operand will be replaced with the simplified value.. it is not required that it do so code correctness is not compromised by failure. to simplify.. . param valuemap mapping from operands to their simplified values. returns simplified result output of this instruction.
WITHOUT_CLASSIFICATION	system.err.println main len len
WITHOUT_CLASSIFICATION	if no explicit block passed to super then use the one passed in unless it s explicitly cleared with nil
WITHOUT_CLASSIFICATION	use same classindex as metaclass since we re technically still of that type
WITHOUT_CLASSIFICATION	line 1060
WITHOUT_CLASSIFICATION	line 1090
WITHOUT_CLASSIFICATION	bench straight up long fib 30
WITHOUT_CLASSIFICATION	line 1149
WITHOUT_CLASSIFICATION	translate x y x is true x ? x y x build x should return a variable! f is true x beq f true l x build y l
WITHOUT_CLASSIFICATION	eq ! 0 i.e. true
WITHOUT_CLASSIFICATION	get javaclass if this is the new proxy class verify it matches if this is a superclass proxy.
WITHOUT_CLASSIFICATION	main while loop offset length
WITHOUT_CLASSIFICATION	load path
WITHOUT_CLASSIFICATION	enebo c can never be antrhign but . why did i put this here?
WITHOUT_CLASSIFICATION	assign given optional arguments to their variables
WITHOUT_CLASSIFICATION	first build an assignment for a splat if any with the rest of the args!
WITHOUT_CLASSIFICATION	experimental class reification support to create real java classes for ruby classes after the first opening
WITHOUT_CLASSIFICATION	attempt to load the found library
WITHOUT_CLASSIFICATION	make sure the appropriate scope has proper size. see jruby 2046.
WITHOUT_CLASSIFICATION	wait until thread has completed
WITHOUT_CLASSIFICATION	jrubymethod name complex?
WITHOUT_CLASSIFICATION	synchronize and re check to avoid creating more than one selector per provider
WITHOUT_CLASSIFICATION	jrubymethod name inexact?
WITHOUT_CLASSIFICATION	we use file test since it is faster than a stat also euid uid in java always
WITHOUT_CLASSIFICATION	6!
WITHOUT_CLASSIFICATION	set thread context jruby classloader here for the main thread
WITHOUT_CLASSIFICATION	. and all precision digits printed
WITHOUT_CLASSIFICATION	note that we ll potentially see the refs for both the java object and proxy whichever we see first will cause the entry to be removed the other will not match an entry and will be ignored.
WITHOUT_CLASSIFICATION	assign the default values adding to the end of allargs
WITHOUT_CLASSIFICATION	check the entry.setvalue values come back out ok
WITHOUT_CLASSIFICATION	in frame evalstate should already have receiver set as self continue to use it
WITHOUT_CLASSIFICATION	for prec 15 root x0 must surely be ok return small prec roots without iterations
WITHOUT_CLASSIFICATION	dangling char
WITHOUT_CLASSIFICATION	line 1079
WITHOUT_CLASSIFICATION	when reading into a heap buffer the jvm allocates a temporary direct bytebuffer of the requested size. to avoid allocating a huge direct buffer when doing ludicrous reads e.g. 1g or more we split the read up into chunks of no more than 1m
WITHOUT_CLASSIFICATION	relatively cheap test for 32 bit values
WITHOUT_CLASSIFICATION	promise to implement n
WITHOUT_CLASSIFICATION	mri rounds up on nnn5nnn but not nnn5 except for when they do
WITHOUT_CLASSIFICATION	.0f 0.99
WITHOUT_CLASSIFICATION	no dec digits after . error for strict
WITHOUT_CLASSIFICATION	now used as an interpreter event
WITHOUT_CLASSIFICATION	scope method closure to which this cfg belongs entry bb dummy exit bb dummy the actual graph next available basic block id
WITHOUT_CLASSIFICATION	debugging code keeping for now
WITHOUT_CLASSIFICATION	check for frame field reads or writes
WITHOUT_CLASSIFICATION	mri extends in order from last to first
WITHOUT_CLASSIFICATION	load object under value
WITHOUT_CLASSIFICATION	typematcher
WITHOUT_CLASSIFICATION	go through negated powers of 32 until we find one small enough
WITHOUT_CLASSIFICATION	add to the corresponding positive power of 32 for the result. meaningful? no. conformant? yes. i just write the code...
WITHOUT_CLASSIFICATION	if it s an array only add methods for aref aset and length
WITHOUT_CLASSIFICATION	avoid double copying for reads that are larger than the buffer size
WITHOUT_CLASSIFICATION	identity equality
WITHOUT_CLASSIFICATION	additional context surrounding tokens that both the lexer and grammar use.
WITHOUT_CLASSIFICATION	line 1124
WITHOUT_CLASSIFICATION	mri 1.8.6 behavior null byte after leads to string. null byte in other places like 5 0 leads to error.
WITHOUT_CLASSIFICATION	get the control flow graph for this scope only valid for methods closures
WITHOUT_CLASSIFICATION	least significant r bits
WITHOUT_CLASSIFICATION	check current directory if file exists retrieve url and return resource
WITHOUT_CLASSIFICATION	drop through for sign
WITHOUT_CLASSIFICATION	rb enc precise mbclen
WITHOUT_CLASSIFICATION	line 1179
WITHOUT_CLASSIFICATION	add all names for this annotation
WITHOUT_CLASSIFICATION	most significant w r bits
WITHOUT_CLASSIFICATION	no dec digits end of parseable data go to calc
WITHOUT_CLASSIFICATION	set argv from main s args
WITHOUT_CLASSIFICATION	3!
WITHOUT_CLASSIFICATION	no more values to stick in rest arg
WITHOUT_CLASSIFICATION	line 836
WITHOUT_CLASSIFICATION	arity.checkarity runtime argslength
WITHOUT_CLASSIFICATION	line 643
WITHOUT_CLASSIFICATION	line 1138
WITHOUT_CLASSIFICATION	notify thread to proceed
WITHOUT_CLASSIFICATION	line 1155
WITHOUT_CLASSIFICATION	note since we are processing asts loop bodies are processed in depth first manner with outer loops encountered before inner loops and inner loops finished before outer ones. so we can keep track of loops in a loop stack which keeps track of loops as they are encountered. this lets us implement next redo break retry easily for the non closure cases
WITHOUT_CLASSIFICATION	no arg grouping just use bulk assignment methods
WITHOUT_CLASSIFICATION	first try to use drive letter from supplied dir value then try current work dir.
WITHOUT_CLASSIFICATION	whether this scope is used as the argument scope for e.g. zsuper
WITHOUT_CLASSIFICATION	constant vector a
WITHOUT_CLASSIFICATION	will have a trailing . g fills trailing zeroes if
WITHOUT_CLASSIFICATION	optargs and restargs require more work so isolate them and arraylist creation here
WITHOUT_CLASSIFICATION	check if we re a stdio io and ensure we re not badly mutilated
WITHOUT_CLASSIFICATION	jruby 2435 aliasing eval and other special methods should display a warning we warn because we treat certain method names as special for purposes of optimization. hopefully this will be enough to convince people not to alias them.
WITHOUT_CLASSIFICATION	state j 0xffffffffl
WITHOUT_CLASSIFICATION	start setup method
WITHOUT_CLASSIFICATION	looks like someone s trying to raise a java exception. let them.
WITHOUT_CLASSIFICATION	this appears to be some windows only mode. on a java platform this is a no op
WITHOUT_CLASSIFICATION	state i 0xffffffffl
WITHOUT_CLASSIFICATION	. array given to rest should pass itself . array with rest other args should extract array . array with multiple values and no rest should extract args if there are more than one argument
WITHOUT_CLASSIFICATION	. ensure that separator is valid otherwise give it the default paragraph separator..
WITHOUT_CLASSIFICATION	msb is 1 assuring non zero initial array
WITHOUT_CLASSIFICATION	readable only by thread building proxy so don t need to be volatile. used to handle recursive calls to getproxyclass module while proxy is being constructed usually when a constant defined by a class is of the same type as that class .
WITHOUT_CLASSIFICATION	never visited should be fine
WITHOUT_CLASSIFICATION	retry handling in the rescue blocks
WITHOUT_CLASSIFICATION	add in reverse order
WITHOUT_CLASSIFICATION	ok it s a socket...set values accordingly just using af inet since we can t tell from socketchannel...
WITHOUT_CLASSIFICATION	. determine what sort of assigner should be used for the provided iter e.g. block .. assigner provides just the right logic for assigning values to local parameters of the. block.. . this method also has a second optimization which is to set noargblock in the case that. the block is a block which accepts no arguments. the primary reason for this second. optimization is that in the case of a yield with a rubyarray we will bypass some logic. processing the rubyarray into a proper form only to then not do anythign with it . a. secondary benefit is that a simple boolean seems to optimize by hotspot much faster. than the zero arg assigner..
WITHOUT_CLASSIFICATION	change visibility so others can see it
WITHOUT_CLASSIFICATION	can be overridden to be informed when objects are removed
WITHOUT_CLASSIFICATION	package protected
WITHOUT_CLASSIFICATION	something in here is used to build up ruby stack trace...
WITHOUT_CLASSIFICATION	equivalent to mri case 0
WITHOUT_CLASSIFICATION	mri behavior for q do not add trailing nils
WITHOUT_CLASSIFICATION	ruby grammar productions return plenty of nulls.
WITHOUT_CLASSIFICATION	mri behavior if digits is 0 the result is the same as the operator.
WITHOUT_CLASSIFICATION	. result eval arr array c 200 p arr . assertequals c 200 result . result eval arr array. d 200 p arr . assertequals d 200 result .
WITHOUT_CLASSIFICATION	only public methods
WITHOUT_CLASSIFICATION	initialize all flow graph nodes
WITHOUT_CLASSIFICATION	see if module is in chain...cannot match against itself so start at superclass.
WITHOUT_CLASSIFICATION	rb reg initialize str
WITHOUT_CLASSIFICATION	rubymodule module context.getrubyclass
WITHOUT_CLASSIFICATION	presumably this require should fail
WITHOUT_CLASSIFICATION	system.err.println getsign sign
WITHOUT_CLASSIFICATION	accumulate call arguments
WITHOUT_CLASSIFICATION	system.err.println getsign
WITHOUT_CLASSIFICATION	data.currentfile.callmethod context lineno line
WITHOUT_CLASSIFICATION	any exceptions raised must continue to be raised skipping ! restoration
WITHOUT_CLASSIFICATION	if there s a non null superclass we re including into a normal class hierarchy update subclass relationships to avoid stale parent child relationships
WITHOUT_CLASSIFICATION	generate constants initialization code
WITHOUT_CLASSIFICATION	trailing garbage
WITHOUT_CLASSIFICATION	zlib behavior negative win bits means no header and no checksum.
WITHOUT_CLASSIFICATION	our values holder name of variables are kept in staticscope
WITHOUT_CLASSIFICATION	no number
WITHOUT_CLASSIFICATION	to turn a module into an interface collection we add a class instance variable to hold the list of interfaces and modify append features for this module to call append features on each of those interfaces as well
WITHOUT_CLASSIFICATION	states
WITHOUT_CLASSIFICATION	how far ahead we are when reading
WITHOUT_CLASSIFICATION	system.err.println calculatelength str str
WITHOUT_CLASSIFICATION	the cache is full. abandon jit for this method and bail out.
WITHOUT_CLASSIFICATION	too big for us
WITHOUT_CLASSIFICATION	portion of line right after beginning marker
WITHOUT_CLASSIFICATION	in case when the number of occurences is explicitly specified we have to read up the remaining garbage after the 0 to satisfy the requested pattern.
WITHOUT_CLASSIFICATION	we define an actual list to get around bug in java integration 1387115
WITHOUT_CLASSIFICATION	rb iterate value value str step value args step i value iter
WITHOUT_CLASSIFICATION	string has it s own bytelist but it s pointing to a shared buffer byte
WITHOUT_CLASSIFICATION	system.err.println stringtolong val
WITHOUT_CLASSIFICATION	constants for seek
WITHOUT_CLASSIFICATION	if entry starts with a slash skip it since classloader resources never start with a
WITHOUT_CLASSIFICATION	signal uses sun.misc. classes this is not allowed in the security sensitive environments
WITHOUT_CLASSIFICATION	mri behavior on windows it treats as a root of a current drive but only if single slash is present! e.g. if current work directory is d home directory then means d . basically path is treated as a relative path relative to the current drive. path is treated as absolute one.
WITHOUT_CLASSIFICATION	now read unbuffered directly from the file
WITHOUT_CLASSIFICATION	captures begin and end are used when not groups defined source string
WITHOUT_CLASSIFICATION	. new argauxiliarynode 1.getposition string 1.getvalue 1 .
WITHOUT_CLASSIFICATION	. this method takes as input a map of operands to their values and outputs. . if the value map provides a value for any of the instruction s operands. this method is expected to replace the original operands with the simplified values.. it is not required that it do so code correctness is not compromised by failure. to simplify.
WITHOUT_CLASSIFICATION	it was not found at all!
WITHOUT_CLASSIFICATION	see if we already have this descriptor open. if so then we can mostly share the handler keep open file but possibly change the mode .
WITHOUT_CLASSIFICATION	class method
WITHOUT_CLASSIFICATION	not synchronizing these methods no harm if these values get set more than once. also note that there s no chance of getting a partially initialized class module as happens before is guaranteed by volatile write read of constants table.
WITHOUT_CLASSIFICATION	for b.foo
WITHOUT_CLASSIFICATION	does this method define code? default is yes which basically leads to pessimistic but safe optimizations but for library and internal methods this might be false.
WITHOUT_CLASSIFICATION	not closing from finalize
WITHOUT_CLASSIFICATION	note this method produces meaningful results only for rubyio objects. for everything else returns 0.
WITHOUT_CLASSIFICATION	we yield here to hopefully permit the target thread to schedule mri immediately schedules it so this is close but not exact
WITHOUT_CLASSIFICATION	instance config for the script run
WITHOUT_CLASSIFICATION	special classes like collections.empty list are inner classes that are private but implement public interfaces. their methods are all public methods for the public interface. let these public methods execute via setaccessible true .
WITHOUT_CLASSIFICATION	line 1014
WITHOUT_CLASSIFICATION	don t initialize with class don t put in object space and don t taint
WITHOUT_CLASSIFICATION	translate x y x is true x ? y false x build x should return a variable! f is true x beq f false l x build y l
WITHOUT_CLASSIFICATION	fields used for direct optimistic calculation number of significant digits updated as parsed zeroes that may go to significand or exponent offset of decimal pt from start 1 no decimal significand updated as parsed exponent updated as parsed
WITHOUT_CLASSIFICATION	add potentially overridden names to the key. todo see note above re optimizations
WITHOUT_CLASSIFICATION	we reached the end
WITHOUT_CLASSIFICATION	declared type returns the qualified name without for inner classes!!!
WITHOUT_CLASSIFICATION	goto next bucket
WITHOUT_CLASSIFICATION	mri behavior value given in seconds converted to float less than or equal to zero returns immediately returns nil
WITHOUT_CLASSIFICATION	we reached the end of a list
WITHOUT_CLASSIFICATION	. this method exists for us to break up multiple expression when nodes e.g. when 1 2 3 . into individual whennodes. the primary reason for this is to ensure lazy evaluation of. the arguments when foo bar gar to prevent side effects. in the old code this was done. using nested when statements which was awful for interpreter and compilation.. . notes this has semantic equivalence but will not be lexically equivalent. compiler. needs to detect same bodies to simplify bytecode generated..
WITHOUT_CLASSIFICATION	note all fields are final rehash creates new entries when necessary. as documented in java.util.concurrent.concurrenthashmap.java that will statistically affect only a small percentage 20 of entries for a given rehash.
WITHOUT_CLASSIFICATION	remove leading whitespace includes for lax get sign if any
WITHOUT_CLASSIFICATION	single precision native single precision native
WITHOUT_CLASSIFICATION	if refcount is at or below zero we re no longer valid
WITHOUT_CLASSIFICATION	modelled after c ruby implementation java not same as ruby
WITHOUT_CLASSIFICATION	correct position for read write buffering we could invalidate but expensive
WITHOUT_CLASSIFICATION	else body
WITHOUT_CLASSIFICATION	determine if the parameter might be passed as a 32bit int parameter. this just applies to buffer pointer types.
WITHOUT_CLASSIFICATION	this constructor is used by fdopen so we don t increment descriptor ref count
WITHOUT_CLASSIFICATION	inner class use to delimit
WITHOUT_CLASSIFICATION	copy constructor
WITHOUT_CLASSIFICATION	backwards compatibility but threadsafe now
WITHOUT_CLASSIFICATION	build first node only and return true
WITHOUT_CLASSIFICATION	unicode is can be only 21 bits long int is enough
WITHOUT_CLASSIFICATION	may return nil in many circumstances e.g. 3 nan
WITHOUT_CLASSIFICATION	skip anything not related to jruby
WITHOUT_CLASSIFICATION	string matches last paren.
WITHOUT_CLASSIFICATION	unlike weakhashmap our entry does not subclass weakreference but rather makes it a final field. the theory is that doing so should force a happens before relationship wrt the weakreference constructor guaranteeing that the key will be visibile to other threads unless it s been gc ed . see jls 17.5 final fields and 17.4.5 happens before order to confirm or refute my reasoning here.
WITHOUT_CLASSIFICATION	args should be at end
WITHOUT_CLASSIFICATION	todo it s not clear to me why in floatingdecimal the slop calculation performed above for positive exponents isn t used for negative exponents as well. will find out...
WITHOUT_CLASSIFICATION	eval value and save it
WITHOUT_CLASSIFICATION	start a new populator
WITHOUT_CLASSIFICATION	we need to ensure that the variable names generated here cannot conflict with ruby variable names! hence the tthat is appended to the beginning!
WITHOUT_CLASSIFICATION	ruby code frequently uses a platform check to choose nul on windows but since that check doesn t work well on jruby we help it out
WITHOUT_CLASSIFICATION	do nothing allow loop to retry
WITHOUT_CLASSIFICATION	args should be before block
WITHOUT_CLASSIFICATION	if the solution has changed add dsts to the work list. no duplicates please which is why we have bbset.
WITHOUT_CLASSIFICATION	option to str
WITHOUT_CLASSIFICATION	construct the top level execution frame and scope for the main thread
WITHOUT_CLASSIFICATION	is this instruction live or dead? during optimization passes if this instruction causes no side effects and the result of the instruction is not needed by anyone else we can remove this instruction altogether without affecting program correctness.
WITHOUT_CLASSIFICATION	check the 2 values obtained via different means
WITHOUT_CLASSIFICATION	10!
WITHOUT_CLASSIFICATION	case rescuenode return buildrescue node m deferred case retrynode return buildretry node m deferred done
WITHOUT_CLASSIFICATION	rb enc reg error desc
WITHOUT_CLASSIFICATION	explicit zero in mri returns immediately
WITHOUT_CLASSIFICATION	rb reg initialize
WITHOUT_CLASSIFICATION	we do have another slash omit both and . jruby 1606
WITHOUT_CLASSIFICATION	u h hh hhh hhhh hhhhh hhhhhh ...
WITHOUT_CLASSIFICATION	in the case of two arguments mri will discard the portion of the first argument after a decimal point i.e. floor . however in the case of a single argument any portion after the decimal point is honored.
WITHOUT_CLASSIFICATION	first iterate over all required args
WITHOUT_CLASSIFICATION	are we recursing?
WITHOUT_CLASSIFICATION	called before any write to make sure the header is always written before the first bytes
WITHOUT_CLASSIFICATION	newinstance here
WITHOUT_CLASSIFICATION	no match append remainder of buffer and continue with next block
WITHOUT_CLASSIFICATION	inner switch
WITHOUT_CLASSIFICATION	should alter global state
WITHOUT_CLASSIFICATION	rb reg desc
WITHOUT_CLASSIFICATION	raise will also wake the thread from selection
WITHOUT_CLASSIFICATION	set up a local ruby variable
WITHOUT_CLASSIFICATION	negative values
WITHOUT_CLASSIFICATION	encountered a node we don t recognize set everything to true to disable optz
WITHOUT_CLASSIFICATION	if no release method is defined then memory leaks will result.
WITHOUT_CLASSIFICATION	todo this is where we would want to do precision checks to see if it s non destructive to coerce a given type into the target integral primitive
WITHOUT_CLASSIFICATION	irubyobject cacheentry threadcontext irubyobject irubyobject string irubyobject
WITHOUT_CLASSIFICATION	line 449
WITHOUT_CLASSIFICATION	must be called from synchronized locked block! should only be called by variabletablestore variabletablefaststore
WITHOUT_CLASSIFICATION	uhhhh
WITHOUT_CLASSIFICATION	we may need to subtract addition offset off of first
WITHOUT_CLASSIFICATION	line 495
WITHOUT_CLASSIFICATION	finally set javasupport.isenabled to true
WITHOUT_CLASSIFICATION	can t create custom classloaders
WITHOUT_CLASSIFICATION	surrogates
WITHOUT_CLASSIFICATION	if we fail to find as a normal ruby script we try to find as an extension checking for a builtin first.
WITHOUT_CLASSIFICATION	0 0o 0oo
WITHOUT_CLASSIFICATION	line 1070
WITHOUT_CLASSIFICATION	execute command with sh c this does shell expansion of wildcards
WITHOUT_CLASSIFICATION	xhh
WITHOUT_CLASSIFICATION	if there s no receiver evaluate and pass in the superclass or pass self if it no superclass
WITHOUT_CLASSIFICATION	build the new module
WITHOUT_CLASSIFICATION	line 1190
WITHOUT_CLASSIFICATION	process any set of annotations no supported options
WITHOUT_CLASSIFICATION	ok got a non zero have to own up to our horded zeroes
WITHOUT_CLASSIFICATION	line 317
WITHOUT_CLASSIFICATION	14!
WITHOUT_CLASSIFICATION	case ruby hybrid backtrace threadcontext.createrubyhybridbacktrace getruntime backtraceframes javastacktrace getruntime .getdebug .istrue break
WITHOUT_CLASSIFICATION	management monitoring
WITHOUT_CLASSIFICATION	ignore leading zeroes switch
WITHOUT_CLASSIFICATION	add to the jitted methods set
WITHOUT_CLASSIFICATION	adding a post invoke for the cb result serves to both keep it alive until after the function returns and allows us to clean up the native trampoline early instead of letting them accumulate until a gc run
WITHOUT_CLASSIFICATION	assertsame script1 script2
WITHOUT_CLASSIFICATION	ignore leading zeroes
WITHOUT_CLASSIFICATION	make the class name look nice by splitting on and capitalize each segment then joining the together without anything separating them and last put on service at the end.
WITHOUT_CLASSIFICATION	line 1236
WITHOUT_CLASSIFICATION	for fast lookup encoding entry org.jruby.rubyencoding
WITHOUT_CLASSIFICATION	mbclen needmore p
WITHOUT_CLASSIFICATION	retryjump cacheentry threadcontext irubyobject irubyobject
WITHOUT_CLASSIFICATION	other java proxy classes added under their superclass java proxy
WITHOUT_CLASSIFICATION	line 1217
WITHOUT_CLASSIFICATION	. here are hash internals. this could be extracted to a separate class but it s not too large though . .
WITHOUT_CLASSIFICATION	if the next scope out has the same binding scope as this scope it means we are evaling within an eval and in that case we should be sharing the same binding scope.
WITHOUT_CLASSIFICATION	atomic integers for symbol and method ids
WITHOUT_CLASSIFICATION	irubyobject dynamicmethod rubyclass cacheentry threadcontext irubyobject irubyobject string
WITHOUT_CLASSIFICATION	ignore switch
WITHOUT_CLASSIFICATION	if we know what method was being called strip everything before the call. this hides the jruby and reflection internals.
WITHOUT_CLASSIFICATION	18!
WITHOUT_CLASSIFICATION	the replacement new allocates and inits the ruby object as before but also instantiates our proxified java object by calling jcreate!
WITHOUT_CLASSIFICATION	limit the length of negatives if possible also faster
WITHOUT_CLASSIFICATION	avoid double copying for reads that are larger than the buffer size or the destination is a direct buffer.
WITHOUT_CLASSIFICATION	22!
WITHOUT_CLASSIFICATION	string construction routines by not byte buffer and not making the target string shared
WITHOUT_CLASSIFICATION	switch for
WITHOUT_CLASSIFICATION	mri also does a pointer comparison here
WITHOUT_CLASSIFICATION	an atomic long for generating dynamicmethod serial numbers
WITHOUT_CLASSIFICATION	irubyobject irubyobject irubyobject irubyobject rubyclass irubyobject rubyclass rubyclass irubyobject rubyclass visibility irubyobject rubyclass visibility visibility
WITHOUT_CLASSIFICATION	attribute set.
WITHOUT_CLASSIFICATION	by default call instructions cannot be deleted even if their results aren t used by anyone unless we know more about what the call is what it does etc. similarly for evals stores returns.
WITHOUT_CLASSIFICATION	mri behavior always check whether the file is writable or not even if we are to write 0 bytes.
WITHOUT_CLASSIFICATION	assuming the user wants a collection of interfaces that can be included together. make it so.
WITHOUT_CLASSIFICATION	this covers primitives and unlikely lower case class names
WITHOUT_CLASSIFICATION	raw file url just open directly
WITHOUT_CLASSIFICATION	end of parseable data go to calc
WITHOUT_CLASSIFICATION	build a new class and add it to the current scope could be a script module class
WITHOUT_CLASSIFICATION	define a second version that doesn t take a block so we have unique code paths for both cases.
WITHOUT_CLASSIFICATION	value of tz property is of a bit different format which confuses the java s timezone.gettimezone id method and so we need to convert it.
WITHOUT_CLASSIFICATION	check file size special files in proc have zero size and need to be handled by the generic read path.
WITHOUT_CLASSIFICATION	multimethod new logic
WITHOUT_CLASSIFICATION	we only add live threads
WITHOUT_CLASSIFICATION	promise to implement three
WITHOUT_CLASSIFICATION	because we implement java interfaces now we need a new that s aware of those additional virtual supertypes
WITHOUT_CLASSIFICATION	system.err.println bytelisttoinum str
WITHOUT_CLASSIFICATION	currently dead code but useful when we figure out how to actually perform translit.. private static boolean istranslit string encoding . return encoding.tolowercase .indexof translit ! 1 ? true false .
WITHOUT_CLASSIFICATION	haven t found a class continue on as though it were a package
WITHOUT_CLASSIFICATION	insert all nodes in sequence hash them in the final instruction key
WITHOUT_CLASSIFICATION	ruby arrays default to holding 16 elements so we create an. arraylist of the same size if we re not told otherwise.
WITHOUT_CLASSIFICATION	marsaling dumps usec not msec
WITHOUT_CLASSIFICATION	promise to implement three to n with block
WITHOUT_CLASSIFICATION	low level constant interface fetch store list constants for this module
WITHOUT_CLASSIFICATION	base64
WITHOUT_CLASSIFICATION	note nemes gamma can return double.positive infinity or double.negative infinity. when value is an integer less than 1.. we treat 0 as a special case to avoid domain error..
WITHOUT_CLASSIFICATION	ooo
WITHOUT_CLASSIFICATION	the converters handle not only primitive types but also their boxed versions so we should check if we have a converter before checking for isprimitive
WITHOUT_CLASSIFICATION	bindings scopes must always be manyvars scopes since evals can grow them
WITHOUT_CLASSIFICATION	cruby uses sprintf buf . g float dig d this pattern adjusts the output of string.pattern g to mimic the c version.
WITHOUT_CLASSIFICATION	register any new blocking i o requests
WITHOUT_CLASSIFICATION	irubyobject protocol args 4
WITHOUT_CLASSIFICATION	next immediate scope. variable and constant scoping rules make use of this variable in different ways.
WITHOUT_CLASSIFICATION	sign
WITHOUT_CLASSIFICATION	proxy is under construction building thread can safely read non volatile value
WITHOUT_CLASSIFICATION	. if we are setting post arguments we can assume there are no pre or others.
WITHOUT_CLASSIFICATION	carriage return
WITHOUT_CLASSIFICATION	clear runtime so it doesn t get stuck in memory jruby 2933
WITHOUT_CLASSIFICATION	add script run impl used for running this script with a specified threadcontext and self root method of a script is always in file method
WITHOUT_CLASSIFICATION	handle everything after as arguments to the jruby process
WITHOUT_CLASSIFICATION	arg cannot be negative
WITHOUT_CLASSIFICATION	ruby s omg capture all source in a hash feature add each line to buffer when encountering newline or eof for first time.
WITHOUT_CLASSIFICATION	one word type name that starts lower case...it may be a primitive type
WITHOUT_CLASSIFICATION	save sourceline for error reporting to display line where error occurred
WITHOUT_CLASSIFICATION	first non underscore char must be digit
WITHOUT_CLASSIFICATION	if we re already aborting we can receive no further mail
WITHOUT_CLASSIFICATION	mask off once flag
WITHOUT_CLASSIFICATION	?b boolean true if file1 is a block device
WITHOUT_CLASSIFICATION	synchronize on the rubythread for threadgroup updates
WITHOUT_CLASSIFICATION	enebo can these be fast?
WITHOUT_CLASSIFICATION	line 952
WITHOUT_CLASSIFICATION	jrubyservice
WITHOUT_CLASSIFICATION	make mantissa same sign so we only have one code path.
WITHOUT_CLASSIFICATION	internal usage complex rational
WITHOUT_CLASSIFICATION	long hand e.g. q .
WITHOUT_CLASSIFICATION	string construction routines by not byte buffer and making the target string shared
WITHOUT_CLASSIFICATION	r w buffer are we reading or writing?
WITHOUT_CLASSIFICATION	rubydigest
WITHOUT_CLASSIFICATION	case sclassnode return buildsclass node m deferred done done done done done done done done case undefnode return buildundef node m deferred done case valiasnode return buildvalias node m deferred done done
WITHOUT_CLASSIFICATION	assign to appropriate variable
WITHOUT_CLASSIFICATION	first char must be digit
WITHOUT_CLASSIFICATION	decrease value to hit upper range.
WITHOUT_CLASSIFICATION	entry is the first element of this bucket
WITHOUT_CLASSIFICATION	keyword keyword keyword.getkeyword tempval tempval.length
WITHOUT_CLASSIFICATION	compile first node as non expr and then second node
WITHOUT_CLASSIFICATION	caching constructors as they re accessed for each new instance
WITHOUT_CLASSIFICATION	?z boolean true if file1 exists and has a zero length
WITHOUT_CLASSIFICATION	define the annotation for the method
WITHOUT_CLASSIFICATION	basic block id cfg that this basic block belongs to all basic blocks have a starting label list of non label instructions
WITHOUT_CLASSIFICATION	lax str.to f allows underscores between e e and sign
WITHOUT_CLASSIFICATION	file not given
WITHOUT_CLASSIFICATION	provider is not available
WITHOUT_CLASSIFICATION	we set all java methods to optional since many most have overloads
WITHOUT_CLASSIFICATION	implement is called to force this class to create stubs for all methods in the given interface so they ll show up in the list of methods and be invocable without passing through method missing
WITHOUT_CLASSIFICATION	first iterate over all pre args
WITHOUT_CLASSIFICATION	don t override numeric div !
WITHOUT_CLASSIFICATION	the instant at which we will ask dtz what the difference between dst and standard time is
WITHOUT_CLASSIFICATION	line 735
WITHOUT_CLASSIFICATION	java doubles are 64 bit long
WITHOUT_CLASSIFICATION	string after last match
WITHOUT_CLASSIFICATION	. dir is used for relative path loads from a given file as in require .. foo bar
WITHOUT_CLASSIFICATION	fall back to system jca providers
WITHOUT_CLASSIFICATION	if there was a good library before we go back to that
WITHOUT_CLASSIFICATION	a gotcha for long.min value value value
WITHOUT_CLASSIFICATION	block argument to the method closure present class present method table mutations def defs undef alias likely call to eval makes calls that are aware of the frame makes calls that are aware of the frame s self makes calls that are aware of the frame s visibility makes calls that are aware of the frame s block makes calls that are aware of the frame s name makes calls that set or get backref makes calls that set or get lastline makes calls that are aware of the frame s class optional arguments to the method rest arg to the method makes calls that are aware of the scope makes a zero argument super call accesses or sets constants accesses or sets class variables makes normal super call contains a retry
WITHOUT_CLASSIFICATION	for all uninitialized specific arities we defer to the n method which should raise appropriate error in all cases.
WITHOUT_CLASSIFICATION	line 1935
WITHOUT_CLASSIFICATION	case ir instructions are dummy instructions all when then clauses have been converted into if then else blocks
WITHOUT_CLASSIFICATION	look for mangling markers for bound framed methods in class name
WITHOUT_CLASSIFICATION	mri behavior we don t print errno for actual errno errors
WITHOUT_CLASSIFICATION	numeric.equal
WITHOUT_CLASSIFICATION	leave it null and fall back on our normal invocation logic
WITHOUT_CLASSIFICATION	set of utility methods for java based proxy objects
WITHOUT_CLASSIFICATION	check arity in the variable arity version
WITHOUT_CLASSIFICATION	reset the loadtestvar
WITHOUT_CLASSIFICATION	we were woken up without being selected...poll for thread events and go back to sleep
WITHOUT_CLASSIFICATION	deal with case when other is not a string
WITHOUT_CLASSIFICATION	the 1 is for the stripped sign char
WITHOUT_CLASSIFICATION	wire up function call args to use the super fast native invokers
WITHOUT_CLASSIFICATION	uber threadkill catcher since it should always just mean be dead
WITHOUT_CLASSIFICATION	single quote fast path
WITHOUT_CLASSIFICATION	this is now needed since module java isn t in by default
WITHOUT_CLASSIFICATION	how many occurrences of type we want
WITHOUT_CLASSIFICATION	make sure all arguments are modules before calling the callbacks
WITHOUT_CLASSIFICATION	?g boolean true if file1 exists and has a group ownership equal to the caller s group
WITHOUT_CLASSIFICATION	create list of interface names to proxy and make sure they really are interfaces also build a hashcode from all classes to use for retrieving previously created impl
WITHOUT_CLASSIFICATION	we depart here from strict adherence to mri code as mri uses c sprintf in part to format numeric output while we ll use java s numeric formatting code and our own .
WITHOUT_CLASSIFICATION	just push nil for pragmas
WITHOUT_CLASSIFICATION	char hexvalue scanhex 2
WITHOUT_CLASSIFICATION	the default allocator
WITHOUT_CLASSIFICATION	bench fixnum boxed fib
WITHOUT_CLASSIFICATION	the load method is used for loading as a top level script and prepares appropriate scoping around the code
WITHOUT_CLASSIFICATION	create constructorinstaller if there are no constructors it will disable construction
WITHOUT_CLASSIFICATION	line 1282
WITHOUT_CLASSIFICATION	non signature signature with just irubyobject
WITHOUT_CLASSIFICATION	enebo 1.9 is is arg but we need to break apart for 1.8 support.
WITHOUT_CLASSIFICATION	first build assignments for specific named arguments
WITHOUT_CLASSIFICATION	instance variable ruby methods
WITHOUT_CLASSIFICATION	public object invoke object receiver object arg0 object arg1 object arg2 object arg3 throw fail public object invoke object receiver object arg0 object arg1 object arg2 object arg3 object arg4 throw fail
WITHOUT_CLASSIFICATION	the counting of slashes that follows is simply a way to adhere to . ruby s unc or something compatibility. when ruby s expand path is . called with foo bar it will return foo bar . jruby uses . java.io.file and hence returns foo bar . in order to retain . java.io.file in the lower layers and provide full ruby . compatibility the number of extra slashes must be counted and . prepended to the result..
WITHOUT_CLASSIFICATION	will have a trailing .
WITHOUT_CLASSIFICATION	if we have more than one argument then make sure the array is not objectspaced.
WITHOUT_CLASSIFICATION	. end of hash internals. .
WITHOUT_CLASSIFICATION	x0 sqrt
WITHOUT_CLASSIFICATION	standard constructor that accepts ruby rubyclass
WITHOUT_CLASSIFICATION	strip off dot rb for .rb files
WITHOUT_CLASSIFICATION	0x3fff ffff 0x4000 0000
WITHOUT_CLASSIFICATION	block.yield depends on null to represent empty and nil to represent nil nil vs assert argsnode ! null argsnode is not null
WITHOUT_CLASSIFICATION	we have optimized switch cases build a lookupswitch
WITHOUT_CLASSIFICATION	double.max exponent since java 1.6
WITHOUT_CLASSIFICATION	if we ve found the last char of the separator and we ve found at least as many characters as separator length and the last n characters of our buffer match the separator we re done
WITHOUT_CLASSIFICATION	truncate buffer string to zero if provided
WITHOUT_CLASSIFICATION	the java method doesn t care what class it is but we need to. know what to convert it to so we use the object s own class.. if that doesn t help we use string to force a call to the. object s to s method.
WITHOUT_CLASSIFICATION	note we change current frames visibility here because the methods which call this method are all fast e.g. they do not created their own frame .
WITHOUT_CLASSIFICATION	force static scope to claim restarg at 0 so it only implements the version of file
WITHOUT_CLASSIFICATION	on platforms without a c library accessable through jna getpid will return hashcode as used to. using to kill processes could take down many runtimes but by basing on getpid where available we have the same semantics as mri.
WITHOUT_CLASSIFICATION	save the ungot
WITHOUT_CLASSIFICATION	promise to implement zero to n
WITHOUT_CLASSIFICATION	inside a loop jump to body
WITHOUT_CLASSIFICATION	we take the first method found as our n method since for any non specific arity they ll all error the same. if an actual n method is created we use that.
WITHOUT_CLASSIFICATION	fill up the rest with zeroes
WITHOUT_CLASSIFICATION	we know variables cannot be null since localstaticscope will create a 0 length one.
WITHOUT_CLASSIFICATION	line 964
WITHOUT_CLASSIFICATION	line 1269
WITHOUT_CLASSIFICATION	equivalent of t data
WITHOUT_CLASSIFICATION	unsigned int native unsigned long native
WITHOUT_CLASSIFICATION	5 e nnn e nnn
WITHOUT_CLASSIFICATION	we only need to pass in current scope if we are evaluating as a block which is only done for evals . we need to pass this in so that we can appropriately scope down to captured scopes when we are parsing.
WITHOUT_CLASSIFICATION	note mri has a very non trivial way of calculating the precision so we use very simple approximation here
WITHOUT_CLASSIFICATION	we do this b c make tmpname might be overridden
WITHOUT_CLASSIFICATION	advance to first entry
WITHOUT_CLASSIFICATION	remove us from old superclass s child classes
WITHOUT_CLASSIFICATION	self method name
WITHOUT_CLASSIFICATION	java s select doesn t do anything about this so we leave it be.
WITHOUT_CLASSIFICATION	store argument count information into scope
WITHOUT_CLASSIFICATION	1 no match 0 it is dot file not extension
WITHOUT_CLASSIFICATION	. singleton methods. .
WITHOUT_CLASSIFICATION	ignore job was cancelled fixme is this ok?
WITHOUT_CLASSIFICATION	not using a new scope use saved one for a flat closure
WITHOUT_CLASSIFICATION	return result
WITHOUT_CLASSIFICATION	1 intlen
WITHOUT_CLASSIFICATION	methods with required 4 or higher should bind and be callable using reflection jruby 3649
WITHOUT_CLASSIFICATION	fall back on empty env when security disallows environment var access like in an applet
WITHOUT_CLASSIFICATION	variable args no block load null block
WITHOUT_CLASSIFICATION	set constants now that they re initialized
WITHOUT_CLASSIFICATION	since we don t have any other error reporting mechanism we add the error message as an always failing test to the test suite.
WITHOUT_CLASSIFICATION	load should work several times in a row
WITHOUT_CLASSIFICATION	. convert into longs returning unsigned 64 bit values as signed longs. num2long raises a rangeerror on values long.max value .
WITHOUT_CLASSIFICATION	construct a new cache with thread s classloader and no limit
WITHOUT_CLASSIFICATION	do not load the class if not used
WITHOUT_CLASSIFICATION	. public class hello . public static string getmessage . return ..... . . .
WITHOUT_CLASSIFICATION	otherwise we try an unbuffered read to get whatever s available
WITHOUT_CLASSIFICATION	could be pulled down to rubyclass in future rb class boot
WITHOUT_CLASSIFICATION	jruby 1000 fail early when attempting to subclass a final java class solved here by adding an exception throwing inherited
WITHOUT_CLASSIFICATION	otherwise fall back on system temp location
WITHOUT_CLASSIFICATION	shift the decimal point just to the right of the digit to be rounded to divide by 10 abs scale 1 10 s digit 2 100 s digit etc.
WITHOUT_CLASSIFICATION	line 1213
WITHOUT_CLASSIFICATION	add us to new superclass s child classes
WITHOUT_CLASSIFICATION	force t3 to quit just in case if it s stuck. note on some platforms even interrupt might not have an effect if the thread is io blocked.
WITHOUT_CLASSIFICATION	handle flow exceptions just propagating them
WITHOUT_CLASSIFICATION	mri behavior contrary to what seems to be logical when is given mri calculates the distance to the end in order to go backwards.
WITHOUT_CLASSIFICATION	. constructor for internal usage mainly for array array array and array uniq . it doesn t initialize ifnone field.
WITHOUT_CLASSIFICATION	register the new descriptor
WITHOUT_CLASSIFICATION	unfortunately the number of digits in the exponent is not clearly defined in ruby documentation. this is a platform version dependent behavior. on linux mac cygwin nix two digits are used. on windows 3 digits are used. it is desirable for jruby to have consistent behavior and the two digits behavior was selected. this is also in sync with java native sprintf behavior java.util.formatter . e or e
WITHOUT_CLASSIFICATION	1!
WITHOUT_CLASSIFICATION	libc flushes writes on any read from the actual file so we flush here
WITHOUT_CLASSIFICATION	only in ruby 1.9 methods
WITHOUT_CLASSIFICATION	1.9 rb check to integer
WITHOUT_CLASSIFICATION	load null block
WITHOUT_CLASSIFICATION	just save a count of zeroes for now if no digit ends up following them they ll be applied to the exponent rather than the significand and our max length for optimistic calc .
WITHOUT_CLASSIFICATION	methods and closures
WITHOUT_CLASSIFICATION	line 1925
WITHOUT_CLASSIFICATION	the requested precision
WITHOUT_CLASSIFICATION	boot the module and class classes
WITHOUT_CLASSIFICATION	used for tiny smidgen of grammar in lexer see setparsersupport
WITHOUT_CLASSIFICATION	initial precision is that of double numbers 2 63 2 4e18 63 1 an even number of number bits precision seems 16 to 18 digits
WITHOUT_CLASSIFICATION	support io modes that this object was opened with
WITHOUT_CLASSIFICATION	m x m c x m cx
WITHOUT_CLASSIFICATION	no classcastexception!
WITHOUT_CLASSIFICATION	mri behavior with tz equal to gmt or utc time.now is not considered as a proper gmt utc time env tz gmt time.now.gmt? false env tz utc time.now.utc? false hence we need to adjust for that.
WITHOUT_CLASSIFICATION	suboptimal for large hashes 1073741824 85 entries not very likely to happen
WITHOUT_CLASSIFICATION	packaged protected fields and methods below
WITHOUT_CLASSIFICATION	note fix has only no arg form but truncate allows optional parameter.
WITHOUT_CLASSIFICATION	assign the values.
WITHOUT_CLASSIFICATION	line 486
WITHOUT_CLASSIFICATION	normal exit perform finally and return
WITHOUT_CLASSIFICATION	only supports simple parallel assignment of up to 10 values to the same number of assignees
WITHOUT_CLASSIFICATION	check arity
WITHOUT_CLASSIFICATION	this field is used during argument processing to avoid putting rubyarray instances that are purely for utility purposes into objectspace.
WITHOUT_CLASSIFICATION	no hex value after the x .
WITHOUT_CLASSIFICATION	1 intlen .prec
WITHOUT_CLASSIFICATION	get a new label using a generic prefix
WITHOUT_CLASSIFICATION	just rethrow
WITHOUT_CLASSIFICATION	profile
WITHOUT_CLASSIFICATION	equivalent of data wrap struct
WITHOUT_CLASSIFICATION	from encoding special casing ascii to ascii
WITHOUT_CLASSIFICATION	class.allocate object is not allocatable before it is initialized
WITHOUT_CLASSIFICATION	if we have more than one arg make sure the array created to contain them is not objectspaced
WITHOUT_CLASSIFICATION	ensure the object is associated with the wrapper we found it in so that if it comes back we don t re wrap it
WITHOUT_CLASSIFICATION	return sqrt squard with precision of rootmc
WITHOUT_CLASSIFICATION	rubystring aka rb string value
WITHOUT_CLASSIFICATION	initial x use double root multiply by halfback to unshift set new scale
WITHOUT_CLASSIFICATION	retrieve call site from sites array
WITHOUT_CLASSIFICATION	0.0 is ok float range inverted float range? nan infinity infinity
WITHOUT_CLASSIFICATION	if r is not a constant it could actually be a compound value! look in our value map to see if we have a simplified value for the receiver.
WITHOUT_CLASSIFICATION	we can assign if we already have variable of that name here or we are the only scope in the chain which local scopes always are .
WITHOUT_CLASSIFICATION	boot the object class
WITHOUT_CLASSIFICATION	special case for handling accmode since constantine will generate an invalid value if it is not defined by the platform.
WITHOUT_CLASSIFICATION	coerce arguments
WITHOUT_CLASSIFICATION	get a new label using the provided label prefix
WITHOUT_CLASSIFICATION	set this class s method names in var java ovrd methods if this is the new class otherwise get method names from there if this is a proxy superclass.
WITHOUT_CLASSIFICATION	can t support the rest with java
WITHOUT_CLASSIFICATION	no binding given use 0 for both
WITHOUT_CLASSIFICATION	we create one extra dynamicscope on a binding so that when we eval b 1 binding the b will get put into this new dynamic scope. the original scope does not see the new b and successive evals with this binding will. i take it having the ability to have succesive binding evals be able to share same scope makes sense from a programmers perspective. one crappy outcome of this design is it requires dynamic and static scopes to be mutable for this one case.
WITHOUT_CLASSIFICATION	variables live at entry of this node variables live at exit of node temporary set of live variables size of the in and out bit sets
WITHOUT_CLASSIFICATION	ignore backslashed spaces in w
WITHOUT_CLASSIFICATION	must have been loaded from our known classloader hierarchy
WITHOUT_CLASSIFICATION	invert the sign since tz format and java format use opposite signs sigh... also java api requires the sign to be always present be it or .
WITHOUT_CLASSIFICATION	irubyobject dynamicmethod threadcontext irubyobject rubyclass string irubyobject
WITHOUT_CLASSIFICATION	tainting here if we ever want it. secure 4
WITHOUT_CLASSIFICATION	a thread pool to use for executing this runtime s ruby threads
WITHOUT_CLASSIFICATION	.append x directory strip off text before !ruby line and perhaps cd to directory n
WITHOUT_CLASSIFICATION	note that this object equality check is intentional to ensure the string and its interned version are the same object.
WITHOUT_CLASSIFICATION	rb match busy
WITHOUT_CLASSIFICATION	assert internedsymbol internedsymbol.intern internedsymbol is not interned
WITHOUT_CLASSIFICATION	does this instruction have side effects as a result of its operation this information is used in optimization phases to impact dead code elimination and other optimization passes
WITHOUT_CLASSIFICATION	construct local variables based on parameter names passed in
WITHOUT_CLASSIFICATION	if any exceptions were raised we fail
WITHOUT_CLASSIFICATION	always need at least a 0
WITHOUT_CLASSIFICATION	if we re running from within an ide we may not have the .rb files in our classpath. try to find them in the filesystem instead.
WITHOUT_CLASSIFICATION	! error string
WITHOUT_CLASSIFICATION	label for the start of the method label for the end of the method
WITHOUT_CLASSIFICATION	let m be the exact digits precision in an earlier! loop
WITHOUT_CLASSIFICATION	bench straight up integer fib 30
WITHOUT_CLASSIFICATION	for foo . args are only significant in maintaining backwards compatible ast structure
WITHOUT_CLASSIFICATION	bench integer fib
WITHOUT_CLASSIFICATION	reset the state
WITHOUT_CLASSIFICATION	obtain d
WITHOUT_CLASSIFICATION	line 159 token constants
WITHOUT_CLASSIFICATION	comparisons checks checks if the operand is non null and non false eqq a call used only for its conditional results as in case when begin rescue ...
WITHOUT_CLASSIFICATION	store call information so method missing impl can use it
WITHOUT_CLASSIFICATION	actual required is greater than 3 raise error we don t support actual required 3
WITHOUT_CLASSIFICATION	switch if
WITHOUT_CLASSIFICATION	initial size state stack value stack current input tokens to shift
WITHOUT_CLASSIFICATION	.
WITHOUT_CLASSIFICATION	mri behavior week values are monotonous. so weeks that effectively belong to previous year will get the value of 0 not 52 or 53 as in java.
WITHOUT_CLASSIFICATION	don t bother
WITHOUT_CLASSIFICATION	arg grouping use slower arg walking logic
WITHOUT_CLASSIFICATION	for nodes do not have their own scope so we pass null to indicate this. for s are implemented as blocks in evaluation but they have no scope so we just deal with this lack of scope throughout its lifespan. we should probably change the way this works to get rid of multiple null checks.
WITHOUT_CLASSIFICATION	always use gmt since that s required by java api.
WITHOUT_CLASSIFICATION	explicitly use utf 8 here. c.f. history.addtohistory using line.asutf8
WITHOUT_CLASSIFICATION	remaining arguments are for the script itself
WITHOUT_CLASSIFICATION	assertequals foo n bar eval h.each val p val assertequals foo bar eval p h.each val
WITHOUT_CLASSIFICATION	line 280
WITHOUT_CLASSIFICATION	if an io exception occurs something odd but possible a directory may return null.
WITHOUT_CLASSIFICATION	all done with lookup attempts release monitor
WITHOUT_CLASSIFICATION	select appropriate call site dup receiver load self
WITHOUT_CLASSIFICATION	notify the calling thread that we re about to go to sleep the first time
WITHOUT_CLASSIFICATION	line 1115
WITHOUT_CLASSIFICATION	keep a reference to the temporary memory in the cache so it does not get freed by the gc until the struct is freed
WITHOUT_CLASSIFICATION	obtain c
WITHOUT_CLASSIFICATION	classid is the name of the class module sans where it is located. if it is null then it an anonymous class.
WITHOUT_CLASSIFICATION	here we create an anonymous exception type used for unrolling the stack. mri creates a new one for every call to timeout which can be costly. we opt to use a single exception type for all cases to avoid this overhead.
WITHOUT_CLASSIFICATION	mri ignores seek errors presumably for unseekable files like serial ports jruby 2979 so we shall too.
WITHOUT_CLASSIFICATION	start off with a neutral parent
WITHOUT_CLASSIFICATION	static private final string translit translit
WITHOUT_CLASSIFICATION	set a value in the rubyhash
WITHOUT_CLASSIFICATION	double precision native
WITHOUT_CLASSIFICATION	value of last token which had a value associated with it.
WITHOUT_CLASSIFICATION	obtain a
WITHOUT_CLASSIFICATION	rename is successful
WITHOUT_CLASSIFICATION	not enough bytes
WITHOUT_CLASSIFICATION	specialized for value
WITHOUT_CLASSIFICATION	must let original string know we re modifying so shared buffers aren t damaged
WITHOUT_CLASSIFICATION	must be at least one digit for strict
WITHOUT_CLASSIFICATION	switch for no more data ok for strict to go calc
WITHOUT_CLASSIFICATION	treat start and end as start...end for end 0 start..end for end 0
WITHOUT_CLASSIFICATION	return warnmultireturnnil ruby
WITHOUT_CLASSIFICATION	line 1279
WITHOUT_CLASSIFICATION	ruby ignores empty syswrites
WITHOUT_CLASSIFICATION	specific arity
WITHOUT_CLASSIFICATION	push 0 . if you look at original macro stack n 1 stack 0 no change.
WITHOUT_CLASSIFICATION	todo 1.9 rb enc symname p
WITHOUT_CLASSIFICATION	if adding a module under a constant name set that module s basename to the constant name
WITHOUT_CLASSIFICATION	not that is loaded loop around to resolve it next pass
WITHOUT_CLASSIFICATION	line 335
WITHOUT_CLASSIFICATION	is there a supplied proc argument or do we assume a block was supplied
WITHOUT_CLASSIFICATION	limit each iteration to a max of bulk read size to avoid over size allocations
WITHOUT_CLASSIFICATION	actualpath new file rubyfile.expanduserpath runtime.getcurrentcontext reportedpath
WITHOUT_CLASSIFICATION	not so backwards compatible here but no one should have been calling this anyway.
WITHOUT_CLASSIFICATION	open up the to java and as coercion methods on ruby objects via kernel
WITHOUT_CLASSIFICATION	load always uses irubyobject so simple closure offset calculation here
WITHOUT_CLASSIFICATION	methods of the nil class nil
WITHOUT_CLASSIFICATION	. declare those components as beans in bsf. then it will be. possible to access those components in ruby as global. variables frame menubar ... .
WITHOUT_CLASSIFICATION	let rescuedblock continue
WITHOUT_CLASSIFICATION	. represents the the dynamic portion of scoping information. the variablevalues are the. values of assigned local or block variables. the staticscope identifies which sort of. scope this is block or local .. . properties of dynamic scopes . 1. static and dynamic scopes have the same number of names to values. 2. size of variables and thus names is determined during parsing. so those structured do. not need to change. . fixme when creating dynamic scopes we sometimes accidentally pass in extra parents. this. is harmless other than wasting memory but we should not do that. we can fix this in two. ways . 1. fix all callers. 2. check parent that is passed in and make if new instance is local then its parent is not local.
WITHOUT_CLASSIFICATION	c bind eval
WITHOUT_CLASSIFICATION	this is pretty inefficient for building an array so just raise an error if someone s using it for a lot of elements
WITHOUT_CLASSIFICATION	tries to load at compile time the constant referred to by constref . this might be possible if the constant is defined and is not a forward reference to a value that will be defined later in the class.
WITHOUT_CLASSIFICATION	try to load the specified name only if that fails try to define the class
WITHOUT_CLASSIFICATION	if it s a singleton class and the real class is proc we re doing closure conversion so just use proc s hashcode
WITHOUT_CLASSIFICATION	we do both writable and writable real through the same method because in our java process effective and real userid will always be the same.
WITHOUT_CLASSIFICATION	. module methods. .
WITHOUT_CLASSIFICATION	remove the executor task now to avoid cancelled tasks accumulating until an executor thread can schedule and remove them
WITHOUT_CLASSIFICATION	promise to implement two to n with block
WITHOUT_CLASSIFICATION	but there s a superclass passed in use it
WITHOUT_CLASSIFICATION	?w boolean true if file1 exists and is writable by effective uid gid
WITHOUT_CLASSIFICATION	call throwexception via jruby
WITHOUT_CLASSIFICATION	assume ninit 16 prec
WITHOUT_CLASSIFICATION	add aliases in type nativetype and ffi type
WITHOUT_CLASSIFICATION	normal file descriptor..try to work with it
WITHOUT_CLASSIFICATION	rubygems is too specific on host cpu so until we have real need lets default to universal setconfig confighash arch system.getproperty os.arch java system.getproperty java.specification.version
WITHOUT_CLASSIFICATION	invalid ranges result in an empty string
WITHOUT_CLASSIFICATION	close process output see jruby 3405 hooking up to parent process stdin caused problems for irb etc using stdin.
WITHOUT_CLASSIFICATION	this is needed to unpack stuff
WITHOUT_CLASSIFICATION	refresh call adapter since it matters if this is iter based or not
WITHOUT_CLASSIFICATION	complete the request by filling the read buffer first
WITHOUT_CLASSIFICATION	rehash the table if the threshold is exceeded
WITHOUT_CLASSIFICATION	ordering of array traversal not important just intuitive
WITHOUT_CLASSIFICATION	we already confirmed above that length 0
WITHOUT_CLASSIFICATION	. if there is exactly one callback argument to the function . then a block can be given and automatically subsituted for the callback. parameter..
WITHOUT_CLASSIFICATION	128k seems to be the minimum at which the stat seek is faster than reallocation
WITHOUT_CLASSIFICATION	ruby interpreter compatibilty usage ruby switches programfile arguments
WITHOUT_CLASSIFICATION	define system.getproperties in env java
WITHOUT_CLASSIFICATION	jrubymethod name exact?
WITHOUT_CLASSIFICATION	terminate and advance buffer when we find our char
WITHOUT_CLASSIFICATION	if there s no second argument simply use the working directory of the runtime.
WITHOUT_CLASSIFICATION	wow the only time we can use the java protocol
WITHOUT_CLASSIFICATION	makes sure the key is not already in the hashtable.
WITHOUT_CLASSIFICATION	check for special shell characters at the beginning and end of each command word and don t run in process if we find them.
WITHOUT_CLASSIFICATION	should we run this pass on the current scope before running it on nested scopes?
WITHOUT_CLASSIFICATION	there is something valid in the sun path component
WITHOUT_CLASSIFICATION	system.err.println figureoutbase base base
WITHOUT_CLASSIFICATION	symbol class methods.. .
WITHOUT_CLASSIFICATION	. nested class whose instances act as thunks reacting to to str method. called from exception to str exception message . mri equivalent rb cnameerrormesg class name message construction method ! . to str implementation name err mesg to str . . todo this class should not be lookupable.
WITHOUT_CLASSIFICATION	no block from a nil proc
WITHOUT_CLASSIFICATION	setting the loader needs to reset the class cache
WITHOUT_CLASSIFICATION	make sure the main stream is set to null
WITHOUT_CLASSIFICATION	until we get a little more solid on 1.9 support we will only run interpreted mode
WITHOUT_CLASSIFICATION	this method is intended only for defining new classes in ruby code so it uses the allocator of the specified superclass or default to the object allocator. it should not be used to define classes that require a native allocator.
WITHOUT_CLASSIFICATION	bench fully boxed fib
WITHOUT_CLASSIFICATION	backspace
WITHOUT_CLASSIFICATION	load target for invocations
WITHOUT_CLASSIFICATION	void methods should work
WITHOUT_CLASSIFICATION	difficult case send to double floatingdecimal
WITHOUT_CLASSIFICATION	init
WITHOUT_CLASSIFICATION	asserttrue rubyobject.kind of ruby.getclasses .getstringclass .isfalse
WITHOUT_CLASSIFICATION	from commandlineparser
WITHOUT_CLASSIFICATION	adjust for buffered data
WITHOUT_CLASSIFICATION	v g v 1 2 sqrt
WITHOUT_CLASSIFICATION	switch while
WITHOUT_CLASSIFICATION	package private
WITHOUT_CLASSIFICATION	getsimplifiedoperand returns the value of this operand fully simplified getsimplifiedoperand returns the operand in a form that can be materialized into bytecode if it cannot be completely optimized away the value is used during optimizations and propagated through the ir. but it is thrown away after that. but the operand form is used for constructing the compound objects represented by the operand. example a 1 b 3 4 c a b d 2 c getvalue c 1 3 4 getsimplifiedoperand c 1 b getvalue d 2 1 3 4 getsimplifiedoperand d 2 c note that a b c d are all objects and c has a reference to objects a and b and d has a reference to c. so if contents of a or b is modified the simplified value s of c and d also change! this difference is captured by these two methods.
WITHOUT_CLASSIFICATION	if the length is not a multiple of 8 we need to pad the last byte
WITHOUT_CLASSIFICATION	int n 10
WITHOUT_CLASSIFICATION	x e v sqrt
WITHOUT_CLASSIFICATION	jruby 2380 associate future early so it shows up in thread.list right away in case it doesn t run immediately
WITHOUT_CLASSIFICATION	increase precision next iteration supplies n exact digits
WITHOUT_CLASSIFICATION	the datastruct is a place where custom information can be contained for core implementations that doesn t necessarily want to go to the trouble of creating a subclass of rubyobject. the openssl implementation uses this heavily to save holder objects containing java cryptography objects. java integration uses this to store the java object ref. protected transient object datastruct
WITHOUT_CLASSIFICATION	initial v the reciprocal v0 1 2 x
WITHOUT_CLASSIFICATION	estimate the square root with the foremost 62 bits of squard bi and scale are a tandem
WITHOUT_CLASSIFICATION	function not used...but it gets rid of unused warnings in eclipse we do call those methods from ruby so they are not really unused .
WITHOUT_CLASSIFICATION	collect iteration precisions beforehand
WITHOUT_CLASSIFICATION	skip this one probably no ls windows
WITHOUT_CLASSIFICATION	just in case add a bit of extra precision
WITHOUT_CLASSIFICATION	block argument assignment if there s a block arg
WITHOUT_CLASSIFICATION	general number and precision checking
WITHOUT_CLASSIFICATION	run ten separate calls into ruby with delay and explicit gc
WITHOUT_CLASSIFICATION	if the killee thread is the same as the killer thread just die
WITHOUT_CLASSIFICATION	wait until thread has initialized
WITHOUT_CLASSIFICATION	the name of this source e.g. a filename foo.rb
WITHOUT_CLASSIFICATION	note mri s sqrt precision is limited by 100 but we allow values more than 100.
WITHOUT_CLASSIFICATION	mri behavior raise argumenterror for unknown command before checking number of args.
WITHOUT_CLASSIFICATION	calculation for negatives when u specified for values integer.min value 2 mri uses the equivalent of long neg u long integer.max value 1 1 val for smaller values biginteger math is required to conform to mri s result.
WITHOUT_CLASSIFICATION	line 766
WITHOUT_CLASSIFICATION	sync flush
WITHOUT_CLASSIFICATION	unread back
WITHOUT_CLASSIFICATION	line 476
WITHOUT_CLASSIFICATION	look in classpath next we do not use file as a test since unc names will match note jar resources must never begin with an . previous code said always begin with a
WITHOUT_CLASSIFICATION	note that addmethod now does its own put so any change made to functionality here should be made there as well
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	line 513
WITHOUT_CLASSIFICATION	add a forward reference from tgt currbb
WITHOUT_CLASSIFICATION	beneath are rewritten coercions that reflect mri logic the aboves are used only by rubybigdecimal
WITHOUT_CLASSIFICATION	empirically it appears that to ary coersions always return array or nil so this should always be an array by now.
WITHOUT_CLASSIFICATION	line 414
WITHOUT_CLASSIFICATION	rethrow to outer flow catcher
WITHOUT_CLASSIFICATION	todo make it 16 now ? must be power of 2!
WITHOUT_CLASSIFICATION	this is legal when removing an undef
WITHOUT_CLASSIFICATION	interrupt the target thread in case it s blocking or waiting warning we no longer interrupt the target thread since this usually means interrupting io and with nio that means the channel is no longer usable. we either need a new way to handle waking a target thread that s waiting on io or we need to accept that we can t wake such threads and must wait for them to complete their operation. threadimpl.interrupt
WITHOUT_CLASSIFICATION	line 1244
WITHOUT_CLASSIFICATION	channeldescriptors opened by sysopen are cached to avoid collection
WITHOUT_CLASSIFICATION	ensure we have a new interpreter for each test. previous we were using the same interpreter which caused problems as soon as one test failed.
WITHOUT_CLASSIFICATION	we don t want a package name beginning with dots so we remove them
WITHOUT_CLASSIFICATION	make sure the pipe stream is set to null
WITHOUT_CLASSIFICATION	callbacks to fill in method body
WITHOUT_CLASSIFICATION	make a nil node if no body. notice this is not part of ast.
WITHOUT_CLASSIFICATION	fall through
WITHOUT_CLASSIFICATION	returns nil if !.backtrace is not an array
WITHOUT_CLASSIFICATION	if it s an inner class and it s not public we can t access it skip population of declared elements
WITHOUT_CLASSIFICATION	if this is not a closure the break is equivalent to jumping to the loop end label
WITHOUT_CLASSIFICATION	do not open as rw by default since a file with read only permissions will fail on rw
WITHOUT_CLASSIFICATION	bench long fib
WITHOUT_CLASSIFICATION	in the current logic if we get here we know that module is not an includedmodulewrapper so there s no need to fish out the delegate. but just in case the logic should change later let s do it anyway
WITHOUT_CLASSIFICATION	leave as a normal array
WITHOUT_CLASSIFICATION	switch on the object s native type . this allows use defined classes that have extended core native types to piggyback on their marshalling logic.
WITHOUT_CLASSIFICATION	note we can t use file.exists to check whether the symlink exists or not because that method returns false for existing but broken symlink. so we try without the existence check but in the try catch block. mri behavior symlink? on broken symlink should return true.
WITHOUT_CLASSIFICATION	case 4 signature sig object.class object.class object.class object.class object.class break case 5 signature sig object.class object.class object.class object.class object.class object.class break
WITHOUT_CLASSIFICATION	contains a list of all blocks as procs that should be called when the runtime environment exits.
WITHOUT_CLASSIFICATION	. all the positive powers of 10 that can be. represented exactly in double float.. from sun.misc.floatingdecimal.java .
WITHOUT_CLASSIFICATION	there might be more test classes in a single file so we iterate over them
WITHOUT_CLASSIFICATION	silence
WITHOUT_CLASSIFICATION	rethrow exception rethrow it
WITHOUT_CLASSIFICATION	this is needed when the enclosing class or module is a singleton. in that case we generated a name such as null foo which broke marshalling among others. the correct thing to do in this situation is to insert the generate the name of form class 01xasdfasd if it s a singleton module class which this code accomplishes.
WITHOUT_CLASSIFICATION	no digits error
WITHOUT_CLASSIFICATION	1 don t set permissions
WITHOUT_CLASSIFICATION	error position
WITHOUT_CLASSIFICATION	if we get here the class and field exist construct our unsafe impl that calls it directly
WITHOUT_CLASSIFICATION	generate a real method signature for the method with to from coercions
WITHOUT_CLASSIFICATION	wait for the go signal
WITHOUT_CLASSIFICATION	note intentionally returning the actual array returned from java rather than wrapping it in a rubyarray. wave of the future when java class will return the actual class rather than a javaclass wrapper.
WITHOUT_CLASSIFICATION	snapshot of contents of directory current position in directory
WITHOUT_CLASSIFICATION	first char must be digit or decimal point
WITHOUT_CLASSIFICATION	a while node could receive non local flow control from any of these a closure within the loop an eval within the loop a block arg based proc called within the loop
WITHOUT_CLASSIFICATION	if channel is already closed we re no longer valid
WITHOUT_CLASSIFICATION	indices for temp values
WITHOUT_CLASSIFICATION	head must not be null and there must be no args like arg
WITHOUT_CLASSIFICATION	exclusive locks in java require the channel to be writable otherwise an exception is thrown terminating jruby execution . but flock behavior of mri is that it allows exclusive locks even on non writable file. so we convert exclusive lock to shared lock if the channel is not writable to better match the mri behavior.
WITHOUT_CLASSIFICATION	append what we read into our buffer and allow the loop to continue
WITHOUT_CLASSIFICATION	zero args no block do nothing
WITHOUT_CLASSIFICATION	we don t support .so but some stdlib require .so directly replace it with .jar to look for an extension type we do support
WITHOUT_CLASSIFICATION	label for the start of the closure used to implement redo label for the end of the closure used to implement retry
WITHOUT_CLASSIFICATION	then deliver mail to the target
WITHOUT_CLASSIFICATION	confirm minimum args provided
WITHOUT_CLASSIFICATION	public fields methods
WITHOUT_CLASSIFICATION	predefine a few other methods we invoke directly elsewhere
WITHOUT_CLASSIFICATION	line 152 token constants
WITHOUT_CLASSIFICATION	force heap scope behavior since it uses parent s scope
WITHOUT_CLASSIFICATION	if we don t have a body check for required or opt args if opt args they could have side effects if required args need to raise errors if too few args passed otherwise method does nothing make it a nop
WITHOUT_CLASSIFICATION	check the visibility of the previous frame which will be the frame in which the class is being eval ed
WITHOUT_CLASSIFICATION	creates the new entry.
WITHOUT_CLASSIFICATION	and we were given a specific exception
WITHOUT_CLASSIFICATION	finally with no exception
WITHOUT_CLASSIFICATION	compute meet over all sources and compute destination basic blocks that should then be processed. sources targets depends on direction of the data flow problem
WITHOUT_CLASSIFICATION	bang true no match no substitution
WITHOUT_CLASSIFICATION	only whitespace allowed after value for strict
WITHOUT_CLASSIFICATION	accessor methods.
WITHOUT_CLASSIFICATION	silent ?
WITHOUT_CLASSIFICATION	no digits go calc will return 0.0 for lax
WITHOUT_CLASSIFICATION	ruby uses qnil here we use dummy because we need a class
WITHOUT_CLASSIFICATION	loop until a context is available to clean up softrefs that might have been collected
WITHOUT_CLASSIFICATION	not a class
WITHOUT_CLASSIFICATION	version information
WITHOUT_CLASSIFICATION	system.err.println adding char char cx with number cx
WITHOUT_CLASSIFICATION	io.available only returns 0 after eof is encountered so we need to differentiate between the empty string and eof
WITHOUT_CLASSIFICATION	the assumption here is that the in stream provides proper available support. if available always returns 0 we ll hang!
WITHOUT_CLASSIFICATION	if it s less than 200 do median of 3
WITHOUT_CLASSIFICATION	store the local vars in a local variable for preparing the class using previous scope
WITHOUT_CLASSIFICATION	constant api methods
WITHOUT_CLASSIFICATION	let the width if any get processed in the next loop so any leading 0 gets treated correctly
WITHOUT_CLASSIFICATION	class ? script1 defaultmethod runtime1.getobject .getmethods .get foo .getjitcompilerscript .getclass class ? script2 defaultmethod runtime2.getobject .getmethods .get foo .getjitcompilerscript .getclass
WITHOUT_CLASSIFICATION	low level class variable interface fetch store list class variables for this module
WITHOUT_CLASSIFICATION	position within source must reflect the actual offset and column. since we ate an extra character here this accounting is normally done in read we should update position info.
WITHOUT_CLASSIFICATION	prepare loadservice and load path
WITHOUT_CLASSIFICATION	and subtract as neeeded.
WITHOUT_CLASSIFICATION	range each func range step i b e args
WITHOUT_CLASSIFICATION	digits arr shifted update all
WITHOUT_CLASSIFICATION	sss fixme can this ever be null?
WITHOUT_CLASSIFICATION	mri behavior just plain or are considered illegal on windows.
WITHOUT_CLASSIFICATION	what we passed to the constructor for method path
WITHOUT_CLASSIFICATION	install direct java methods with mangled name so send can call them directly.
WITHOUT_CLASSIFICATION	check visibility dup method
WITHOUT_CLASSIFICATION	ruby instance methods
WITHOUT_CLASSIFICATION	mri behavior be default 2 digits in the exponent. use 3 digits only when necessary. see comment for writeexp method for more details.
WITHOUT_CLASSIFICATION	constant table methods pass to delegate
WITHOUT_CLASSIFICATION	exec needs to behave differently in process because it s technically supposed to replace the calling process. so if we re supposed to run in process we allow it to use the default streams and not use pumpers at all. see jruby 2156 and jruby 2154.
WITHOUT_CLASSIFICATION	this relies on the ruby rounding enumerations java ones which they currently all are
WITHOUT_CLASSIFICATION	it s either as converted as we can make it via above logic or it s not one of the types we convert so just pass it out as is without wrapping
WITHOUT_CLASSIFICATION	a gotcha
WITHOUT_CLASSIFICATION	now we provide default impls of a number of signatures. for each arity we first generate a non block version of the method which just adds null block and re calls allowing e.g. compiled code which always can potentially take a block to only generate the block receiving signature and still avoid arg boxing. we then provide default implementations of each block accepting method that in turn call the irubyobject block version of call. this then finally falls back on the minimum implementation requirement for dynamic method handles.
WITHOUT_CLASSIFICATION	we get canonical path to try and flatten the path out. a dir subdir .. should return as cnutter do we want to flatten path out?
WITHOUT_CLASSIFICATION	this should only be called by this and rubyfile. it allows this object to be created without a iohandler.
WITHOUT_CLASSIFICATION	cx c m x
WITHOUT_CLASSIFICATION	base
WITHOUT_CLASSIFICATION	by default no flush
WITHOUT_CLASSIFICATION	line 286
WITHOUT_CLASSIFICATION	push false
WITHOUT_CLASSIFICATION	mri behavior
WITHOUT_CLASSIFICATION	false zero
WITHOUT_CLASSIFICATION	make sure any read s after close fail.
WITHOUT_CLASSIFICATION	no passed in block lets check next outer frame for one proc.new
WITHOUT_CLASSIFICATION	line 551
WITHOUT_CLASSIFICATION	this looks wrong but it s the way mri does it.
WITHOUT_CLASSIFICATION	for future compatibility as constructors move toward not accepting metaclass?
WITHOUT_CLASSIFICATION	proc class
WITHOUT_CLASSIFICATION	note the indicies here match exactly the signal values do not reorder
WITHOUT_CLASSIFICATION	rb exc new3
WITHOUT_CLASSIFICATION	mri behavior in finished mode we work as pass through
WITHOUT_CLASSIFICATION	zstream actually isn t allocatable
WITHOUT_CLASSIFICATION	mri behavior enforced by tests
WITHOUT_CLASSIFICATION	registerthreaddumpsignalhandler runtime
WITHOUT_CLASSIFICATION	dump usec not msec
WITHOUT_CLASSIFICATION	handle ruby exceptions raiseexception
WITHOUT_CLASSIFICATION	io.finish
WITHOUT_CLASSIFICATION	biginteger required a sign byte in incoming array
WITHOUT_CLASSIFICATION	modified to match how hash is calculated in 1.8.2
WITHOUT_CLASSIFICATION	retry handling in the rescue block
WITHOUT_CLASSIFICATION	float number of seconds
WITHOUT_CLASSIFICATION	if we define a class in ruby but later want to allow it to be defined in java the allocator needs to be updated
WITHOUT_CLASSIFICATION	we can just use dt since it is immutable
WITHOUT_CLASSIFICATION	for jdk 1.4 we can use cal.gettimeinmillis
WITHOUT_CLASSIFICATION	set up with min values and then add to allow rolling over
WITHOUT_CLASSIFICATION	pad with a 0
WITHOUT_CLASSIFICATION	mri accepts additional wday argument which appears to be ignored.
WITHOUT_CLASSIFICATION	if we might be moving this time from !dst dst the offset is assumed to be the same as it was just before we last moved from dst !dst
WITHOUT_CLASSIFICATION	no bignorm here needed
WITHOUT_CLASSIFICATION	ignores usec if 8 args for compatibility with parsedate or if not supplied.
WITHOUT_CLASSIFICATION	time class methods
WITHOUT_CLASSIFICATION	if the value will fit in a fixnum return one of those.
WITHOUT_CLASSIFICATION	. utility methods. .
WITHOUT_CLASSIFICATION	mri issuses warning here on rbignum x len sizeof bdigits yy 1024 1024
WITHOUT_CLASSIFICATION	attempt to decriticalize all if we re the critical thread
WITHOUT_CLASSIFICATION	depends on io filetest
WITHOUT_CLASSIFICATION	???
WITHOUT_CLASSIFICATION	len margin
WITHOUT_CLASSIFICATION	volatile to ensure that initial nil fill is visible to other threads
WITHOUT_CLASSIFICATION	elements and trailing nils
WITHOUT_CLASSIFICATION	dir tmpdir
WITHOUT_CLASSIFICATION	rb ary new2. just allocates the internal array.
WITHOUT_CLASSIFICATION	. plain internal array assignment.
WITHOUT_CLASSIFICATION	newobj and objsetup equivalent. fastest one for shared arrays optional objectspace.
WITHOUT_CLASSIFICATION	array constructors taking the metaclass to fulfil mri array subclass behaviour. .
WITHOUT_CLASSIFICATION	create global constants and variables
WITHOUT_CLASSIFICATION	satisfy java.util.list interface for java integration
WITHOUT_CLASSIFICATION	not reached
WITHOUT_CLASSIFICATION	windows does not support these functions so we won t even try this also matches ruby behavior for jruby 2353.
WITHOUT_CLASSIFICATION	possibly should not in object space
WITHOUT_CLASSIFICATION	1.9 seems to just do inspect for to s now
WITHOUT_CLASSIFICATION	? ? ? boolean
WITHOUT_CLASSIFICATION	see ruby core 17483
WITHOUT_CLASSIFICATION	gmt 00 00 etc gmt see mri behavior comment below.
WITHOUT_CLASSIFICATION	pre set for the sake of terminating recursive calls
WITHOUT_CLASSIFICATION	extras flag
WITHOUT_CLASSIFICATION	...nothing
WITHOUT_CLASSIFICATION	see http www.gzip.org zlib rfc gzip.html
WITHOUT_CLASSIFICATION	zlib no flush
WITHOUT_CLASSIFICATION	utility method
WITHOUT_CLASSIFICATION	object is ready create top self
WITHOUT_CLASSIFICATION	not to be confused with rubyobject s flags
WITHOUT_CLASSIFICATION	1.8 include?
WITHOUT_CLASSIFICATION	the method is intentionally not public since it typically should not be used outside of the core.
WITHOUT_CLASSIFICATION	flags 4 bytes of modified time
WITHOUT_CLASSIFICATION	rubyclasspathvariable
WITHOUT_CLASSIFICATION	it won t hurt fixnums
WITHOUT_CLASSIFICATION	mri does it!
WITHOUT_CLASSIFICATION	won t hurt fixnums
WITHOUT_CLASSIFICATION	second argument is allowed but ignored mri
WITHOUT_CLASSIFICATION	recheck condition
WITHOUT_CLASSIFICATION	initialize kernel and include into object
WITHOUT_CLASSIFICATION	terminate trycompile will have printed out an error and we re done
WITHOUT_CLASSIFICATION	used for the redo command
WITHOUT_CLASSIFICATION	initialize the root of the class hierarchy completely
WITHOUT_CLASSIFICATION	construct key services
WITHOUT_CLASSIFICATION	initialize the dummy class used as a marker
WITHOUT_CLASSIFICATION	get the main threadcontext gets constructed for us
WITHOUT_CLASSIFICATION	initialize all the core classes
WITHOUT_CLASSIFICATION	event name filename line numbers should be 1 based
WITHOUT_CLASSIFICATION	we try to get the classloader that loaded jruby falling back on system
WITHOUT_CLASSIFICATION	bootstrap the top of the hierarchy
WITHOUT_CLASSIFICATION	for regular expressions with the o flag
WITHOUT_CLASSIFICATION	determine spacing
WITHOUT_CLASSIFICATION	this method is for finalizers registered via objectspace
WITHOUT_CLASSIFICATION	for jsr 223 support see http scripting.java.net
WITHOUT_CLASSIFICATION	use this for jruby internal finalizers
WITHOUT_CLASSIFICATION	mutex that controls modifications of user defined finalizers
WITHOUT_CLASSIFICATION	record separator var to speed up io ops that use it
WITHOUT_CLASSIFICATION	former java.lang.system concepts now internalized for mvm
WITHOUT_CLASSIFICATION	default objects
WITHOUT_CLASSIFICATION	initial spaces spaces before at
WITHOUT_CLASSIFICATION	can t read non standard properties
WITHOUT_CLASSIFICATION	java support
WITHOUT_CLASSIFICATION	compilation
WITHOUT_CLASSIFICATION	parser stats
WITHOUT_CLASSIFICATION	mutex that controls modifications of internal finalizers
WITHOUT_CLASSIFICATION	a global object lock for class hierarchy mutations
WITHOUT_CLASSIFICATION	line 1264
WITHOUT_CLASSIFICATION	kernel is the only module that doesn t need an implementor
WITHOUT_CLASSIFICATION	enc coderange asciionly
WITHOUT_CLASSIFICATION	quoted printable
WITHOUT_CLASSIFICATION	note this field and the following static initializer must be located be in this order!
WITHOUT_CLASSIFICATION	iso 2022 jp
WITHOUT_CLASSIFICATION	out of byte range there will be no match for sure
WITHOUT_CLASSIFICATION	utf 8
WITHOUT_CLASSIFICATION	string doesn t have it s own bytelist values
WITHOUT_CLASSIFICATION	string doesn t share any resources
WITHOUT_CLASSIFICATION	shift jis
WITHOUT_CLASSIFICATION	euc jp
WITHOUT_CLASSIFICATION	rb enc str asciionly p
WITHOUT_CLASSIFICATION	use 1.8 impl
WITHOUT_CLASSIFICATION	must not reallocate
WITHOUT_CLASSIFICATION	rb enc str coderange
WITHOUT_CLASSIFICATION	if len 0 then shared empty
WITHOUT_CLASSIFICATION	rb str subseq
WITHOUT_CLASSIFICATION	this really needs to be inlined here
WITHOUT_CLASSIFICATION	rb str cmp m
WITHOUT_CLASSIFICATION	rb str buf append
WITHOUT_CLASSIFICATION	encoding doesn t have to be copied.
WITHOUT_CLASSIFICATION	copy pre match substr
WITHOUT_CLASSIFICATION	todo keep cr todo rb str splice 0
WITHOUT_CLASSIFICATION	block given
WITHOUT_CLASSIFICATION	string given
WITHOUT_CLASSIFICATION	substring longer than string
WITHOUT_CLASSIFICATION	illegal combination
WITHOUT_CLASSIFICATION	hash given
WITHOUT_CLASSIFICATION	this represents left most digit in a set of incremented values? therefore leftmost numeric must be 1 and not 0 999 1000 not 999 0000. whereas chars should be zzz aaaa and non alnum byte values should be 377 001 000
WITHOUT_CLASSIFICATION	create constants class
WITHOUT_CLASSIFICATION	rb str substr
WITHOUT_CLASSIFICATION	rb str splice
WITHOUT_CLASSIFICATION	nothing
WITHOUT_CLASSIFICATION	decode from from and encode to to
WITHOUT_CLASSIFICATION	line 1308
WITHOUT_CLASSIFICATION	1.8
WITHOUT_CLASSIFICATION	only this case affects backrefs
WITHOUT_CLASSIFICATION	create a lightweight thunk
WITHOUT_CLASSIFICATION	check the length every iteration since the block can modify this string.
WITHOUT_CLASSIFICATION	to encoding same special casing
WITHOUT_CLASSIFICATION	retrieve last replacer
WITHOUT_CLASSIFICATION	long size bits in byte
WITHOUT_CLASSIFICATION	qtrue
WITHOUT_CLASSIFICATION	we need this loop in order to be able to unblock the join call without actually calling interrupt.
WITHOUT_CLASSIFICATION	file to be loaded by autoload has already been or is being loaded.
WITHOUT_CLASSIFICATION	interned ok for fast methods
WITHOUT_CLASSIFICATION	no catch active for this throw
WITHOUT_CLASSIFICATION	no binding given use eval
WITHOUT_CLASSIFICATION	file given use it and force it into binding
WITHOUT_CLASSIFICATION	catch active throw for catch to handle
WITHOUT_CLASSIFICATION	rb cstr to dbl case
WITHOUT_CLASSIFICATION	we break if we know this sleep was explicitly woken up interrupted
WITHOUT_CLASSIFICATION	zero sleeps forever
WITHOUT_CLASSIFICATION	exec process create io with process
WITHOUT_CLASSIFICATION	bomb out it s not a binding or a proc
WITHOUT_CLASSIFICATION	adjusts paths started with or on windows.
WITHOUT_CLASSIFICATION	?g boolean true if file1 has the cf setgid bit
WITHOUT_CLASSIFICATION	string to eval
WITHOUT_CLASSIFICATION	binding given use binding s file
WITHOUT_CLASSIFICATION	mri behavior now check arg count
WITHOUT_CLASSIFICATION	mri behavior use first byte of string value if len 0
WITHOUT_CLASSIFICATION	?c time last change time for file1
WITHOUT_CLASSIFICATION	?a time last access time for file1
WITHOUT_CLASSIFICATION	?c boolean true if file1 is a character device
WITHOUT_CLASSIFICATION	?e boolean true if file1 exists
WITHOUT_CLASSIFICATION	?f boolean true if file1 exists and is a regular file
WITHOUT_CLASSIFICATION	?k boolean true if file1 exists and has the sticky bit set
WITHOUT_CLASSIFICATION	?o boolean true if file1 exists and is owned by the caller s effective uid
WITHOUT_CLASSIFICATION	?m time last modification time for file1
WITHOUT_CLASSIFICATION	modified
WITHOUT_CLASSIFICATION	?r boolean true if file1 is readable by the effective uid gid of the caller
WITHOUT_CLASSIFICATION	without full tracing many events will not fire
WITHOUT_CLASSIFICATION	?p boolean true if file1 exists and is a fifo
WITHOUT_CLASSIFICATION	if the target thread is sleeping or stopped wake it
WITHOUT_CLASSIFICATION	wrapped to 0... 0. search next valid char.
WITHOUT_CLASSIFICATION	jrubymethod name new meta true visibility visibility.private
WITHOUT_CLASSIFICATION	we limit to int because bytebuffer can only allocate int sizes
WITHOUT_CLASSIFICATION	keep cr ?
WITHOUT_CLASSIFICATION	no need to assign encoding same bytelist shared
WITHOUT_CLASSIFICATION	?x boolean true if file1 exists and is executable by the real uid gid
WITHOUT_CLASSIFICATION	?x boolean true if file1 exists and is executable by the effective uid gid
WITHOUT_CLASSIFICATION	? boolean true if the modification times of file1 and file2 are equal
WITHOUT_CLASSIFICATION	deprecated string construction routines
WITHOUT_CLASSIFICATION	? boolean true if the modification time of file1 is after that of file2
WITHOUT_CLASSIFICATION	? boolean true if the modification time of file1 is prior to that of file2
WITHOUT_CLASSIFICATION	error info is per thread
WITHOUT_CLASSIFICATION	set to default thread group
WITHOUT_CLASSIFICATION	new interrupt to hopefully wake it out of any blocking io
WITHOUT_CLASSIFICATION	init errorinfo to nil
WITHOUT_CLASSIFICATION	if this thread is sleeping or stopped wake it
WITHOUT_CLASSIFICATION	jruby 2380 associate thread early so it shows up in thread.list right away in case it doesn t run immediately
WITHOUT_CLASSIFICATION	for thread start which does not call the subclass s initialize
WITHOUT_CLASSIFICATION	line 1326
WITHOUT_CLASSIFICATION	file class methods
WITHOUT_CLASSIFICATION	create constants for flock
WITHOUT_CLASSIFICATION	count number of extra slashes in the beginning of the string.
WITHOUT_CLASSIFICATION	strip off the o prefix so they become file rdonly and so on
WITHOUT_CLASSIFICATION	check for thread events in case we ve been woken up to die
WITHOUT_CLASSIFICATION	not valid for dead state
WITHOUT_CLASSIFICATION	can t select just have to do a blocking call
WITHOUT_CLASSIFICATION	null channel always succeeds for all locking operations
WITHOUT_CLASSIFICATION	make sure any existing lock is released before we try and close the file
WITHOUT_CLASSIFICATION	file constants module is included in io.
WITHOUT_CLASSIFICATION	. we use file versus io to match t file in mri..
WITHOUT_CLASSIFICATION	try both
WITHOUT_CLASSIFICATION	should we do anything?
WITHOUT_CLASSIFICATION	line 1345
WITHOUT_CLASSIFICATION	it doesn t handle special cases
WITHOUT_CLASSIFICATION	we re not actually a real file so we can t flock
WITHOUT_CLASSIFICATION	...round to that digit
WITHOUT_CLASSIFICATION	method.invokeinterface p irubyobject.class getinstancevariable sig irubyobject.class params string.class
WITHOUT_CLASSIFICATION	return false here
WITHOUT_CLASSIFICATION	strip c away from relative pathed name
WITHOUT_CLASSIFICATION	mri compatible basename handling for windows drive letter paths
WITHOUT_CLASSIFICATION	compensate for missing slash after drive letter on windows
WITHOUT_CLASSIFICATION	trim trailing slashes
WITHOUT_CLASSIFICATION	handle user paths
WITHOUT_CLASSIFICATION	dot is not at beginning and not at end of filename.
WITHOUT_CLASSIFICATION	find out which string to check.
WITHOUT_CLASSIFICATION	fnfexception can be thrown in both cases when the file is not found or when permission is denied.
WITHOUT_CLASSIFICATION	java and mri definitions of divmod are different.
WITHOUT_CLASSIFICATION	include additional path separator so that dirname of c file.txt is c not c
WITHOUT_CLASSIFICATION	handle user paths.
WITHOUT_CLASSIFICATION	no directory delimeter. rest of string is username
WITHOUT_CLASSIFICATION	generation count for o 1 clears
WITHOUT_CLASSIFICATION	c is returned unchanged
WITHOUT_CLASSIFICATION	rubycontinuation
WITHOUT_CLASSIFICATION	special constructor that accepts stream not channel
WITHOUT_CLASSIFICATION	... as path to expand
WITHOUT_CLASSIFICATION	we don t have another slash after this so replace . with
WITHOUT_CLASSIFICATION	user ... as path to expand
WITHOUT_CLASSIFICATION	if there are n slashes then we want n 1.
WITHOUT_CLASSIFICATION	no canonical path yet or length is zero and we have a followed by a dot...
WITHOUT_CLASSIFICATION	do nothing we should not delete the drive letter
WITHOUT_CLASSIFICATION	rb check modifiable
WITHOUT_CLASSIFICATION	rb readable
WITHOUT_CLASSIFICATION	rename via java api call wasn t successful let s try some tricks similar to mri
WITHOUT_CLASSIFICATION	can we produce ioerror which bypasses a close?
WITHOUT_CLASSIFICATION	fast path since jna stat is about 10x slower than this
WITHOUT_CLASSIFICATION	3. mri ignores the trailing junk
WITHOUT_CLASSIFICATION	try to rename one more time
WITHOUT_CLASSIFICATION	n.b. we need to recompute the hash in case the key object was modified
WITHOUT_CLASSIFICATION	delete implementation
WITHOUT_CLASSIFICATION	get implementation
WITHOUT_CLASSIFICATION	put implementation
WITHOUT_CLASSIFICATION	. instance methods. .
WITHOUT_CLASSIFICATION	other hash does not contain key
WITHOUT_CLASSIFICATION	update the hash value
WITHOUT_CLASSIFICATION	single as whole path to expand
WITHOUT_CLASSIFICATION	default don t retain
WITHOUT_CLASSIFICATION	we only want io objects with valid streams better to error now .
WITHOUT_CLASSIFICATION	first try as directory
WITHOUT_CLASSIFICATION	next as regular file
WITHOUT_CLASSIFICATION	do nothing. fd cloexec has no meaning in jvm since we cannot really exec. and why the hell does webrick pass this in as a first argument!!!!!
WITHOUT_CLASSIFICATION	dup2 new fd into self to preserve fileno and references to it
WITHOUT_CLASSIFICATION	nio based
WITHOUT_CLASSIFICATION	todo read check from mri
WITHOUT_CLASSIFICATION	7!
WITHOUT_CLASSIFICATION	not exposed by filetest but so similiar in nature that it is stored here
WITHOUT_CLASSIFICATION	confirm we re not reopening self s channel
WITHOUT_CLASSIFICATION	re register since fileno points at something new now
WITHOUT_CLASSIFICATION	default options
WITHOUT_CLASSIFICATION	re register the descriptor
WITHOUT_CLASSIFICATION	redundant done above as well
WITHOUT_CLASSIFICATION	use original modes
WITHOUT_CLASSIFICATION	io class methods.
WITHOUT_CLASSIFICATION	a potentially previously close io is being reopened .
WITHOUT_CLASSIFICATION	this is for a range check near as i can tell
WITHOUT_CLASSIFICATION	rb class boot
WITHOUT_CLASSIFICATION	mri behavior swallow standarderorrs
WITHOUT_CLASSIFICATION	line 794
WITHOUT_CLASSIFICATION	isretained true
WITHOUT_CLASSIFICATION	if not sync we switch to write buffered mode
WITHOUT_CLASSIFICATION	. throw bad file descriptor is we can not read on supplied descriptor..
WITHOUT_CLASSIFICATION	claims conversion is done via to s in docs.
WITHOUT_CLASSIFICATION	return len n
WITHOUT_CLASSIFICATION	everything written
WITHOUT_CLASSIFICATION	of course this isn t particularly useful.
WITHOUT_CLASSIFICATION	todo read into buffer using all the fread logic int read openfile.getmainstream .fread buffer
WITHOUT_CLASSIFICATION	cleanup raising errors if any
WITHOUT_CLASSIFICATION	5!
WITHOUT_CLASSIFICATION	bytelist buffer null
WITHOUT_CLASSIFICATION	length to read
WITHOUT_CLASSIFICATION	do nothing. fd cloexec has no meaning in jvm since we cannot really exec.
WITHOUT_CLASSIFICATION	i believe ruby bails out with a bug if closing fails
WITHOUT_CLASSIFICATION	select until read is ready
WITHOUT_CLASSIFICATION	no receiver for singleton class
WITHOUT_CLASSIFICATION	0!
WITHOUT_CLASSIFICATION	string buffer to read it into
WITHOUT_CLASSIFICATION	cryptic for the uninitiated...
WITHOUT_CLASSIFICATION	rb writable
WITHOUT_CLASSIFICATION	buffer str.getbytelist
WITHOUT_CLASSIFICATION	all errors to sysread should be systemcallerrors but on a closed stream ruby returns an ioerror. java throws same exception for all errors so we resort to this hack...
WITHOUT_CLASSIFICATION	read check from mri io.c
WITHOUT_CLASSIFICATION	we re cloning ourselves so we know the result should be a rubyobject
WITHOUT_CLASSIFICATION	class methods for io
WITHOUT_CLASSIFICATION	make all sockets blocking as configured again close unregisters all channels so we can safely reset blocking modes
WITHOUT_CLASSIFICATION	not using remove object here to avoid the equals call
WITHOUT_CLASSIFICATION	save blocking state
WITHOUT_CLASSIFICATION	call chmod after we created the randomaccesfile because otherwise the file could be read only
WITHOUT_CLASSIFICATION	fixme process options
WITHOUT_CLASSIFICATION	write
WITHOUT_CLASSIFICATION	nio based pipe
WITHOUT_CLASSIFICATION	enebo annotation processing forced me to do pangea method here...
WITHOUT_CLASSIFICATION	line 1254
WITHOUT_CLASSIFICATION	6 tags 16 addr 1 eos
WITHOUT_CLASSIFICATION	objectclass.defineannotatedmethods basicobjectmethods.class
WITHOUT_CLASSIFICATION	may need to handle enc coderange broken
WITHOUT_CLASSIFICATION	zeroed by jvm
WITHOUT_CLASSIFICATION	the class of this object
WITHOUT_CLASSIFICATION	todo rb usascii str new2
WITHOUT_CLASSIFICATION	jruby 4113 callers should not call settaint on immediate objects
WITHOUT_CLASSIFICATION	internal variable methods
WITHOUT_CLASSIFICATION	we can safely reference methods here instead of doing getmethods since if we are adding we are not using a includedmodulewrapper.
WITHOUT_CLASSIFICATION	common variable methods
WITHOUT_CLASSIFICATION	note includes part of fix for jruby 1339
WITHOUT_CLASSIFICATION	define access methods.
WITHOUT_CLASSIFICATION	static constants
WITHOUT_CLASSIFICATION	for binding purposes on the newly created struct types
WITHOUT_CLASSIFICATION	for interface impls
WITHOUT_CLASSIFICATION	these call assume threadcontext receiver.getruntime .getcurrentcontext
WITHOUT_CLASSIFICATION	obj infect
WITHOUT_CLASSIFICATION	superclass may be null.
WITHOUT_CLASSIFICATION	. param nv number of times to cycle or 1 to cycle indefinitely.
WITHOUT_CLASSIFICATION	we need full traces use default slow populator
WITHOUT_CLASSIFICATION	atomic ?
WITHOUT_CLASSIFICATION	skip any commandline args if usr bin env is in play
WITHOUT_CLASSIFICATION	containing class...the parent of object is null. object should always be last in chain.
WITHOUT_CLASSIFICATION	mri checks all types first
WITHOUT_CLASSIFICATION	make sure the module we include does not already exist
WITHOUT_CLASSIFICATION	classproviders return java class module in defineorgetclassunder and defineorgetmoduleunder when class module is opened using colon syntax.
WITHOUT_CLASSIFICATION	line 1298
WITHOUT_CLASSIFICATION	update superclass reference
WITHOUT_CLASSIFICATION	constant ruby methods
WITHOUT_CLASSIFICATION	execute iteratemethod again.
WITHOUT_CLASSIFICATION	a normal block passed to define method changes to do arity checking make it a lambda
WITHOUT_CLASSIFICATION	we grab serial number first the worst that will happen is we cache a later update with an earlier serial number which would just flush anyway
WITHOUT_CLASSIFICATION	module singleton methods are all defined public
WITHOUT_CLASSIFICATION	just using required is broken...but no more broken than before zsuper refactoring
WITHOUT_CLASSIFICATION	update all hierarchies into which this module has been included
WITHOUT_CLASSIFICATION	this method is intended only for defining new modules in ruby code
WITHOUT_CLASSIFICATION	need to skip includedmodulewrappers
WITHOUT_CLASSIFICATION	reopen a java module
WITHOUT_CLASSIFICATION	reopen a java class
WITHOUT_CLASSIFICATION	for zsupers in define method blech! we tell the proc scope to act as the argument scope
WITHOUT_CLASSIFICATION	fixme warning
WITHOUT_CLASSIFICATION	class and module bodies default to public so make the block s visibility public. jruby 1185.
WITHOUT_CLASSIFICATION	ignore error
WITHOUT_CLASSIFICATION	if the insertion point is a class update subclass lists
WITHOUT_CLASSIFICATION	eh?!
WITHOUT_CLASSIFICATION	build a list of all modules to consider for inclusion
WITHOUT_CLASSIFICATION	scan class hierarchy for module
WITHOUT_CLASSIFICATION	mri error message says class even though module is ok
WITHOUT_CLASSIFICATION	module class methods
WITHOUT_CLASSIFICATION	next in hierarchy is an included version of the module we re attempting so we skip including it
WITHOUT_CLASSIFICATION	if we haven t encountered a real superclass use the found module as the new inclusion point
WITHOUT_CLASSIFICATION	line 1635
WITHOUT_CLASSIFICATION	tmpposition is required because getposition s side effects. if the warning is generated the getposition on line 954 this line 18 will create a wrong position if the inclusive flag is not set.
WITHOUT_CLASSIFICATION	java and mri definitions of remainder are the same.
WITHOUT_CLASSIFICATION	class variable api methods
WITHOUT_CLASSIFICATION	line 723
WITHOUT_CLASSIFICATION	mri has extra pointer which makes our code look a little bit more strange in comparison
WITHOUT_CLASSIFICATION	tempory buffer to build up a potential token. consumer takes responsibility to reset this before use.
WITHOUT_CLASSIFICATION	jruby 914 java 1.4 bigdecimal does not allow a negative scale so we have to simulate it
WITHOUT_CLASSIFICATION	removes and returns the stored value without processing undefs autoloads
WITHOUT_CLASSIFICATION	fix for jruby 1339 search hierarchy for constant
WITHOUT_CLASSIFICATION	what is v in c?. case v . c2 v . break .
WITHOUT_CLASSIFICATION	w symbol
WITHOUT_CLASSIFICATION	line 625
WITHOUT_CLASSIFICATION	consider thread aspects of this
WITHOUT_CLASSIFICATION	an interrupt or timeout may have caused us to miss a notify that we consumed so do another notify in case someone else is available to pick it up.
WITHOUT_CLASSIFICATION	we always open this rw since we can only open it r or rw.
WITHOUT_CLASSIFICATION	if we could not find the constant from cref..then try getting from inheritence hierarchy
WITHOUT_CLASSIFICATION	line 929
WITHOUT_CLASSIFICATION	line 1373
WITHOUT_CLASSIFICATION	line 785
WITHOUT_CLASSIFICATION	line 800
WITHOUT_CLASSIFICATION	line 970
WITHOUT_CLASSIFICATION	line 1406
WITHOUT_CLASSIFICATION	line 1085
WITHOUT_CLASSIFICATION	line 1582
WITHOUT_CLASSIFICATION	we got a valid errno value
WITHOUT_CLASSIFICATION	one optional and no required args
WITHOUT_CLASSIFICATION	line 1293
WITHOUT_CLASSIFICATION	print out as a nice ruby backtrace
WITHOUT_CLASSIFICATION	line 1229
WITHOUT_CLASSIFICATION	line 1523
WITHOUT_CLASSIFICATION	try to get errno value out of the class
WITHOUT_CLASSIFICATION	line 1398
WITHOUT_CLASSIFICATION	line 1492
WITHOUT_CLASSIFICATION	line 854
WITHOUT_CLASSIFICATION	internal module variable api methods
WITHOUT_CLASSIFICATION	no script to run return success below
WITHOUT_CLASSIFICATION	java and mri definitions of modulo are different.
WITHOUT_CLASSIFICATION	line 1789
WITHOUT_CLASSIFICATION	line 1755
WITHOUT_CLASSIFICATION	todo why this .setresult
WITHOUT_CLASSIFICATION	jrubyclient
WITHOUT_CLASSIFICATION	skip usr bin env if it s first
WITHOUT_CLASSIFICATION	line 1652
WITHOUT_CLASSIFICATION	skip any assignments if usr bin env is in play
WITHOUT_CLASSIFICATION	line 814
WITHOUT_CLASSIFICATION	line 451
WITHOUT_CLASSIFICATION	line 413
WITHOUT_CLASSIFICATION	line 339
WITHOUT_CLASSIFICATION	line 703
WITHOUT_CLASSIFICATION	line 515
WITHOUT_CLASSIFICATION	line 472
WITHOUT_CLASSIFICATION	line 669
WITHOUT_CLASSIFICATION	line 582
WITHOUT_CLASSIFICATION	line 636
WITHOUT_CLASSIFICATION	line 2014
WITHOUT_CLASSIFICATION	line 1108
WITHOUT_CLASSIFICATION	line 992
WITHOUT_CLASSIFICATION	2!
WITHOUT_CLASSIFICATION	increase value to hit lower range.
WITHOUT_CLASSIFICATION	line 958
WITHOUT_CLASSIFICATION	. x mantissa 2 exponent. . where mantissa is in the range of .5 1 . .
WITHOUT_CLASSIFICATION	line 905
WITHOUT_CLASSIFICATION	line 925
WITHOUT_CLASSIFICATION	line 1072
WITHOUT_CLASSIFICATION	uncomment the puts lines if you want to see more detail
WITHOUT_CLASSIFICATION	line 572
WITHOUT_CLASSIFICATION	line 601
WITHOUT_CLASSIFICATION	line 649
WITHOUT_CLASSIFICATION	line 1047
WITHOUT_CLASSIFICATION	line 1950
WITHOUT_CLASSIFICATION	line 1395
WITHOUT_CLASSIFICATION	line 1286
WITHOUT_CLASSIFICATION	line 1192
WITHOUT_CLASSIFICATION	line 1241
WITHOUT_CLASSIFICATION	line 1333
WITHOUT_CLASSIFICATION	9!
WITHOUT_CLASSIFICATION	line 991
WITHOUT_CLASSIFICATION	line 1812
WITHOUT_CLASSIFICATION	line 1779
WITHOUT_CLASSIFICATION	line 1476
WITHOUT_CLASSIFICATION	line 1420
WITHOUT_CLASSIFICATION	line 1728
WITHOUT_CLASSIFICATION	line 1588
WITHOUT_CLASSIFICATION	line 1618
WITHOUT_CLASSIFICATION	rounding neccessary
WITHOUT_CLASSIFICATION	line 1363
WITHOUT_CLASSIFICATION	line 1681
WITHOUT_CLASSIFICATION	could not get canonical path just use given path
WITHOUT_CLASSIFICATION	line 1317
WITHOUT_CLASSIFICATION	line 1535
WITHOUT_CLASSIFICATION	line 1992
WITHOUT_CLASSIFICATION	if it is a file channel then we can pre allocate the output buffer to the total size of buffered remaining bytes in file
WITHOUT_CLASSIFICATION	line 1643
WITHOUT_CLASSIFICATION	line 1794
WITHOUT_CLASSIFICATION	line 1314
WITHOUT_CLASSIFICATION	line 1837
WITHOUT_CLASSIFICATION	happens with native exceptions should not filter those out
WITHOUT_CLASSIFICATION	line 1753
WITHOUT_CLASSIFICATION	iteration variables for the square root x and the reciprocal v initial x x0 sqrt initial v v0 1 2 x
WITHOUT_CLASSIFICATION	line 1562
WITHOUT_CLASSIFICATION	line 619
WITHOUT_CLASSIFICATION	line 1267
WITHOUT_CLASSIFICATION	line 1439
WITHOUT_CLASSIFICATION	line 1895
WITHOUT_CLASSIFICATION	line 1301
WITHOUT_CLASSIFICATION	line 776
WITHOUT_CLASSIFICATION	line 1168
WITHOUT_CLASSIFICATION	line 823
WITHOUT_CLASSIFICATION	line 872
WITHOUT_CLASSIFICATION	cannot discern the total read length allocate at least enough for the buffered data
WITHOUT_CLASSIFICATION	line 555
WITHOUT_CLASSIFICATION	line 500
WITHOUT_CLASSIFICATION	line 361
WITHOUT_CLASSIFICATION	line 1603
WITHOUT_CLASSIFICATION	line 1620
WITHOUT_CLASSIFICATION	allow it to bubble up
WITHOUT_CLASSIFICATION	tc under method self under method name args
WITHOUT_CLASSIFICATION	integer division
WITHOUT_CLASSIFICATION	line 1473
WITHOUT_CLASSIFICATION	line 1201
WITHOUT_CLASSIFICATION	line 1307
WITHOUT_CLASSIFICATION	line 1287
WITHOUT_CLASSIFICATION	line 1067
WITHOUT_CLASSIFICATION	peel onion...make subpatterns out of outer layer of glob and recall with each subpattern example foo a c b bar fooa c bar foobbar
WITHOUT_CLASSIFICATION	check for a builtin first.
WITHOUT_CLASSIFICATION	line 1169
WITHOUT_CLASSIFICATION	this method handles patterns and delegates to fnmatch helper for the main work.
WITHOUT_CLASSIFICATION	processes seem to have some peculiar locking sequences so we need to ensure nobody is trying to close destroy while we are
WITHOUT_CLASSIFICATION	double precision native double precision native
WITHOUT_CLASSIFICATION	line 1145
WITHOUT_CLASSIFICATION	calculate based on a b c and d
WITHOUT_CLASSIFICATION	64 bit number native as bignum
WITHOUT_CLASSIFICATION	next indicates to decode using native encoding format
WITHOUT_CLASSIFICATION	line 812
WITHOUT_CLASSIFICATION	yylen 496
WITHOUT_CLASSIFICATION	an empirically derived rule precision applies to significand length irrespective of exponent
WITHOUT_CLASSIFICATION	first digit is always printed
WITHOUT_CLASSIFICATION	line 1026
WITHOUT_CLASSIFICATION	line 1011
WITHOUT_CLASSIFICATION	line 911
WITHOUT_CLASSIFICATION	an official rule clarified if the exponent clarif after adjusting for exponent form clarif is 4 or the exponent clarif after adjusting for exponent form clarif is greater than the precision use exponent form
WITHOUT_CLASSIFICATION	in this mode . is always printed
WITHOUT_CLASSIFICATION	line 886
WITHOUT_CLASSIFICATION	line 864
WITHOUT_CLASSIFICATION	utf8 lead byte
WITHOUT_CLASSIFICATION	line 827
WITHOUT_CLASSIFICATION	now some data...
WITHOUT_CLASSIFICATION	mri behavior validate only the unnumbered arguments
WITHOUT_CLASSIFICATION	else catch oversize below
WITHOUT_CLASSIFICATION	calculation for simple and typical case adapted from sun.misc.floatingdecimal
WITHOUT_CLASSIFICATION	value equality result eval key 3 arr arr key one arr.store 3 two puts arr key assertequals two result
WITHOUT_CLASSIFICATION	copy what is in the buffer if there is some buffered data
WITHOUT_CLASSIFICATION	already have some bytes buffered just return those
WITHOUT_CLASSIFICATION	note that we can t say the following because of the on the fly conversion of fixnum to long asserttrue value valueviavaluesiterator
WITHOUT_CLASSIFICATION	reset buffer
WITHOUT_CLASSIFICATION	is there something built into jruby to do this?
WITHOUT_CLASSIFICATION	todo ruby logic is somewhat more complicated here see comments after
WITHOUT_CLASSIFICATION	change the thread context to include the class
WITHOUT_CLASSIFICATION	do median of 7 if the array is over 200 elements.
WITHOUT_CLASSIFICATION	line 1626
WITHOUT_CLASSIFICATION	use array as is it s a literal array
WITHOUT_CLASSIFICATION	explode array it s an internal args array
WITHOUT_CLASSIFICATION	line 1369
WITHOUT_CLASSIFICATION	line 313
WITHOUT_CLASSIFICATION	odd
WITHOUT_CLASSIFICATION	line 1359
WITHOUT_CLASSIFICATION	consume the file name
WITHOUT_CLASSIFICATION	..where 100 10 shifts the scale
WITHOUT_CLASSIFICATION	root x is ready!
WITHOUT_CLASSIFICATION	the loop of square root by coupled newton iteration
WITHOUT_CLASSIFICATION	5 2 5 3 need half a scale more..
WITHOUT_CLASSIFICATION	mri behavior 0 and 0 are two different things
WITHOUT_CLASSIFICATION	default classcache using jitmax as a soft upper bound
WITHOUT_CLASSIFICATION	we require the home directory to be absolute
WITHOUT_CLASSIFICATION	rubybigdecimal
WITHOUT_CLASSIFICATION	2. mri allows underscores anywhere
WITHOUT_CLASSIFICATION	this property is a boolean to allow three values so it can match mri s nil false and true
WITHOUT_CLASSIFICATION	line 1292
WITHOUT_CLASSIFICATION	try loading from classloader resources
WITHOUT_CLASSIFICATION	verify it if it s there
WITHOUT_CLASSIFICATION	15!
WITHOUT_CLASSIFICATION	try the normal property first
WITHOUT_CLASSIFICATION	try cwd first
WITHOUT_CLASSIFICATION	specify something that can t separate
WITHOUT_CLASSIFICATION	symbol string must be interned
WITHOUT_CLASSIFICATION	must be power of 2!
WITHOUT_CLASSIFICATION	line 1276
WITHOUT_CLASSIFICATION	actions end
WITHOUT_CLASSIFICATION	jrubyserver
WITHOUT_CLASSIFICATION	has read write been closed or is it still open for business
WITHOUT_CLASSIFICATION	str is frozen
WITHOUT_CLASSIFICATION	this is a non standard method have we decided to start extending ruby? classclass.definefastmethod subclasses callbackfactory.getfastoptmethod subclasses
WITHOUT_CLASSIFICATION	static initializing method
WITHOUT_CLASSIFICATION	use parent s marshal
WITHOUT_CLASSIFICATION	this is the only case it might be null here in metaclass construction
WITHOUT_CLASSIFICATION	fields to hold ruby and rubyclass references
WITHOUT_CLASSIFICATION	update all subclasses
WITHOUT_CLASSIFICATION	do nothing leave empty
WITHOUT_CLASSIFICATION	rest in ivar count followed by name value pairs
WITHOUT_CLASSIFICATION	write out ivar count followed by name value pairs
WITHOUT_CLASSIFICATION	piece of mri rb to id
WITHOUT_CLASSIFICATION	element set
WITHOUT_CLASSIFICATION	ensure we re not running on gcj since it s not supported and leads to weird errors
WITHOUT_CLASSIFICATION	single method use normal logic
WITHOUT_CLASSIFICATION	c x c m x
WITHOUT_CLASSIFICATION	these methods below are used during compile time optimizations
WITHOUT_CLASSIFICATION	no unixsockets on windows
WITHOUT_CLASSIFICATION	line 1325
WITHOUT_CLASSIFICATION	mbclen invalid p
WITHOUT_CLASSIFICATION	no annotated methods found skip
WITHOUT_CLASSIFICATION	p hiragana
WITHOUT_CLASSIFICATION	line 1196
WITHOUT_CLASSIFICATION	rb enc reg raise
WITHOUT_CLASSIFICATION	rb reg raise
WITHOUT_CLASSIFICATION	minus one more for irubyobject
WITHOUT_CLASSIFICATION	rb reg expr str
WITHOUT_CLASSIFICATION	jruby 3625 delay setting backref until the matchdata is completely initialized
WITHOUT_CLASSIFICATION	write out a static initializer for frame names so it only fires once
WITHOUT_CLASSIFICATION	rubymodule singletonclass module.getsingletonclass
WITHOUT_CLASSIFICATION	fallback on non pregenerated logic
WITHOUT_CLASSIFICATION	array created for rescue args doesn t need to be in objectspace.
WITHOUT_CLASSIFICATION	colon3
WITHOUT_CLASSIFICATION	line 1399
WITHOUT_CLASSIFICATION	wrong parameter ?
WITHOUT_CLASSIFICATION	we can t rename a file while it s open in windows
WITHOUT_CLASSIFICATION	produce a nicer error since rubyists aren t used to seeing this
WITHOUT_CLASSIFICATION	this should never happen past parse but just bulletproof this just in case
WITHOUT_CLASSIFICATION	never visited should be ok
WITHOUT_CLASSIFICATION	for b.foo . args are only significant in maintaining backwards compatible ast structure
WITHOUT_CLASSIFICATION	assert thenbody ! null thenbody is not null assert elsebody ! null elsebody is not null
WITHOUT_CLASSIFICATION	the name of the variable
WITHOUT_CLASSIFICATION	line 745
WITHOUT_CLASSIFICATION	we do not want to capture cached methods
WITHOUT_CLASSIFICATION	we could probably also detect if lhs value came out of cache and avoid some of this
WITHOUT_CLASSIFICATION	one optional one required args
WITHOUT_CLASSIFICATION	in order to make pragma s noops we set location to a special value
WITHOUT_CLASSIFICATION	we can callsite cache const missing if we want
WITHOUT_CLASSIFICATION	store to temp so it does null out on us mid stream
WITHOUT_CLASSIFICATION	admittedly inefficient
WITHOUT_CLASSIFICATION	no takers bubble up
WITHOUT_CLASSIFICATION	index of variable for this arg
WITHOUT_CLASSIFICATION	don t attempt to coerce to array just wrap and return
WITHOUT_CLASSIFICATION	only a marker interface
WITHOUT_CLASSIFICATION	the method doesn t need a scope or static scope frame only
WITHOUT_CLASSIFICATION	proc.new needs the caller s block to instantiate a proc
WITHOUT_CLASSIFICATION	check for proc.new an especially magic method
WITHOUT_CLASSIFICATION	pragmas
WITHOUT_CLASSIFICATION	otherwise it s a literal array
WITHOUT_CLASSIFICATION	long slow way causes disabling for defined
WITHOUT_CLASSIFICATION	we set scope aware to true to force heap based locals
WITHOUT_CLASSIFICATION	set up a local iruby variable
WITHOUT_CLASSIFICATION	splatted when can t do it yet
WITHOUT_CLASSIFICATION	one arg but it s an array treat it as a proper array
WITHOUT_CLASSIFICATION	otherwise use normal args compiler
WITHOUT_CLASSIFICATION	colon3 assign in object
WITHOUT_CLASSIFICATION	irubyobject rubyclass visibility irubyobject rubyclass irubyobject
WITHOUT_CLASSIFICATION	these are all simple cases that don t require the heavier defined logic
WITHOUT_CLASSIFICATION	rubyclass
WITHOUT_CLASSIFICATION	context.swapvalues context.consumecurrentvalue
WITHOUT_CLASSIFICATION	rubyclass rubyclass rubyclass rubyclass
WITHOUT_CLASSIFICATION	inspect body and args
WITHOUT_CLASSIFICATION	invoke run with threadcontext and topself
WITHOUT_CLASSIFICATION	class variable ruby methods
WITHOUT_CLASSIFICATION	string string string string string rubyclass string rubyclass rubyclass string rubyclass
WITHOUT_CLASSIFICATION	math depends on all numeric types
WITHOUT_CLASSIFICATION	not an expression only compile the elements
WITHOUT_CLASSIFICATION	normal
WITHOUT_CLASSIFICATION	optimizations if we know ahead of time it will always be true or false
WITHOUT_CLASSIFICATION	eval new value call operator on old value and assign
WITHOUT_CLASSIFICATION	normal items at the front or back of the masgn
WITHOUT_CLASSIFICATION	create the closure class and instantiate it
WITHOUT_CLASSIFICATION	sizes must match
WITHOUT_CLASSIFICATION	head must have no non trivial assigns array groupings basically
WITHOUT_CLASSIFICATION	normal items at the head of the masgn
WITHOUT_CLASSIFICATION	compile first node as non expr and compile second node
WITHOUT_CLASSIFICATION	all these types are immediately considered defined
WITHOUT_CLASSIFICATION	put under object array already present
WITHOUT_CLASSIFICATION	if arity 1 just compile the one element to save us the array cost
WITHOUT_CLASSIFICATION	recv
WITHOUT_CLASSIFICATION	it s a multiple statement body iterate over all elements in turn and chain if it get too long
WITHOUT_CLASSIFICATION	single statement body just compile it
WITHOUT_CLASSIFICATION	try optz version
WITHOUT_CLASSIFICATION	need the array use unoptz version
WITHOUT_CLASSIFICATION	no args do not pass args processor
WITHOUT_CLASSIFICATION	perform assignment for the next node
WITHOUT_CLASSIFICATION	successfully got back a jitted method
WITHOUT_CLASSIFICATION	if we haven t already decided on a do nothing call
WITHOUT_CLASSIFICATION	expect value to be an array of nodes
WITHOUT_CLASSIFICATION	time the compilation
WITHOUT_CLASSIFICATION	value is already on stack save it for later
WITHOUT_CLASSIFICATION	load block from version of method
WITHOUT_CLASSIFICATION	in method body with no containing loop issue jump error load runtime and value issue jump error
WITHOUT_CLASSIFICATION	thread context receiver and original args
WITHOUT_CLASSIFICATION	if rest args excluding post args
WITHOUT_CLASSIFICATION	no point in updating number if last number was same value.
WITHOUT_CLASSIFICATION	check if it s true ending if not
WITHOUT_CLASSIFICATION	depending on size of original args call appropriate utility method
WITHOUT_CLASSIFICATION	receiver args result value
WITHOUT_CLASSIFICATION	pop extra attr value
WITHOUT_CLASSIFICATION	with args no block
WITHOUT_CLASSIFICATION	generate call sites initialization code
WITHOUT_CLASSIFICATION	generate method cache initialization code
WITHOUT_CLASSIFICATION	ne nonzero i.e. true
WITHOUT_CLASSIFICATION	check the condition
WITHOUT_CLASSIFICATION	restore the original exception
WITHOUT_CLASSIFICATION	push true
WITHOUT_CLASSIFICATION	extract item from array
WITHOUT_CLASSIFICATION	superclazz null
WITHOUT_CLASSIFICATION	script object
WITHOUT_CLASSIFICATION	unwrap scopes to appropriate depth
WITHOUT_CLASSIFICATION	store the local vars in a local variable
WITHOUT_CLASSIFICATION	normal return for method body. return jump for within a begin rescue ensure
WITHOUT_CLASSIFICATION	fix filenamecompletor to work mid line
WITHOUT_CLASSIFICATION	normal closure
WITHOUT_CLASSIFICATION	we only need full on redo exception handling if there s logic that might produce it
WITHOUT_CLASSIFICATION	jump back to the top of the main body of this closure
WITHOUT_CLASSIFICATION	struct bodies should be public by default so set block visibility to public. jruby 1185.
WITHOUT_CLASSIFICATION	if we are storing a name as well index is one too high for values
WITHOUT_CLASSIFICATION	map keep track of the next available variable index for a particular prefix
WITHOUT_CLASSIFICATION	no read requested hook up read to parents output
WITHOUT_CLASSIFICATION	lexicalnestinglevel lexicalparent null ? 0 ir scopeimpl lexicalparent . lexicalnestinglevel 1
WITHOUT_CLASSIFICATION	insert nesting level to ensure variable names don t conflict across nested scopes! i.e. definition of v 1 in a closure shouldn t override the use of v 1 from the parent scope! return new variable prefix lexicalnestinglevel idx
WITHOUT_CLASSIFICATION	line 303
WITHOUT_CLASSIFICATION	line 1116
WITHOUT_CLASSIFICATION	line 367
WITHOUT_CLASSIFICATION	line 443
WITHOUT_CLASSIFICATION	struct methods
WITHOUT_CLASSIFICATION	line 492
WITHOUT_CLASSIFICATION	line 464
WITHOUT_CLASSIFICATION	line 1087
WITHOUT_CLASSIFICATION	line 519
WITHOUT_CLASSIFICATION	instance variable api methods
WITHOUT_CLASSIFICATION	line 1261
WITHOUT_CLASSIFICATION	line 613
WITHOUT_CLASSIFICATION	line 720
WITHOUT_CLASSIFICATION	line 738
WITHOUT_CLASSIFICATION	line 754
WITHOUT_CLASSIFICATION	line 757
WITHOUT_CLASSIFICATION	line 852
WITHOUT_CLASSIFICATION	line 797
WITHOUT_CLASSIFICATION	line 941
WITHOUT_CLASSIFICATION	line 1280
WITHOUT_CLASSIFICATION	line 871
WITHOUT_CLASSIFICATION	now emit bodies
WITHOUT_CLASSIFICATION	line 896
WITHOUT_CLASSIFICATION	this method is called to build arguments for a block!
WITHOUT_CLASSIFICATION	methods of the object class rb obj
WITHOUT_CLASSIFICATION	line 948
WITHOUT_CLASSIFICATION	line 967
WITHOUT_CLASSIFICATION	line 996
WITHOUT_CLASSIFICATION	line 986
WITHOUT_CLASSIFICATION	line 1058
WITHOUT_CLASSIFICATION	line 1100
WITHOUT_CLASSIFICATION	line 1097
WITHOUT_CLASSIFICATION	can t use v and stdin
WITHOUT_CLASSIFICATION	line 1135
WITHOUT_CLASSIFICATION	line 1137
WITHOUT_CLASSIFICATION	line 1154
WITHOUT_CLASSIFICATION	line 1122
WITHOUT_CLASSIFICATION	line 1251
WITHOUT_CLASSIFICATION	line 1263
WITHOUT_CLASSIFICATION	line 1309
WITHOUT_CLASSIFICATION	line 1315
WITHOUT_CLASSIFICATION	line 1328
WITHOUT_CLASSIFICATION	note if s happens to the a class this is effectively an assignment of a class instance variable
WITHOUT_CLASSIFICATION	line 1358
WITHOUT_CLASSIFICATION	line 1374
WITHOUT_CLASSIFICATION	line 1415
WITHOUT_CLASSIFICATION	line 1440
WITHOUT_CLASSIFICATION	line 1443
WITHOUT_CLASSIFICATION	line 1465
WITHOUT_CLASSIFICATION	line 1496
WITHOUT_CLASSIFICATION	line 1488
WITHOUT_CLASSIFICATION	line 1485
WITHOUT_CLASSIFICATION	line 1533
WITHOUT_CLASSIFICATION	line 1556
WITHOUT_CLASSIFICATION	line 1574
WITHOUT_CLASSIFICATION	line 1577
WITHOUT_CLASSIFICATION	line 1595
WITHOUT_CLASSIFICATION	line 955
WITHOUT_CLASSIFICATION	line 1638
WITHOUT_CLASSIFICATION	line 1069
WITHOUT_CLASSIFICATION	line 1661
WITHOUT_CLASSIFICATION	line 1111
WITHOUT_CLASSIFICATION	lists to aggregate variables and bodies for whens
WITHOUT_CLASSIFICATION	line 1775
WITHOUT_CLASSIFICATION	line 1023
WITHOUT_CLASSIFICATION	line 1054
WITHOUT_CLASSIFICATION	mirko check
WITHOUT_CLASSIFICATION	reg
WITHOUT_CLASSIFICATION	line 1041
WITHOUT_CLASSIFICATION	the case instruction
WITHOUT_CLASSIFICATION	line 324
WITHOUT_CLASSIFICATION	line 327
WITHOUT_CLASSIFICATION	line 331
WITHOUT_CLASSIFICATION	line 336
WITHOUT_CLASSIFICATION	line 348
WITHOUT_CLASSIFICATION	line 354
WITHOUT_CLASSIFICATION	line 429
WITHOUT_CLASSIFICATION	get the incoming case value
WITHOUT_CLASSIFICATION	build first node only and return false
WITHOUT_CLASSIFICATION	line 459
WITHOUT_CLASSIFICATION	line 481
WITHOUT_CLASSIFICATION	line 506
WITHOUT_CLASSIFICATION	field separator
WITHOUT_CLASSIFICATION	line 691
WITHOUT_CLASSIFICATION	line 549
WITHOUT_CLASSIFICATION	line 558
WITHOUT_CLASSIFICATION	line 561
WITHOUT_CLASSIFICATION	line 589
WITHOUT_CLASSIFICATION	line 595
WITHOUT_CLASSIFICATION	line 623
WITHOUT_CLASSIFICATION	line 969
WITHOUT_CLASSIFICATION	line 630
WITHOUT_CLASSIFICATION	line 661
WITHOUT_CLASSIFICATION	do we have a dynamic container?
WITHOUT_CLASSIFICATION	line 699
WITHOUT_CLASSIFICATION	add array construction methods
WITHOUT_CLASSIFICATION	record the loop we are beginning to process
WITHOUT_CLASSIFICATION	line 779
WITHOUT_CLASSIFICATION	line 860
WITHOUT_CLASSIFICATION	if true returns the rest of the array starting at the index
WITHOUT_CLASSIFICATION	line 829
WITHOUT_CLASSIFICATION	line 866
WITHOUT_CLASSIFICATION	line 884
WITHOUT_CLASSIFICATION	line 922
WITHOUT_CLASSIFICATION	line 1417
WITHOUT_CLASSIFICATION	line 627
WITHOUT_CLASSIFICATION	line 887
WITHOUT_CLASSIFICATION	line 1043
WITHOUT_CLASSIFICATION	line 875
WITHOUT_CLASSIFICATION	line 909
WITHOUT_CLASSIFICATION	line 1078
WITHOUT_CLASSIFICATION	line 857
WITHOUT_CLASSIFICATION	line 1126
WITHOUT_CLASSIFICATION	line 832
WITHOUT_CLASSIFICATION	line 1311
WITHOUT_CLASSIFICATION	line 1383
WITHOUT_CLASSIFICATION	line 1424
WITHOUT_CLASSIFICATION	line 826
WITHOUT_CLASSIFICATION	line 1038
WITHOUT_CLASSIFICATION	1. load the module first lhs of node 2. then load the constant from the module
WITHOUT_CLASSIFICATION	line 899
WITHOUT_CLASSIFICATION	line 811
WITHOUT_CLASSIFICATION	instance method
WITHOUT_CLASSIFICATION	line 1877
WITHOUT_CLASSIFICATION	build ir for body
WITHOUT_CLASSIFICATION	line 1995
WITHOUT_CLASSIFICATION	multiple conditions for when
WITHOUT_CLASSIFICATION	done done done done
WITHOUT_CLASSIFICATION	build else if it exists
WITHOUT_CLASSIFICATION	jump to l if this arg is not null. if null fall through and build the default value!
WITHOUT_CLASSIFICATION	value of the last expression in the block
WITHOUT_CLASSIFICATION	now for the rest
WITHOUT_CLASSIFICATION	both for fixed arity and variable arity methods
WITHOUT_CLASSIFICATION	private interface
WITHOUT_CLASSIFICATION	rest of the argument array!
WITHOUT_CLASSIFICATION	line 753
WITHOUT_CLASSIFICATION	while processing loops this returns the loop that we are processing.
WITHOUT_CLASSIFICATION	build closure body and return the result of the closure
WITHOUT_CLASSIFICATION	line 801
WITHOUT_CLASSIFICATION	get the container for this new module
WITHOUT_CLASSIFICATION	build args
WITHOUT_CLASSIFICATION	create a new closure context
WITHOUT_CLASSIFICATION	assign the closure to the block variable in the parent scope and return it
WITHOUT_CLASSIFICATION	line 727
WITHOUT_CLASSIFICATION	line 706
WITHOUT_CLASSIFICATION	build the module body
WITHOUT_CLASSIFICATION	if more than 4 locals get the locals array too
WITHOUT_CLASSIFICATION	if a closure the next is simply a return from the closure! if a regular loop the next is simply a jump to the end of the iteration
WITHOUT_CLASSIFICATION	set attr
WITHOUT_CLASSIFICATION	call operator
WITHOUT_CLASSIFICATION	get attr
WITHOUT_CLASSIFICATION	we won t enter the loop just build the condition node
WITHOUT_CLASSIFICATION	build first node as non expr and build second node
WITHOUT_CLASSIFICATION	do nothing fall back on default compiler below
WITHOUT_CLASSIFICATION	this does the assignment!
WITHOUT_CLASSIFICATION	use irubyobject
WITHOUT_CLASSIFICATION	if v1 is defined and true we are done!
WITHOUT_CLASSIFICATION	build the cfg for this scope supported only by methods closures
WITHOUT_CLASSIFICATION	for closures a redo is a jump to the beginning of the closure for non closures a redo is a jump to the beginning of the loop
WITHOUT_CLASSIFICATION	what handles warnings
WITHOUT_CLASSIFICATION	top level script!
WITHOUT_CLASSIFICATION	build a dummy static method for the class the scope in which all definitions and class code executes equivalent to java clinit
WITHOUT_CLASSIFICATION	the root method of a class the scope in which all definitions and class code executes equivalent to java clinit
WITHOUT_CLASSIFICATION	line 682
WITHOUT_CLASSIFICATION	dummy top level method for the class
WITHOUT_CLASSIFICATION	define the operations below
WITHOUT_CLASSIFICATION	def instructions
WITHOUT_CLASSIFICATION	create a new temporary variable
WITHOUT_CLASSIFICATION	eval instructions
WITHOUT_CLASSIFICATION	value copy and type conversion operations
WITHOUT_CLASSIFICATION	line 639
WITHOUT_CLASSIFICATION	closure instructions
WITHOUT_CLASSIFICATION	alu operations
WITHOUT_CLASSIFICATION	loads
WITHOUT_CLASSIFICATION	exception instructions
WITHOUT_CLASSIFICATION	optimization guards
WITHOUT_CLASSIFICATION	a case when branch
WITHOUT_CLASSIFICATION	stores
WITHOUT_CLASSIFICATION	jump and branch operations
WITHOUT_CLASSIFICATION	arg
WITHOUT_CLASSIFICATION	others
WITHOUT_CLASSIFICATION	returns the containing parent scope can be a dynamic value hence operand !
WITHOUT_CLASSIFICATION	scripts
WITHOUT_CLASSIFICATION	scripts and modules
WITHOUT_CLASSIFICATION	line 296
WITHOUT_CLASSIFICATION	run the pass on the passed in scope!
WITHOUT_CLASSIFICATION	by default return instructions cannot be deleted
WITHOUT_CLASSIFICATION	default implementation methods below
WITHOUT_CLASSIFICATION	run the passed in compiler pass on this scope!
WITHOUT_CLASSIFICATION	indicate that we are done processing the loop
WITHOUT_CLASSIFICATION	abstract methods without a default implementation
WITHOUT_CLASSIFICATION	check if we can optimize this call based on the receiving method and receiver type use the simplified receiver!
WITHOUT_CLASSIFICATION	optimize some core class method calls for constant values
WITHOUT_CLASSIFICATION	if the cfg of the method is around print the cfg!
WITHOUT_CLASSIFICATION	public fields and methods below
WITHOUT_CLASSIFICATION	if we got a simplified value mark the call dead and insert a copy in its place!
WITHOUT_CLASSIFICATION	readline
WITHOUT_CLASSIFICATION	dataflow problem with which this node is associated cfg node for which this node contains info.
WITHOUT_CLASSIFICATION	if the call has been optimized away in the previous step it is no longer a hard boundary for opts!
WITHOUT_CLASSIFICATION	protected fields methods below
WITHOUT_CLASSIFICATION	public abstract methods
WITHOUT_CLASSIFICATION	line 574
WITHOUT_CLASSIFICATION	in is the same!
WITHOUT_CLASSIFICATION	compute meet over all paths solution for this dataflow problem on the input cfg.. this implements a standard worklist algorithm.
WITHOUT_CLASSIFICATION	in changed!
WITHOUT_CLASSIFICATION	public methods with a default implementation
WITHOUT_CLASSIFICATION	line 586
WITHOUT_CLASSIFICATION	call site
WITHOUT_CLASSIFICATION	line 598
WITHOUT_CLASSIFICATION	we want unique ids for dataflow variables
WITHOUT_CLASSIFICATION	individual analyses should override this
WITHOUT_CLASSIFICATION	v is defined it is no longer live before i
WITHOUT_CLASSIFICATION	private fields and methods below
WITHOUT_CLASSIFICATION	protected fields and methods below
WITHOUT_CLASSIFICATION	unique id assigned to this variable
WITHOUT_CLASSIFICATION	invoke
WITHOUT_CLASSIFICATION	switch to an allocator based on a default constructor
WITHOUT_CLASSIFICATION	start out with a default rubyobject allocator
WITHOUT_CLASSIFICATION	traverse the instructions in this basic block in reverse order!
WITHOUT_CLASSIFICATION	out union in succs
WITHOUT_CLASSIFICATION	class or module
WITHOUT_CLASSIFICATION	public interface
WITHOUT_CLASSIFICATION	protected package fields methods
WITHOUT_CLASSIFICATION	abstract please override methods
WITHOUT_CLASSIFICATION	if v is not live at the instruction site and it has no side effects mark it dead!
WITHOUT_CLASSIFICATION	do not mark this instruction s operands live if the instruction itself is dead!
WITHOUT_CLASSIFICATION	line 782
WITHOUT_CLASSIFICATION	line 503
WITHOUT_CLASSIFICATION	line 526
WITHOUT_CLASSIFICATION	private fields methods
WITHOUT_CLASSIFICATION	used during optimization passes to propagate type and other information
WITHOUT_CLASSIFICATION	line 512
WITHOUT_CLASSIFICATION	line 333
WITHOUT_CLASSIFICATION	line 494
WITHOUT_CLASSIFICATION	list of all variables used by all operands of this instruction
WITHOUT_CLASSIFICATION	line 478
WITHOUT_CLASSIFICATION	array of all operands for this instruction
WITHOUT_CLASSIFICATION	line 454
WITHOUT_CLASSIFICATION	line 466
WITHOUT_CLASSIFICATION	by default no simplifications!
WITHOUT_CLASSIFICATION	line 445
WITHOUT_CLASSIFICATION	can this call lead to ruby code getting modified? if we don t know what method we are calling we assume it can pessimistic but safe! if we do know the target method we ask the method itself whether it modifies ruby code
WITHOUT_CLASSIFICATION	line 397
WITHOUT_CLASSIFICATION	line 345
WITHOUT_CLASSIFICATION	line 1571
WITHOUT_CLASSIFICATION	load handle
WITHOUT_CLASSIFICATION	nothing to do by default
WITHOUT_CLASSIFICATION	netprotocolbufferedio
WITHOUT_CLASSIFICATION	you can only value replace atomic values
WITHOUT_CLASSIFICATION	map of label basic blocks with that label
WITHOUT_CLASSIFICATION	if divisor is zero don t simplify!
WITHOUT_CLASSIFICATION	neither
WITHOUT_CLASSIFICATION	the operand that this attribute targets deferred attributevalue val attribute value
WITHOUT_CLASSIFICATION	get the target class of this operand if we know it!
WITHOUT_CLASSIFICATION	arrays ranges etc. are compound values variables fixnums floats etc. are atomic values
WITHOUT_CLASSIFICATION	rubysocket
WITHOUT_CLASSIFICATION	for simplification get the target value even if compound
WITHOUT_CLASSIFICATION	map of label basic blocks which are waiting for a bb with that label
WITHOUT_CLASSIFICATION	object args
WITHOUT_CLASSIFICATION	line 377
WITHOUT_CLASSIFICATION	init before building basic blocks below!
WITHOUT_CLASSIFICATION	currbb cannot be null!
WITHOUT_CLASSIFICATION	add forward ref. edges
WITHOUT_CLASSIFICATION	case 4 case 5
WITHOUT_CLASSIFICATION	jump instruction bbs dont add an edge to the succeeding bb by default
WITHOUT_CLASSIFICATION	root level logic
WITHOUT_CLASSIFICATION	noex private for toplevel
WITHOUT_CLASSIFICATION	root level classes
WITHOUT_CLASSIFICATION	invoke specific arity version
WITHOUT_CLASSIFICATION	at end
WITHOUT_CLASSIFICATION	args array
WITHOUT_CLASSIFICATION	no candidates? fail.
WITHOUT_CLASSIFICATION	object arg0
WITHOUT_CLASSIFICATION	no silly ticks!
WITHOUT_CLASSIFICATION	useful for code completion inside the irb
WITHOUT_CLASSIFICATION	line 1808
WITHOUT_CLASSIFICATION	if the task was scheduled wait for it to finish before polling for the exception it would have thrown.
WITHOUT_CLASSIFICATION	explicit reference to these vars as symbols...
WITHOUT_CLASSIFICATION	line 1814
WITHOUT_CLASSIFICATION	undo check
WITHOUT_CLASSIFICATION	no check for
WITHOUT_CLASSIFICATION	t n
WITHOUT_CLASSIFICATION	constants webrick crashes without
WITHOUT_CLASSIFICATION	something like cvar cbase from eval.c factored out for the benefit. of all the classvar related node evaluations
WITHOUT_CLASSIFICATION	line 1694
WITHOUT_CLASSIFICATION	restore position
WITHOUT_CLASSIFICATION	this is ensured by the callers
WITHOUT_CLASSIFICATION	line 1772
WITHOUT_CLASSIFICATION	binding provided for scope use it
WITHOUT_CLASSIFICATION	line 1745
WITHOUT_CLASSIFICATION	no binding just eval in current frame caller s frame
WITHOUT_CLASSIFICATION	line 1757
WITHOUT_CLASSIFICATION	line 1733
WITHOUT_CLASSIFICATION	i th argument
WITHOUT_CLASSIFICATION	used by the compiler to simplify arg processing
WITHOUT_CLASSIFICATION	line 1658
WITHOUT_CLASSIFICATION	otherwise rethrow
WITHOUT_CLASSIFICATION	line 1644
WITHOUT_CLASSIFICATION	line 1632
WITHOUT_CLASSIFICATION	jruby 852 ignore escape key it causes irb to quit if we pass it out through readline
WITHOUT_CLASSIFICATION	no editing before startpos
WITHOUT_CLASSIFICATION	jruby 2673 if wrapping a nativeexception use the actual java exception s trace as our java trace
WITHOUT_CLASSIFICATION	mri does similar thing on macos x with editline wrapper .
WITHOUT_CLASSIFICATION	fixme jruby 3604
WITHOUT_CLASSIFICATION	not overridden let s go
WITHOUT_CLASSIFICATION	if it s the exception we re expecting
WITHOUT_CLASSIFICATION	line 1600
WITHOUT_CLASSIFICATION	no timeout in critical section
WITHOUT_CLASSIFICATION	complete using a proc object
WITHOUT_CLASSIFICATION	clear basename so it s anonymous when raising
WITHOUT_CLASSIFICATION	line 1587
WITHOUT_CLASSIFICATION	toplevel defines
WITHOUT_CLASSIFICATION	timeout module methods
WITHOUT_CLASSIFICATION	these are not really used by timeout but exposed for compatibility
WITHOUT_CLASSIFICATION	line 1568
WITHOUT_CLASSIFICATION	array and struct are only used internally
WITHOUT_CLASSIFICATION	line 1290
WITHOUT_CLASSIFICATION	line 1510
WITHOUT_CLASSIFICATION	when a length is given read string acts like get bytes
WITHOUT_CLASSIFICATION	last token read via yylex .
WITHOUT_CLASSIFICATION	older jdk on linux map c to libc.so which doesn t work
WITHOUT_CLASSIFICATION	. this variant of newstruct is called from structlayoutbuilder.
WITHOUT_CLASSIFICATION	the value of 1 is for socket ai passive.
WITHOUT_CLASSIFICATION	windows is llp64
WITHOUT_CLASSIFICATION	add pointer null as a constant
WITHOUT_CLASSIFICATION	blah
WITHOUT_CLASSIFICATION	more constants needed by specs
WITHOUT_CLASSIFICATION	line 1553
WITHOUT_CLASSIFICATION	replace memory object with one that throws an exception on any access
WITHOUT_CLASSIFICATION	ensure room for terminating zero byte
WITHOUT_CLASSIFICATION	a specific version was requested use as is for search
WITHOUT_CLASSIFICATION	line 1516
WITHOUT_CLASSIFICATION	case float
WITHOUT_CLASSIFICATION	assemble a name offset array
WITHOUT_CLASSIFICATION	create the ordered list of field names from the map
WITHOUT_CLASSIFICATION	line 1550
WITHOUT_CLASSIFICATION	no auto cleanup needed
WITHOUT_CLASSIFICATION	keep a reference to avoid the memory being freed
WITHOUT_CLASSIFICATION	line 1299
WITHOUT_CLASSIFICATION	get the convention from the options hash
WITHOUT_CLASSIFICATION	line 1462
WITHOUT_CLASSIFICATION	line 1477
WITHOUT_CLASSIFICATION	line 1480
WITHOUT_CLASSIFICATION	line 1434
WITHOUT_CLASSIFICATION	rubyunixserver
WITHOUT_CLASSIFICATION	line 1392
WITHOUT_CLASSIFICATION	line 1348
WITHOUT_CLASSIFICATION	rubyipsocket
WITHOUT_CLASSIFICATION	def self.getaddrinfo host port family nil socktype nil protocol nil flags nil
WITHOUT_CLASSIFICATION	when socket ai passive and host is nil return any address.
WITHOUT_CLASSIFICATION	line 1239
WITHOUT_CLASSIFICATION	set up for potentially fast int operations
WITHOUT_CLASSIFICATION	hook up the memorypointer class if its not already there
WITHOUT_CLASSIFICATION	sockaddr un has different structure on different platforms. see jruby 2213 for more details.
WITHOUT_CLASSIFICATION	this is a bit convoluted because 1 socketchannel.bind is only in jdk 7 and 2 socket.getchannel seems to return null in some cases
WITHOUT_CLASSIFICATION	line 1210
WITHOUT_CLASSIFICATION	rubyudpsocket
WITHOUT_CLASSIFICATION	host is nil or the empty string bind to inaddr any
WITHOUT_CLASSIFICATION	host and port given
WITHOUT_CLASSIFICATION	make sure descriptor is registered
WITHOUT_CLASSIFICATION	rubybasicsocket
WITHOUT_CLASSIFICATION	by default we always reverse lookup unless do not reverse lookup set.
WITHOUT_CLASSIFICATION	recv returns nil on eof
WITHOUT_CLASSIFICATION	continue with normal initialization
WITHOUT_CLASSIFICATION	we don t have to define any that we don t support see socket.c
WITHOUT_CLASSIFICATION	mandatory constants we haven t implemented
WITHOUT_CLASSIFICATION	line 1107
WITHOUT_CLASSIFICATION	line 1187
WITHOUT_CLASSIFICATION	line 1089
WITHOUT_CLASSIFICATION	0.0.0.0
WITHOUT_CLASSIFICATION	line 1193
WITHOUT_CLASSIFICATION	line 1151
WITHOUT_CLASSIFICATION	line 1175
WITHOUT_CLASSIFICATION	line 1119
WITHOUT_CLASSIFICATION	line 1133
WITHOUT_CLASSIFICATION	all threads in ruby thread group plus main thread
WITHOUT_CLASSIFICATION	do nothing just exit
WITHOUT_CLASSIFICATION	first check if the sender has unreceived mail
WITHOUT_CLASSIFICATION	line 1076
WITHOUT_CLASSIFICATION	line 660
WITHOUT_CLASSIFICATION	numeric host use it for port
WITHOUT_CLASSIFICATION	line 1051
WITHOUT_CLASSIFICATION	line 940
WITHOUT_CLASSIFICATION	no connection immediately accepted let them try again
WITHOUT_CLASSIFICATION	line 1034
WITHOUT_CLASSIFICATION	line 1032
WITHOUT_CLASSIFICATION	line 1008
WITHOUT_CLASSIFICATION	line 1045
WITHOUT_CLASSIFICATION	line 978
WITHOUT_CLASSIFICATION	otherwise one key has been selected ours so we get the channel and hand it off
WITHOUT_CLASSIFICATION	line 984
WITHOUT_CLASSIFICATION	line 1004
WITHOUT_CLASSIFICATION	line 903
WITHOUT_CLASSIFICATION	line 936
WITHOUT_CLASSIFICATION	line 915
WITHOUT_CLASSIFICATION	line 926
WITHOUT_CLASSIFICATION	nativethread.setpriority priority
WITHOUT_CLASSIFICATION	restore context classloader in case we re using a thread pool
WITHOUT_CLASSIFICATION	line 879
WITHOUT_CLASSIFICATION	line 868
WITHOUT_CLASSIFICATION	line 858
WITHOUT_CLASSIFICATION	line 848
WITHOUT_CLASSIFICATION	line 806
WITHOUT_CLASSIFICATION	line 824
WITHOUT_CLASSIFICATION	line 839
WITHOUT_CLASSIFICATION	line 815
WITHOUT_CLASSIFICATION	someone called exit! so we need to kill the main thread
WITHOUT_CLASSIFICATION	call the thread s code
WITHOUT_CLASSIFICATION	line 763
WITHOUT_CLASSIFICATION	line 670
WITHOUT_CLASSIFICATION	set thread context jruby classloader here for ruby owned thread
WITHOUT_CLASSIFICATION	line 696
WITHOUT_CLASSIFICATION	line 729
WITHOUT_CLASSIFICATION	future is done or cancelled skip it
WITHOUT_CLASSIFICATION	line 646
WITHOUT_CLASSIFICATION	line 607
WITHOUT_CLASSIFICATION	line 378
WITHOUT_CLASSIFICATION	line 596
WITHOUT_CLASSIFICATION	line 578
WITHOUT_CLASSIFICATION	line 566
WITHOUT_CLASSIFICATION	line 556
WITHOUT_CLASSIFICATION	line 507
WITHOUT_CLASSIFICATION	line 470
WITHOUT_CLASSIFICATION	line 501
WITHOUT_CLASSIFICATION	line 411
WITHOUT_CLASSIFICATION	line 452
WITHOUT_CLASSIFICATION	line 420
WITHOUT_CLASSIFICATION	line 344
WITHOUT_CLASSIFICATION	thread is not alive skip it
WITHOUT_CLASSIFICATION	line 338
WITHOUT_CLASSIFICATION	line 314
WITHOUT_CLASSIFICATION	unwrap newline nodes to get their actual type
WITHOUT_CLASSIFICATION	get runtime create jump error and throw it
WITHOUT_CLASSIFICATION	we need to close the out since some processes would just wait for the stream to be closed before they process its content and produce the output. e.g. cat .
WITHOUT_CLASSIFICATION	probably a primitive
WITHOUT_CLASSIFICATION	be dead
WITHOUT_CLASSIFICATION	two args no block load null block
WITHOUT_CLASSIFICATION	invoke pre method stuff
WITHOUT_CLASSIFICATION	clear the redo
WITHOUT_CLASSIFICATION	return jump handling
WITHOUT_CLASSIFICATION	redo jump handling
WITHOUT_CLASSIFICATION	return result if we re still good
WITHOUT_CLASSIFICATION	actual required is less than 3 so we use specific arity
WITHOUT_CLASSIFICATION	throw redo error if we re still good
WITHOUT_CLASSIFICATION	finally
WITHOUT_CLASSIFICATION	no required specified check actual number of required args
WITHOUT_CLASSIFICATION	finally handling for abnormal exit
WITHOUT_CLASSIFICATION	in debug mode we append dbg to class name to force it to regenerate or use pre generated debug version
WITHOUT_CLASSIFICATION	simple path no multimethod
WITHOUT_CLASSIFICATION	for zero one two three arities javamethod.javamethod .call ...irubyobject args... will check
WITHOUT_CLASSIFICATION	normal all rest method
WITHOUT_CLASSIFICATION	dumpinginvocationmethodfactory
WITHOUT_CLASSIFICATION	just confirm args length required
WITHOUT_CLASSIFICATION	self name
WITHOUT_CLASSIFICATION	tc
WITHOUT_CLASSIFICATION	raise an error if arity does not match requirements
WITHOUT_CLASSIFICATION	variable args with block
WITHOUT_CLASSIFICATION	two args with block
WITHOUT_CLASSIFICATION	close it out
WITHOUT_CLASSIFICATION	one arg no block load null block
WITHOUT_CLASSIFICATION	zero args no block load null block
WITHOUT_CLASSIFICATION	one arg with block
WITHOUT_CLASSIFICATION	load block if it accepts block
WITHOUT_CLASSIFICATION	three args with block
WITHOUT_CLASSIFICATION	all other arg cases without block
WITHOUT_CLASSIFICATION	all other arg cases with block
WITHOUT_CLASSIFICATION	call post method stuff exception raised
WITHOUT_CLASSIFICATION	three args no block do nothing
WITHOUT_CLASSIFICATION	two args no block do nothing
WITHOUT_CLASSIFICATION	one arg no block do nothing
WITHOUT_CLASSIFICATION	static invocation
WITHOUT_CLASSIFICATION	void return type so we need to load a nil for returning below
WITHOUT_CLASSIFICATION	load receiver as original type for virtual invocation
WITHOUT_CLASSIFICATION	normal finally and exit
WITHOUT_CLASSIFICATION	virtual invocation
WITHOUT_CLASSIFICATION	promise to implement one to n
WITHOUT_CLASSIFICATION	promise to implement three with block
WITHOUT_CLASSIFICATION	singleton classes don t get their own visibility domain
WITHOUT_CLASSIFICATION	this method is called to build assignments for a multiple assignment instruction
WITHOUT_CLASSIFICATION	method itself threadcontext invoked name
WITHOUT_CLASSIFICATION	line 1162
WITHOUT_CLASSIFICATION	never reached
WITHOUT_CLASSIFICATION	and remaining jump exceptions should restore !
WITHOUT_CLASSIFICATION	simpleinvocationmethod
WITHOUT_CLASSIFICATION	for visibility we need real meta class and not anonymous one from class self
WITHOUT_CLASSIFICATION	yyrindex 889
WITHOUT_CLASSIFICATION	no args
WITHOUT_CLASSIFICATION	21!
WITHOUT_CLASSIFICATION	c c c c string c null c
WITHOUT_CLASSIFICATION	promise to implement n with block
WITHOUT_CLASSIFICATION	promise to implement zero to n with block
WITHOUT_CLASSIFICATION	promise to implement two to three with block
WITHOUT_CLASSIFICATION	promise to implement zero to three with block
WITHOUT_CLASSIFICATION	variable is never read variable is never live
WITHOUT_CLASSIFICATION	promise to implement one to n with block
WITHOUT_CLASSIFICATION	inline script
WITHOUT_CLASSIFICATION	build the class body!
WITHOUT_CLASSIFICATION	method.ifnonnull truelabel
WITHOUT_CLASSIFICATION	promise to implement one to three with block
WITHOUT_CLASSIFICATION	interfaces are handled as modules
WITHOUT_CLASSIFICATION	normally we could leave these to fall back on the superclass but since it dispatches through the version below which may dispatch through the block version we can save it a couple hops by overriding these here.
WITHOUT_CLASSIFICATION	c
WITHOUT_CLASSIFICATION	get self
WITHOUT_CLASSIFICATION	confirm maximum not greater than optional
WITHOUT_CLASSIFICATION	wrap self and store the wrapper
WITHOUT_CLASSIFICATION	promise to implement two to three
WITHOUT_CLASSIFICATION	list of modules classes and methods defined in this scope!
WITHOUT_CLASSIFICATION	promise to implement two to n
WITHOUT_CLASSIFICATION	returns the containing parent scope!
WITHOUT_CLASSIFICATION	promise to implement one to three
WITHOUT_CLASSIFICATION	all other arities use n dispatch path
WITHOUT_CLASSIFICATION	load up object and add a few useful methods
WITHOUT_CLASSIFICATION	all methods dispatch to the simple version by default which is method missing normally
WITHOUT_CLASSIFICATION	set ruby
WITHOUT_CLASSIFICATION	get current context
WITHOUT_CLASSIFICATION	set rubyclass
WITHOUT_CLASSIFICATION	try specific name first falling back on simple name
WITHOUT_CLASSIFICATION	the proxy wrapper type hierarchy
WITHOUT_CLASSIFICATION	try lookup again under lock
WITHOUT_CLASSIFICATION	for each simple method name implement the complex methods calling the simple version
WITHOUT_CLASSIFICATION	fields needed for dispatch and such
WITHOUT_CLASSIFICATION	promise to implement three to n
WITHOUT_CLASSIFICATION	construct the class implementing all supertypes
WITHOUT_CLASSIFICATION	handle redos by restarting the block
WITHOUT_CLASSIFICATION	promise to implement zero to three
WITHOUT_CLASSIFICATION	create constructor
WITHOUT_CLASSIFICATION	end constructor
WITHOUT_CLASSIFICATION	by default the container for this class is s
WITHOUT_CLASSIFICATION	map of constants defined in this scope not valid for methods!
WITHOUT_CLASSIFICATION	scripts classes and modules
WITHOUT_CLASSIFICATION	store the wrapper
WITHOUT_CLASSIFICATION	store it
WITHOUT_CLASSIFICATION	now create a method added that can replace the dynamicmethod fields as they re redefined
WITHOUT_CLASSIFICATION	create static init for a monitor object
WITHOUT_CLASSIFICATION	control flow graph for this scope
WITHOUT_CLASSIFICATION	prepare temp locals
WITHOUT_CLASSIFICATION	field is null lock class and try to populate
WITHOUT_CLASSIFICATION	finally block to release monitor
WITHOUT_CLASSIFICATION	end of try block
WITHOUT_CLASSIFICATION	try finally block to ensure unlock
WITHOUT_CLASSIFICATION	line 1158
WITHOUT_CLASSIFICATION	method still not available call method missing
WITHOUT_CLASSIFICATION	convert to irubyobject
WITHOUT_CLASSIFICATION	setup the class
WITHOUT_CLASSIFICATION	exception handling for monitor release
WITHOUT_CLASSIFICATION	load self class and name
WITHOUT_CLASSIFICATION	re get re check method if not null now go to dispatch
WITHOUT_CLASSIFICATION	create the class
WITHOUT_CLASSIFICATION	if we expect a return value unwrap it
WITHOUT_CLASSIFICATION	invoke method
WITHOUT_CLASSIFICATION	end setup method
WITHOUT_CLASSIFICATION	return
WITHOUT_CLASSIFICATION	load arguments into irubyobject for dispatch
WITHOUT_CLASSIFICATION	write volatile
WITHOUT_CLASSIFICATION	up two slots for long s two halves
WITHOUT_CLASSIFICATION	load arguments
WITHOUT_CLASSIFICATION	set the full name
WITHOUT_CLASSIFICATION	construct the new interface impl and set it into the object
WITHOUT_CLASSIFICATION	line 326
WITHOUT_CLASSIFICATION	2
WITHOUT_CLASSIFICATION	signalfacade
WITHOUT_CLASSIFICATION	line 362
WITHOUT_CLASSIFICATION	include all interfaces
WITHOUT_CLASSIFICATION	add all public constructors note getconstructors only returns public ones
WITHOUT_CLASSIFICATION	add all instance and static methods
WITHOUT_CLASSIFICATION	ruby name
WITHOUT_CLASSIFICATION	note the five match methods are arity split to avoid the cost of boxing arguments when there s already a cached match. do not condense them into a single method.
WITHOUT_CLASSIFICATION	only include static methods if specified
WITHOUT_CLASSIFICATION	only public static fields that are valid constants
WITHOUT_CLASSIFICATION	add a few type specific special methods
WITHOUT_CLASSIFICATION	add all static variables
WITHOUT_CLASSIFICATION	long first because it s what fixnum claims to be
WITHOUT_CLASSIFICATION	if we hold a java object we need a java class accessor
WITHOUT_CLASSIFICATION	todo varargs?
WITHOUT_CLASSIFICATION	double first because it s what float claims to be
WITHOUT_CLASSIFICATION	end of scoping for closure s vars
WITHOUT_CLASSIFICATION	dummy bodies for default impls
WITHOUT_CLASSIFICATION	walk all superclasses aggregating interfaces
WITHOUT_CLASSIFICATION	too much array creation!
WITHOUT_CLASSIFICATION	initialize cache of parameter types to method
WITHOUT_CLASSIFICATION	look through all mappings to find a match entry for this field
WITHOUT_CLASSIFICATION	hit a non java proxy class included modules can be a cause of this...skip
WITHOUT_CLASSIFICATION	we could not find all of them print out first one we could print them all?
WITHOUT_CLASSIFICATION	next we define a few private methods that we ll use to manipulate the java object contained within this ruby object
WITHOUT_CLASSIFICATION	initialize this if it hasn t been
WITHOUT_CLASSIFICATION	invoke static file
WITHOUT_CLASSIFICATION	initialize these if they haven t been
WITHOUT_CLASSIFICATION	construct the mirror class and parent classes
WITHOUT_CLASSIFICATION	setup new etc unless this is a concretejavaproxy subclass
WITHOUT_CLASSIFICATION	not allowed for original non generated java classes note not allowing for any previously created class right now this restriction might be loosened later for generated classes
WITHOUT_CLASSIFICATION	exact arg list file
WITHOUT_CLASSIFICATION	list of interfaces we implement
WITHOUT_CLASSIFICATION	we capture the original new and make it private
WITHOUT_CLASSIFICATION	declare the field
WITHOUT_CLASSIFICATION	construct new array proxy arrayjavaproxy
WITHOUT_CLASSIFICATION	boxed arg list file
WITHOUT_CLASSIFICATION	get map of all fields we want to define.
WITHOUT_CLASSIFICATION	we ve already done the above priming logic just add another interface to the list of intentions unless we re past the point of no return or already intend to implement the given interface
WITHOUT_CLASSIFICATION	jcreate instantiates the proxy object which implements all interfaces and which is wrapped and implemented by this object
WITHOUT_CLASSIFICATION	implement all forces implementation of all interfaces we intend for this class to implement
WITHOUT_CLASSIFICATION	now we add an implement and implement all methods to the class
WITHOUT_CLASSIFICATION	not allowed for existing java interface modules
WITHOUT_CLASSIFICATION	weakly reserved names
WITHOUT_CLASSIFICATION	array creation should use this variant
WITHOUT_CLASSIFICATION	setup constants for public inner classes
WITHOUT_CLASSIFICATION	jruby 3014 make file dynamically determined at load time but we provide a reasonable default here
WITHOUT_CLASSIFICATION	parent.setconstant name proxyclass where the name should come from ?
WITHOUT_CLASSIFICATION	keep this variant for kind of? testing
WITHOUT_CLASSIFICATION	already set up append features just add the interface if we haven t already
WITHOUT_CLASSIFICATION	array of interface type creation identity
WITHOUT_CLASSIFICATION	?l boolean true if file1 exists and is a symbolic link
WITHOUT_CLASSIFICATION	this try catch is to allow failing over to the commands logic when running from within a jruby complete jar file which has jruby.home a jar file url that does not resolve correctly with jrubyfile.create.
WITHOUT_CLASSIFICATION	including interface module so old style interface subclasses will respond correctly to kind of? etc.
WITHOUT_CLASSIFICATION	add reference to interface module
WITHOUT_CLASSIFICATION	figure end char. 0 is special to indicate begin end and that no nesting?
WITHOUT_CLASSIFICATION	proxy is complete return it
WITHOUT_CLASSIFICATION	construct static scope list of names
WITHOUT_CLASSIFICATION	same as argument types but matches name in java.lang.reflect.constructor method
WITHOUT_CLASSIFICATION	proxy module for interfaces
WITHOUT_CLASSIFICATION	called only by initializing thread no synchronization required
WITHOUT_CLASSIFICATION	proxy class for concrete classes. also used for concrete interfaces which is why we have two fields
WITHOUT_CLASSIFICATION	if there s no constructor we must prevent construction
WITHOUT_CLASSIFICATION	something?
WITHOUT_CLASSIFICATION	allow proxy to be read without synchronization. if proxy is under construction only the building thread can see it.
WITHOUT_CLASSIFICATION	modified only by addmethod no synchronization required
WITHOUT_CLASSIFICATION	now add all aliases for the static methods fields as appropriate
WITHOUT_CLASSIFICATION	line 1329
WITHOUT_CLASSIFICATION	store previous exception for restoration if we rescue something
WITHOUT_CLASSIFICATION	do nothing it s a non impl method
WITHOUT_CLASSIFICATION	line 1377
WITHOUT_CLASSIFICATION	additionally add ? postfixed aliases to any boolean methods and properties.
WITHOUT_CLASSIFICATION	add main impl used for detached or command line execution of this script with a new runtime root method of a script is always in stub0 method0
WITHOUT_CLASSIFICATION	add property name aliases
WITHOUT_CLASSIFICATION	getfoo foo getfoo int foo int
WITHOUT_CLASSIFICATION	setfoo foo foo foo
WITHOUT_CLASSIFICATION	no seconds just yield
WITHOUT_CLASSIFICATION	1.9 support for encodings
WITHOUT_CLASSIFICATION	many cases are ok to convert to float if not one of these error
WITHOUT_CLASSIFICATION	getfoobar foobar? foo bar?
WITHOUT_CLASSIFICATION	synthetic methods always have zero arg parameters
WITHOUT_CLASSIFICATION	break jump
WITHOUT_CLASSIFICATION	undefinedmethod should be immutable
WITHOUT_CLASSIFICATION	we force argparamcount to 1 since we always know we ll have args
WITHOUT_CLASSIFICATION	now iterate over all installers and make sure they also have appropriate aliases
WITHOUT_CLASSIFICATION	skip catch block
WITHOUT_CLASSIFICATION	main body
WITHOUT_CLASSIFICATION	we need to collect all methods though we ll only install the ones that are named in this class
WITHOUT_CLASSIFICATION	ignore bad constant named inner classes pending jruby 697
WITHOUT_CLASSIFICATION	double check the cache now that we re synchronized
WITHOUT_CLASSIFICATION	can t be converted any more return it
WITHOUT_CLASSIFICATION	java.getproxyclass deals with sync issues so we won t duplicate the logic here
WITHOUT_CLASSIFICATION	eq 0 i.e. false pop the extra result and replace with the send part of the and
WITHOUT_CLASSIFICATION	old quasi deprecated interface class
WITHOUT_CLASSIFICATION	is something? contains thing?
WITHOUT_CLASSIFICATION	isfoo foo isfoo foo
WITHOUT_CLASSIFICATION	datagram set accordingly again af inet
WITHOUT_CLASSIFICATION	we all all superclasses but avoid adding superclass methods with same name signature as subclass methods see jruby 3130
WITHOUT_CLASSIFICATION	eq 0 i.e. false
WITHOUT_CLASSIFICATION	ignore we won t use invokedynamic
WITHOUT_CLASSIFICATION	restrictive security policy no matter we only want public classes anyway
WITHOUT_CLASSIFICATION	call istrue on the result
WITHOUT_CLASSIFICATION	see note above re return type
WITHOUT_CLASSIFICATION	very restrictive policy disallows member.public we d never actually get this far in that case
WITHOUT_CLASSIFICATION	ignore if it s not a global var
WITHOUT_CLASSIFICATION	irubyobject family args 2
WITHOUT_CLASSIFICATION	dup it since we need to return appropriately if it s false
WITHOUT_CLASSIFICATION	one dimensional array
WITHOUT_CLASSIFICATION	if it s an array of arrays recurse with the component type
WITHOUT_CLASSIFICATION	n dimensional array
WITHOUT_CLASSIFICATION	use specific arity for as much as possible
WITHOUT_CLASSIFICATION	clear body or next result after each successful loop
WITHOUT_CLASSIFICATION	load args 0 which will be the irubyobject representing block args
WITHOUT_CLASSIFICATION	if not a property but is boolean add ? postfixed aliases.
WITHOUT_CLASSIFICATION	done with closure compilation
WITHOUT_CLASSIFICATION	must be back on first line on rewind.
WITHOUT_CLASSIFICATION	invoke file with threadcontext self args null and block null
WITHOUT_CLASSIFICATION	brute force construction inline
WITHOUT_CLASSIFICATION	for object default to natural wrapper type
WITHOUT_CLASSIFICATION	af inet
WITHOUT_CLASSIFICATION	not true eval value and assign
WITHOUT_CLASSIFICATION	rubymodule rubymodule string
WITHOUT_CLASSIFICATION	hmmmm
WITHOUT_CLASSIFICATION	12!
WITHOUT_CLASSIFICATION	rubyobject is already of the required jruby class or subclass
WITHOUT_CLASSIFICATION	thread context
WITHOUT_CLASSIFICATION	we ve found a java type to which we ve coerced the ruby value wrap it
WITHOUT_CLASSIFICATION	it s not one of the types we convert so just pass it out as is without wrapping
WITHOUT_CLASSIFICATION	can t set tc classloader
WITHOUT_CLASSIFICATION	create dir if necessary
WITHOUT_CLASSIFICATION	255.255.255.255
WITHOUT_CLASSIFICATION	we append an index to ensure two identical method names will not conflict
WITHOUT_CLASSIFICATION	create the class with the appropriate class name and source file
WITHOUT_CLASSIFICATION	line number
WITHOUT_CLASSIFICATION	line 323
WITHOUT_CLASSIFICATION	for specific index cases clean up non expression values
WITHOUT_CLASSIFICATION	include interface modules into the proxy class
WITHOUT_CLASSIFICATION	java.lang.object is added at root of java proxy classes
WITHOUT_CLASSIFICATION	generate block bodies initialization code
WITHOUT_CLASSIFICATION	this also handles unsigned int negative signed int conversion
WITHOUT_CLASSIFICATION	include any interfaces we extend
WITHOUT_CLASSIFICATION	now attach java related extras to core classes
WITHOUT_CLASSIFICATION	the template for interface modules
WITHOUT_CLASSIFICATION	no variable initialization because we re reusing parent s scope flat
WITHOUT_CLASSIFICATION	generate variable readers initialization code
WITHOUT_CLASSIFICATION	shouldn t happen but if a superclass is specified it s not ours
WITHOUT_CLASSIFICATION	add all name to class mappings
WITHOUT_CLASSIFICATION	add some base java classes everyone will need
WITHOUT_CLASSIFICATION	we ll only map conventional class names to modules
WITHOUT_CLASSIFICATION	do a void return
WITHOUT_CLASSIFICATION	size 1
WITHOUT_CLASSIFICATION	add alias to meta
WITHOUT_CLASSIFICATION	yygindex 136
WITHOUT_CLASSIFICATION	jruby 2938 the proxy class might already exist
WITHOUT_CLASSIFICATION	add java method for unbound use
WITHOUT_CLASSIFICATION	generate bytelists initialization code
WITHOUT_CLASSIFICATION	upper case name so most likely a class
WITHOUT_CLASSIFICATION	generate regexps initialization code
WITHOUT_CLASSIFICATION	this point is only reached if there was an exception handler installed.
WITHOUT_CLASSIFICATION	generate symbols initialization code
WITHOUT_CLASSIFICATION	interfacejavaproxy.createinterfacejavaproxy context
WITHOUT_CLASSIFICATION	save package module as ivar in parent and add method to parent so we don t have to come back here.
WITHOUT_CLASSIFICATION	this is where we ll get connected when classes are opened using package module syntax.
WITHOUT_CLASSIFICATION	if that succeeds the others should as well
WITHOUT_CLASSIFICATION	for seek cur need to adjust for buffered data
WITHOUT_CLASSIFICATION	retrieve scope from scopes array
WITHOUT_CLASSIFICATION	default for starting tempvariableindex is ok
WITHOUT_CLASSIFICATION	load receiver
WITHOUT_CLASSIFICATION	output record separator
WITHOUT_CLASSIFICATION	make getter for proxy class
WITHOUT_CLASSIFICATION	store the new local vars in a local variable
WITHOUT_CLASSIFICATION	loop until we see the nth separator char
WITHOUT_CLASSIFICATION	if we hit eof or reached limit then we re done
WITHOUT_CLASSIFICATION	re register
WITHOUT_CLASSIFICATION	fill local vars with nil to avoid checking every access.
WITHOUT_CLASSIFICATION	in 1.8 mode this will be a rubyarray containing the arguments in 1.9 mode this will be an irubyobject
WITHOUT_CLASSIFICATION	catch logic for flow control next break
WITHOUT_CLASSIFICATION	build descriptor string
WITHOUT_CLASSIFICATION	root level methods
WITHOUT_CLASSIFICATION	not primitive or lc class
WITHOUT_CLASSIFICATION	if more than 4 locals get and populate the locals array too
WITHOUT_CLASSIFICATION	create list of interfaces to proxy and make sure they really are interfaces
WITHOUT_CLASSIFICATION	line 1313
WITHOUT_CLASSIFICATION	hashcode is a combination of the interfaces and the ruby class we re using to implement them
WITHOUT_CLASSIFICATION	add name to call site list
WITHOUT_CLASSIFICATION	use numbered access method
WITHOUT_CLASSIFICATION	generate fixnums initialization code
WITHOUT_CLASSIFICATION	normal new class implementing interfaces
WITHOUT_CLASSIFICATION	. initialize some components..
WITHOUT_CLASSIFICATION	build scope names string
WITHOUT_CLASSIFICATION	line 1430
WITHOUT_CLASSIFICATION	java reflection does not allow retrieving constructors like methods
WITHOUT_CLASSIFICATION	for zero args case we can stop searching
WITHOUT_CLASSIFICATION	17!
WITHOUT_CLASSIFICATION	module is on top of stack
WITHOUT_CLASSIFICATION	verify the class
WITHOUT_CLASSIFICATION	store the local vars in a local variable if there are any
WITHOUT_CLASSIFICATION	no matching ctor found
WITHOUT_CLASSIFICATION	end class
WITHOUT_CLASSIFICATION	start class
WITHOUT_CLASSIFICATION	. initialize a simple frame. .
WITHOUT_CLASSIFICATION	this test really means that this is a ruby defined subclass of a java class
WITHOUT_CLASSIFICATION	no args with block
WITHOUT_CLASSIFICATION	no matching method found
WITHOUT_CLASSIFICATION	prepare a faster handle if handles are enabled and the method and class are public
WITHOUT_CLASSIFICATION	search through all declared methods to find a closest match
WITHOUT_CLASSIFICATION	must be a public method
WITHOUT_CLASSIFICATION	must be a public class
WITHOUT_CLASSIFICATION	. now we create a new bsfmanager..
WITHOUT_CLASSIFICATION	. first we need to register the jruby engine..
WITHOUT_CLASSIFICATION	for our purposes accessibles are also members and vice versa so we ll include member methods here.
WITHOUT_CLASSIFICATION	jruby 530 while case
WITHOUT_CLASSIFICATION	package scope
WITHOUT_CLASSIFICATION	trigger class initialization for the class
WITHOUT_CLASSIFICATION	no args no block
WITHOUT_CLASSIFICATION	e.printstacktrace
WITHOUT_CLASSIFICATION	populate values for the parameter names
WITHOUT_CLASSIFICATION	. execute a ruby script add the menubar to the frame ..
WITHOUT_CLASSIFICATION	. execute ruby statements..
WITHOUT_CLASSIFICATION	. evaluates a ruby expression and display the result..
WITHOUT_CLASSIFICATION	need names ordered for key generation later
WITHOUT_CLASSIFICATION	ruby level methods
WITHOUT_CLASSIFICATION	method is done declare all variables
WITHOUT_CLASSIFICATION	we only collect methods and interfaces for user defined proxy classes.
WITHOUT_CLASSIFICATION	19!
WITHOUT_CLASSIFICATION	finish class initializer
WITHOUT_CLASSIFICATION	get any included interfaces
WITHOUT_CLASSIFICATION	with args with block
WITHOUT_CLASSIFICATION	statically initialized below
WITHOUT_CLASSIFICATION	lock in the overridden methods for the new class and any as yet uninstantiated ancestor class.
WITHOUT_CLASSIFICATION	load static empty array
WITHOUT_CLASSIFICATION	we generate all constructors and let some fail during invocation later
WITHOUT_CLASSIFICATION	match data
WITHOUT_CLASSIFICATION	construct the super proxy method
WITHOUT_CLASSIFICATION	replace a string of newlines with a single one
WITHOUT_CLASSIFICATION	where we get new positions from.
WITHOUT_CLASSIFICATION	box arguments
WITHOUT_CLASSIFICATION	block
WITHOUT_CLASSIFICATION	end of variable scope
WITHOUT_CLASSIFICATION	this is a simple rethrow handler
WITHOUT_CLASSIFICATION	the current block is already associated with proc. no need to create a new one
WITHOUT_CLASSIFICATION	if not already a proc then we should try and make it one.
WITHOUT_CLASSIFICATION	use the same logic as in evaluationstate
WITHOUT_CLASSIFICATION	opt and rest must be at least required
WITHOUT_CLASSIFICATION	no opt no rest exact match
WITHOUT_CLASSIFICATION	create static private method field
WITHOUT_CLASSIFICATION	only rest must be at least required
WITHOUT_CLASSIFICATION	opt but no rest must be at least required and no more than required opt
WITHOUT_CLASSIFICATION	class state.self and class obj uses defn as opposed to defs
WITHOUT_CLASSIFICATION	find power of two sizes best matching arguments
WITHOUT_CLASSIFICATION	nul
WITHOUT_CLASSIFICATION	must be power of 2 must be power of 2
WITHOUT_CLASSIFICATION	each root node has a top level scope that we need to push
WITHOUT_CLASSIFICATION	read volatile
WITHOUT_CLASSIFICATION	pop extra failed value from first cycle and we re done
WITHOUT_CLASSIFICATION	protected void finalize throws throwable system.err.println objectproxycache id finalized at new java.util.date
WITHOUT_CLASSIFICATION	entry exists proxy has been gc ed. replace entry.
WITHOUT_CLASSIFICATION	wait for i o on any channel
WITHOUT_CLASSIFICATION	system.err.println objectproxycache id started at new java.util.date
WITHOUT_CLASSIFICATION	make getter for handler
WITHOUT_CLASSIFICATION	entryrefs include hash with key to facilitate lookup by segment expunge after ref is removed from referencequeue
WITHOUT_CLASSIFICATION	should not happen!
WITHOUT_CLASSIFICATION	put back lastline for any elements past start of heredoc marker
WITHOUT_CLASSIFICATION	yylhs 496
WITHOUT_CLASSIFICATION	adapter tc
WITHOUT_CLASSIFICATION	references to the java object and its proxy will either both be weak or both be soft since the proxy contains a strong reference to the object so it wouldn t make sense for the reference types to differ.
WITHOUT_CLASSIFICATION	indirect read write volatile
WITHOUT_CLASSIFICATION	ctor used by remove rehash
WITHOUT_CLASSIFICATION	temp method to verify tablesize value must be called under lock
WITHOUT_CLASSIFICATION	must be called under lock
WITHOUT_CLASSIFICATION	how many strings are nested in the current string term
WITHOUT_CLASSIFICATION	for list and only populated if list is not null.
WITHOUT_CLASSIFICATION	start of string n
WITHOUT_CLASSIFICATION	how many bytes into the source are we?
WITHOUT_CLASSIFICATION	it s a comment
WITHOUT_CLASSIFICATION	number of newlines read from the reader
WITHOUT_CLASSIFICATION	visit a label to start scoping for local vars in this method
WITHOUT_CLASSIFICATION	? boolean true if file1 and file2 are identical
WITHOUT_CLASSIFICATION	end of string 0
WITHOUT_CLASSIFICATION	expand variables indentation of final marker
WITHOUT_CLASSIFICATION	last full line read.
WITHOUT_CLASSIFICATION	create constants for open flags
WITHOUT_CLASSIFICATION	get rest of line. linebuffer filled as side effect...
WITHOUT_CLASSIFICATION	argv
WITHOUT_CLASSIFICATION	octal constant
WITHOUT_CLASSIFICATION	just ignore
WITHOUT_CLASSIFICATION	regexp engine java
WITHOUT_CLASSIFICATION	was a goto in original ruby lexer
WITHOUT_CLASSIFICATION	16!
WITHOUT_CLASSIFICATION	white spaces
WITHOUT_CLASSIFICATION	found end marker for this heredoc
WITHOUT_CLASSIFICATION	set p
WITHOUT_CLASSIFICATION	lexpop
WITHOUT_CLASSIFICATION	push 1
WITHOUT_CLASSIFICATION	marker delimiting heredoc boundary
WITHOUT_CLASSIFICATION	stream based
WITHOUT_CLASSIFICATION	rb yield values 2 ... equivalent
WITHOUT_CLASSIFICATION	remain where we are
WITHOUT_CLASSIFICATION	satisfy java.util.set interface for java integration
WITHOUT_CLASSIFICATION	give a name to a value. enebo this should be used more.
WITHOUT_CLASSIFICATION	end of script.
WITHOUT_CLASSIFICATION	stream of data that yylex examines.
WITHOUT_CLASSIFICATION	count of nested parentheses 1.9 only
WITHOUT_CLASSIFICATION	are we lexing ruby 1.8 or 1.9 syntax
WITHOUT_CLASSIFICATION	when the heredoc identifier specifies eof that indents before ident. are ok the .
WITHOUT_CLASSIFICATION	a scoped location of this variable high 16 bits is how many scopes down and low 16 bits is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	1.9 only
WITHOUT_CLASSIFICATION	debugging help
WITHOUT_CLASSIFICATION	short hand e.g. . ! ... versus q .
WITHOUT_CLASSIFICATION	return in a class body raises error
WITHOUT_CLASSIFICATION	no mb ismbchar term
WITHOUT_CLASSIFICATION	last match
WITHOUT_CLASSIFICATION	last read line string
WITHOUT_CLASSIFICATION	methods foo! and foo? are possible but if followed by it is relop
WITHOUT_CLASSIFICATION	eof enebo after default?
WITHOUT_CLASSIFICATION	line 604
WITHOUT_CLASSIFICATION	just a plain bang
WITHOUT_CLASSIFICATION	in case last next was the newline.
WITHOUT_CLASSIFICATION	our readback pushback buffer.
WITHOUT_CLASSIFICATION	documentation nodes
WITHOUT_CLASSIFICATION	already loaded files
WITHOUT_CLASSIFICATION	output field separator
WITHOUT_CLASSIFICATION	. last read line number
WITHOUT_CLASSIFICATION	ignorecase
WITHOUT_CLASSIFICATION	reading filename
WITHOUT_CLASSIFICATION	string before last match
WITHOUT_CLASSIFICATION	line 1448
WITHOUT_CLASSIFICATION	see if it is a reserved word.
WITHOUT_CLASSIFICATION	block expr
WITHOUT_CLASSIFICATION	arg and receiver already present on the stack
WITHOUT_CLASSIFICATION	backslash
WITHOUT_CLASSIFICATION	return last value from execution
WITHOUT_CLASSIFICATION	where we get our newest char s
WITHOUT_CLASSIFICATION	block primary
WITHOUT_CLASSIFICATION	enum lex state
WITHOUT_CLASSIFICATION	we don t append since java number parser gets confused
WITHOUT_CLASSIFICATION	hash
WITHOUT_CLASSIFICATION	fixme peek u utf8 stuff for 1.9
WITHOUT_CLASSIFICATION	v
WITHOUT_CLASSIFICATION	hexadecimal
WITHOUT_CLASSIFICATION	octal
WITHOUT_CLASSIFICATION	decimal
WITHOUT_CLASSIFICATION	binary
WITHOUT_CLASSIFICATION	form feed
WITHOUT_CLASSIFICATION	if we have a specific arity helper to construct an array for us use that
WITHOUT_CLASSIFICATION	horizontal tab
WITHOUT_CLASSIFICATION	where we started this marker match
WITHOUT_CLASSIFICATION	space
WITHOUT_CLASSIFICATION	vertical tab
WITHOUT_CLASSIFICATION	hex constant
WITHOUT_CLASSIFICATION	alarm bell
WITHOUT_CLASSIFICATION	fixme old mac format strings?
WITHOUT_CLASSIFICATION	we use offset here to keep track of extra newlines for windows
WITHOUT_CLASSIFICATION	escape
WITHOUT_CLASSIFICATION	if r n then just pass along n windows . if r n then pass along n mac .
WITHOUT_CLASSIFICATION	line 587
WITHOUT_CLASSIFICATION	do nothing return dummy version below
WITHOUT_CLASSIFICATION	keep value of twoago around so we can restore after we unread
WITHOUT_CLASSIFICATION	pop
WITHOUT_CLASSIFICATION	character read before previous read
WITHOUT_CLASSIFICATION	index of last character in pushback buffer
WITHOUT_CLASSIFICATION	newline
WITHOUT_CLASSIFICATION	bigdecimallibrary
WITHOUT_CLASSIFICATION	todo fd cloexec is mysterious and we are not sure how constantine should include this. we did it here for now
WITHOUT_CLASSIFICATION	netprotocolbufferediolibrary
WITHOUT_CLASSIFICATION	line 407
WITHOUT_CLASSIFICATION	that s what jdk5 produces on windows vista
WITHOUT_CLASSIFICATION	our shell scripts pass in non canonicalized paths but even if we didn t anyone who did would become unhappy because ruby apps expect no relative operators in the pathname rubygems for example .
WITHOUT_CLASSIFICATION	digestlibrary
WITHOUT_CLASSIFICATION	this set is only for darwin
WITHOUT_CLASSIFICATION	single node in list
WITHOUT_CLASSIFICATION	all errors just info do not prevent unloading ikvm does not support jmx and throws an error
WITHOUT_CLASSIFICATION	all errors just info do not prevent loading ikvm does not support jmx and throws an error
WITHOUT_CLASSIFICATION	line 575
WITHOUT_CLASSIFICATION	line 372
WITHOUT_CLASSIFICATION	discarding a token does not change stack
WITHOUT_CLASSIFICATION	dynamically increase
WITHOUT_CLASSIFICATION	line 358
WITHOUT_CLASSIFICATION	line 351
WITHOUT_CLASSIFICATION	line 1464
WITHOUT_CLASSIFICATION	line 341
WITHOUT_CLASSIFICATION	line 274
WITHOUT_CLASSIFICATION	line 271
WITHOUT_CLASSIFICATION	line 332
WITHOUT_CLASSIFICATION	line 311
WITHOUT_CLASSIFICATION	line 569
WITHOUT_CLASSIFICATION	line 417
WITHOUT_CLASSIFICATION	line 479
WITHOUT_CLASSIFICATION	chain to the next segment of this giant method
WITHOUT_CLASSIFICATION	line 434
WITHOUT_CLASSIFICATION	line 467
WITHOUT_CLASSIFICATION	line 446
WITHOUT_CLASSIFICATION	line 457
WITHOUT_CLASSIFICATION	line 484
WITHOUT_CLASSIFICATION	line 504
WITHOUT_CLASSIFICATION	line 510
WITHOUT_CLASSIFICATION	line 498
WITHOUT_CLASSIFICATION	line 546
WITHOUT_CLASSIFICATION	line 525
WITHOUT_CLASSIFICATION	line 559
WITHOUT_CLASSIFICATION	line 537
WITHOUT_CLASSIFICATION	line 638
WITHOUT_CLASSIFICATION	line 610
WITHOUT_CLASSIFICATION	line 1623
WITHOUT_CLASSIFICATION	line 634
WITHOUT_CLASSIFICATION	line 616
WITHOUT_CLASSIFICATION	line 907
WITHOUT_CLASSIFICATION	line 769
WITHOUT_CLASSIFICATION	line 655
WITHOUT_CLASSIFICATION	line 667
WITHOUT_CLASSIFICATION	line 672
WITHOUT_CLASSIFICATION	line 760
WITHOUT_CLASSIFICATION	line 751
WITHOUT_CLASSIFICATION	line 701
WITHOUT_CLASSIFICATION	line 732
WITHOUT_CLASSIFICATION	line 726
WITHOUT_CLASSIFICATION	line 717
WITHOUT_CLASSIFICATION	line 775
WITHOUT_CLASSIFICATION	line 821
WITHOUT_CLASSIFICATION	line 809
WITHOUT_CLASSIFICATION	line 803
WITHOUT_CLASSIFICATION	line 791
WITHOUT_CLASSIFICATION	line 833
WITHOUT_CLASSIFICATION	line 830
WITHOUT_CLASSIFICATION	line 842
WITHOUT_CLASSIFICATION	line 883
WITHOUT_CLASSIFICATION	line 861
WITHOUT_CLASSIFICATION	line 876
WITHOUT_CLASSIFICATION	line 972
WITHOUT_CLASSIFICATION	line 923
WITHOUT_CLASSIFICATION	line 920
WITHOUT_CLASSIFICATION	line 932
WITHOUT_CLASSIFICATION	line 956
WITHOUT_CLASSIFICATION	line 944
WITHOUT_CLASSIFICATION	line 1001
WITHOUT_CLASSIFICATION	line 980
WITHOUT_CLASSIFICATION	line 1048
WITHOUT_CLASSIFICATION	line 1029
WITHOUT_CLASSIFICATION	line 1073
WITHOUT_CLASSIFICATION	line 1082
WITHOUT_CLASSIFICATION	line 1130
WITHOUT_CLASSIFICATION	line 1113
WITHOUT_CLASSIFICATION	line 1103
WITHOUT_CLASSIFICATION	line 1164
WITHOUT_CLASSIFICATION	line 1178
WITHOUT_CLASSIFICATION	line 1335
WITHOUT_CLASSIFICATION	line 1204
WITHOUT_CLASSIFICATION	line 1189
WITHOUT_CLASSIFICATION	line 1243
WITHOUT_CLASSIFICATION	line 1234
WITHOUT_CLASSIFICATION	line 1214
WITHOUT_CLASSIFICATION	line 1296
WITHOUT_CLASSIFICATION	line 1283
WITHOUT_CLASSIFICATION	line 1320
WITHOUT_CLASSIFICATION	line 1302
WITHOUT_CLASSIFICATION	line 1453
WITHOUT_CLASSIFICATION	temp locals must start after last real local
WITHOUT_CLASSIFICATION	line 1431
WITHOUT_CLASSIFICATION	line 1513
WITHOUT_CLASSIFICATION	line 1655
WITHOUT_CLASSIFICATION	should positions added extra ide friendly information and leave in all newline nodes
WITHOUT_CLASSIFICATION	line 1641
WITHOUT_CLASSIFICATION	line 1672
WITHOUT_CLASSIFICATION	line 1677
WITHOUT_CLASSIFICATION	line 1708
WITHOUT_CLASSIFICATION	line 1769
WITHOUT_CLASSIFICATION	fill in all vars with nil so compiler is happy about future accesses
WITHOUT_CLASSIFICATION	popen caller wants to be able to write provide subprocess out directly
WITHOUT_CLASSIFICATION	try to mine out a ruby frame using our list of interpreter entry point markers
WITHOUT_CLASSIFICATION	jruby 3568 inherit threadgroup or use default
WITHOUT_CLASSIFICATION	xxx 0
WITHOUT_CLASSIFICATION	force for args
WITHOUT_CLASSIFICATION	last expression should not be void
WITHOUT_CLASSIFICATION	compstmt position includes both parens around it
WITHOUT_CLASSIFICATION	we parse evals more often in source so assume an eval parse.
WITHOUT_CLASSIFICATION	20!
WITHOUT_CLASSIFICATION	we only close out if it s the slave stream to avoid closing a directly mapped stream from parent process
WITHOUT_CLASSIFICATION	line 1827 defaultrubyparser.y
WITHOUT_CLASSIFICATION	line 529
WITHOUT_CLASSIFICATION	finally post args
WITHOUT_CLASSIFICATION	line 7713
WITHOUT_CLASSIFICATION	sequential
WITHOUT_CLASSIFICATION	xxx
WITHOUT_CLASSIFICATION	is this inline source aka e ...source...
WITHOUT_CLASSIFICATION	line 368
WITHOUT_CLASSIFICATION	declare locals for java debugging purposes
WITHOUT_CLASSIFICATION	local scopes are argument scopes by default
WITHOUT_CLASSIFICATION	?u boolean true if file1 has the setuid bit set
WITHOUT_CLASSIFICATION	what linenumber will the source think it starts from?
WITHOUT_CLASSIFICATION	load all arguments straight through
WITHOUT_CLASSIFICATION	odd...but it is odd in ruby too.
WITHOUT_CLASSIFICATION	include pipes on multiple arg type
WITHOUT_CLASSIFICATION	enebo 1.9 has curr nodes for local block variables. we don t. i believe we follow proper logic
WITHOUT_CLASSIFICATION	case classnode case colon2node . handleuselesswarn node return
WITHOUT_CLASSIFICATION	parser states
WITHOUT_CLASSIFICATION	not an expression don t want result pop it
WITHOUT_CLASSIFICATION	end marker offset 1 means none present
WITHOUT_CLASSIFICATION	will parser parse duby grammar extensions
WITHOUT_CLASSIFICATION	should we display extra debug information while parsing?
WITHOUT_CLASSIFICATION	assumption tail is never a list node
WITHOUT_CLASSIFICATION	is the parser currently within a method definition
WITHOUT_CLASSIFICATION	instance variable
WITHOUT_CLASSIFICATION	constant
WITHOUT_CLASSIFICATION	reduces overhead in interp by not set position every single line we encounter.
WITHOUT_CLASSIFICATION	mri block append
WITHOUT_CLASSIFICATION	fixme temporarily disabling because this fires way too much running rails tests. jruby 518
WITHOUT_CLASSIFICATION	node
WITHOUT_CLASSIFICATION	case constnode . handleuselesswarn node a constant return
WITHOUT_CLASSIFICATION	do not add an empty string node
WITHOUT_CLASSIFICATION	localvar
WITHOUT_CLASSIFICATION	mri range op
WITHOUT_CLASSIFICATION	fixme dstr evstr str warning string literal in condition
WITHOUT_CLASSIFICATION	case selfnode . handleuselesswarn node self return
WITHOUT_CLASSIFICATION	tail must be evstrnode at this point
WITHOUT_CLASSIFICATION	foo
WITHOUT_CLASSIFICATION	?d boolean true if file1 exists and is a directory
WITHOUT_CLASSIFICATION	yylhs 542
WITHOUT_CLASSIFICATION	yydgoto 152
WITHOUT_CLASSIFICATION	yydefred 945
WITHOUT_CLASSIFICATION	then optional args
WITHOUT_CLASSIFICATION	boolean
WITHOUT_CLASSIFICATION	else default reduce yyn
WITHOUT_CLASSIFICATION	line 1231
WITHOUT_CLASSIFICATION	line 678
WITHOUT_CLASSIFICATION	yygindex 152
WITHOUT_CLASSIFICATION	yyrindex 945
WITHOUT_CLASSIFICATION	grab nil for local variables
WITHOUT_CLASSIFICATION	line 497
WITHOUT_CLASSIFICATION	line 321
WITHOUT_CLASSIFICATION	line 283
WITHOUT_CLASSIFICATION	leave stack alone
WITHOUT_CLASSIFICATION	shift to yyn
WITHOUT_CLASSIFICATION	reduce yyn
WITHOUT_CLASSIFICATION	arities
WITHOUT_CLASSIFICATION	line 382
WITHOUT_CLASSIFICATION	line 426
WITHOUT_CLASSIFICATION	spurious wakeup loop
WITHOUT_CLASSIFICATION	line 488
WITHOUT_CLASSIFICATION	line 392
WITHOUT_CLASSIFICATION	line 342
WITHOUT_CLASSIFICATION	line 432
WITHOUT_CLASSIFICATION	line 469
WITHOUT_CLASSIFICATION	line 448
WITHOUT_CLASSIFICATION	line 657
WITHOUT_CLASSIFICATION	line 540
WITHOUT_CLASSIFICATION	line 521
WITHOUT_CLASSIFICATION	line 552
WITHOUT_CLASSIFICATION	otherwise no items left available use the code for default
WITHOUT_CLASSIFICATION	yysindex 945
WITHOUT_CLASSIFICATION	if there s args left and we want them assign to rest arg
WITHOUT_CLASSIFICATION	line 534
WITHOUT_CLASSIFICATION	line 543
WITHOUT_CLASSIFICATION	line 788
WITHOUT_CLASSIFICATION	line 772
WITHOUT_CLASSIFICATION	line 648
WITHOUT_CLASSIFICATION	next iterate over all optional args until no more arguments
WITHOUT_CLASSIFICATION	line 579
WITHOUT_CLASSIFICATION	line 571
WITHOUT_CLASSIFICATION	eval value for assignment
WITHOUT_CLASSIFICATION	adapter tc recv args 0 1 block 0 1
WITHOUT_CLASSIFICATION	yydefred 889
WITHOUT_CLASSIFICATION	line 708
WITHOUT_CLASSIFICATION	line 688
WITHOUT_CLASSIFICATION	line 863
WITHOUT_CLASSIFICATION	line 808
WITHOUT_CLASSIFICATION	now logic for each optional value
WITHOUT_CLASSIFICATION	line 737
WITHOUT_CLASSIFICATION	line 893
WITHOUT_CLASSIFICATION	line 845
WITHOUT_CLASSIFICATION	line 960
WITHOUT_CLASSIFICATION	line 851
WITHOUT_CLASSIFICATION	line 890
WITHOUT_CLASSIFICATION	line 1035
WITHOUT_CLASSIFICATION	get call site and thread context
WITHOUT_CLASSIFICATION	line 869
WITHOUT_CLASSIFICATION	line 928
WITHOUT_CLASSIFICATION	evaluate and save receiver and args
WITHOUT_CLASSIFICATION	line 1013
WITHOUT_CLASSIFICATION	line 916
WITHOUT_CLASSIFICATION	line 912
WITHOUT_CLASSIFICATION	prepare labels for opt logic
WITHOUT_CLASSIFICATION	line 965
WITHOUT_CLASSIFICATION	line 951
WITHOUT_CLASSIFICATION	line 983
WITHOUT_CLASSIFICATION	line 1182
WITHOUT_CLASSIFICATION	line 1207
WITHOUT_CLASSIFICATION	yylen 542
WITHOUT_CLASSIFICATION	do nothing arity check is done before call
WITHOUT_CLASSIFICATION	line 1075
WITHOUT_CLASSIFICATION	line 1057
WITHOUT_CLASSIFICATION	line 1140
WITHOUT_CLASSIFICATION	line 1105
WITHOUT_CLASSIFICATION	line 1114
WITHOUT_CLASSIFICATION	line 1247
WITHOUT_CLASSIFICATION	line 1173
WITHOUT_CLASSIFICATION	line 1084
WITHOUT_CLASSIFICATION	line 1144
WITHOUT_CLASSIFICATION	line 1118
WITHOUT_CLASSIFICATION	line 1702
WITHOUT_CLASSIFICATION	line 1387
WITHOUT_CLASSIFICATION	line 1427
WITHOUT_CLASSIFICATION	line 1470
WITHOUT_CLASSIFICATION	line 1847
WITHOUT_CLASSIFICATION	line 1305
WITHOUT_CLASSIFICATION	just confirm minimum args provided
WITHOUT_CLASSIFICATION	line 1295
WITHOUT_CLASSIFICATION	line 1273
WITHOUT_CLASSIFICATION	line 1258
WITHOUT_CLASSIFICATION	line 1289
WITHOUT_CLASSIFICATION	line 1337
WITHOUT_CLASSIFICATION	line 1598
WITHOUT_CLASSIFICATION	line 1323
WITHOUT_CLASSIFICATION	expression based tests bodies
WITHOUT_CLASSIFICATION	normal case create a new label
WITHOUT_CLASSIFICATION	line 1401
WITHOUT_CLASSIFICATION	line 1354
WITHOUT_CLASSIFICATION	line 1342
WITHOUT_CLASSIFICATION	checkcast the value if match fast path otherwise proceed to slow logic
WITHOUT_CLASSIFICATION	line 1352
WITHOUT_CLASSIFICATION	line 1366
WITHOUT_CLASSIFICATION	todo assuming case is a fixnum
WITHOUT_CLASSIFICATION	line 1822
WITHOUT_CLASSIFICATION	receiver first so we know which call site to use
WITHOUT_CLASSIFICATION	line 1663
WITHOUT_CLASSIFICATION	line 1442
WITHOUT_CLASSIFICATION	line 1458
WITHOUT_CLASSIFICATION	we have an input case prepare branching logic
WITHOUT_CLASSIFICATION	line 1749
WITHOUT_CLASSIFICATION	line 1557
WITHOUT_CLASSIFICATION	line 1532
WITHOUT_CLASSIFICATION	line 1542
WITHOUT_CLASSIFICATION	line 1591
WITHOUT_CLASSIFICATION	line 1725
WITHOUT_CLASSIFICATION	line 1716
WITHOUT_CLASSIFICATION	line 1622
WITHOUT_CLASSIFICATION	line 1651
WITHOUT_CLASSIFICATION	index for the item
WITHOUT_CLASSIFICATION	line 1639
WITHOUT_CLASSIFICATION	line 1636
WITHOUT_CLASSIFICATION	rb str hash cmp
WITHOUT_CLASSIFICATION	line 1719
WITHOUT_CLASSIFICATION	line 1886
WITHOUT_CLASSIFICATION	line 1831
WITHOUT_CLASSIFICATION	line 1785
WITHOUT_CLASSIFICATION	line 1722
WITHOUT_CLASSIFICATION	line 2010
WITHOUT_CLASSIFICATION	line 1761
WITHOUT_CLASSIFICATION	line 1738
WITHOUT_CLASSIFICATION	line 1756
WITHOUT_CLASSIFICATION	line 1825
WITHOUT_CLASSIFICATION	line 1800
WITHOUT_CLASSIFICATION	line 1815
WITHOUT_CLASSIFICATION	line 1791
WITHOUT_CLASSIFICATION	8 null ? nilimplicitnode.nil 8
WITHOUT_CLASSIFICATION	zero length array
WITHOUT_CLASSIFICATION	line 1507
WITHOUT_CLASSIFICATION	line 1629
WITHOUT_CLASSIFICATION	.setposfrom 2
WITHOUT_CLASSIFICATION	5 null ? nilimplicitnode.nil 5
WITHOUT_CLASSIFICATION	line 1854
WITHOUT_CLASSIFICATION	build ir for args
WITHOUT_CLASSIFICATION	otherwise there s a receiver so we pass that in directly for the sclass logic
WITHOUT_CLASSIFICATION	evstrnode some expression
WITHOUT_CLASSIFICATION	strnode some text
WITHOUT_CLASSIFICATION	dstrnode some text some expression
WITHOUT_CLASSIFICATION	line 2006
WITHOUT_CLASSIFICATION	build each when
WITHOUT_CLASSIFICATION	line 1607
WITHOUT_CLASSIFICATION	line 1657
WITHOUT_CLASSIFICATION	line 1734
WITHOUT_CLASSIFICATION	line 1911
WITHOUT_CLASSIFICATION	line 1902
WITHOUT_CLASSIFICATION	line 1968
WITHOUT_CLASSIFICATION	line 1960
WITHOUT_CLASSIFICATION	line 1948
WITHOUT_CLASSIFICATION	line 1938
WITHOUT_CLASSIFICATION	string fragment we optimistically take one off in
WITHOUT_CLASSIFICATION	original exception is on stack
WITHOUT_CLASSIFICATION	prepare to call class definition method
WITHOUT_CLASSIFICATION	parsersupport.literal concat . check token length
WITHOUT_CLASSIFICATION	finally with exception
WITHOUT_CLASSIFICATION	yyparse lexer new jay.yydebug.yyanim jruby 9
WITHOUT_CLASSIFICATION	line 2019 ruby19parser.y
WITHOUT_CLASSIFICATION	unframed invokers have no ruby frames so pull from class name but use current frame as file and line
WITHOUT_CLASSIFICATION	ignore no debugger present
WITHOUT_CLASSIFICATION	enebo arg surrounded by in defined set unset
WITHOUT_CLASSIFICATION	list of active dynamic scopes. each of these may have captured other dynamic scopes to implement closures.
WITHOUT_CLASSIFICATION	enebo removed !compile for eval which probably is to reduce warnings
WITHOUT_CLASSIFICATION	was null
WITHOUT_CLASSIFICATION	raiseexception is on stack get rubyexception out
WITHOUT_CLASSIFICATION	line 8143
WITHOUT_CLASSIFICATION	index of variable that represents a rest arg
WITHOUT_CLASSIFICATION	next cref down the lexical structure
WITHOUT_CLASSIFICATION	number of variables in this scope representing optional arguments
WITHOUT_CLASSIFICATION	live reference to module
WITHOUT_CLASSIFICATION	no bit math to store level since we know level is zero for this case
WITHOUT_CLASSIFICATION	our name holder offsets are assigned as variables are added
WITHOUT_CLASSIFICATION	number of variables in this scope representing required arguments
WITHOUT_CLASSIFICATION	note only used by compiler until it can use getconstant again or use some other refactoring
WITHOUT_CLASSIFICATION	require in all libraries specified on command line
WITHOUT_CLASSIFICATION	private unsynchronizedstack framestack
WITHOUT_CLASSIFICATION	returns slot of variable
WITHOUT_CLASSIFICATION	we override that the logic which uses this
WITHOUT_CLASSIFICATION	try and unload the autoload specified from internedname
WITHOUT_CLASSIFICATION	long name option
WITHOUT_CLASSIFICATION	this while loop is for restarting the block call in case a redo fires.
WITHOUT_CLASSIFICATION	assert internedname internedname.intern internedname is not interned
WITHOUT_CLASSIFICATION	private unsynchronizedstack parentstack
WITHOUT_CLASSIFICATION	initialize builtin libraries
WITHOUT_CLASSIFICATION	if we have multiple asgn with just args need a special type for that
WITHOUT_CLASSIFICATION	new instance to invoke run against
WITHOUT_CLASSIFICATION	line 2000
WITHOUT_CLASSIFICATION	mark as captured if from containing scope
WITHOUT_CLASSIFICATION	is this thread currently with in a function trace?
WITHOUT_CLASSIFICATION	is this thread currently doing an defined? defined should set things like !
WITHOUT_CLASSIFICATION	a next is like a local return from the block ending this call or yield.
WITHOUT_CLASSIFICATION	line 1972
WITHOUT_CLASSIFICATION	line 1942
WITHOUT_CLASSIFICATION	line 1963
WITHOUT_CLASSIFICATION	framed invokers will have ruby frames associated with them
WITHOUT_CLASSIFICATION	if it s not a rescue or ensure there s a frame associated so decrement
WITHOUT_CLASSIFICATION	toplevel self and a few others want a top level scope. we create this one right away and then pass it into top level parse so it ends up being the top level.
WITHOUT_CLASSIFICATION	file where current executing unit is being evaluated
WITHOUT_CLASSIFICATION	line where current executing unit is being evaluated
WITHOUT_CLASSIFICATION	catch management
WITHOUT_CLASSIFICATION	look for mangling markers for compiled ruby in method name
WITHOUT_CLASSIFICATION	if root of method is rescue build as a light rescue
WITHOUT_CLASSIFICATION	frame management
WITHOUT_CLASSIFICATION	self
WITHOUT_CLASSIFICATION	line 1918
WITHOUT_CLASSIFICATION	assert level 0
WITHOUT_CLASSIFICATION	look for file method name for compiled roots
WITHOUT_CLASSIFICATION	look for mangling markers for bound unframed methods in class name
WITHOUT_CLASSIFICATION	line 1905
WITHOUT_CLASSIFICATION	all entries following removed node can stay in list but all preceding ones need to be cloned.
WITHOUT_CLASSIFICATION	do nothing allow loop to redo
WITHOUT_CLASSIFICATION	required and optional only
WITHOUT_CLASSIFICATION	switch
WITHOUT_CLASSIFICATION	line 1898
WITHOUT_CLASSIFICATION	line 1872
WITHOUT_CLASSIFICATION	arg0
WITHOUT_CLASSIFICATION	line 1869
WITHOUT_CLASSIFICATION	frame matches one of our markers for interpreted calls
WITHOUT_CLASSIFICATION	line 1776
WITHOUT_CLASSIFICATION	args.getmaxargumentscount ! 1
WITHOUT_CLASSIFICATION	popen callers wants to be able to read provide subprocess in directly
WITHOUT_CLASSIFICATION	try to load from classpath without prefix. a b.rb will not load as . a b.rb in a jar file.
WITHOUT_CLASSIFICATION	line 1828
WITHOUT_CLASSIFICATION	just push the same empty scope since we won t use one
WITHOUT_CLASSIFICATION	frame is extraneous runtime information skip it unless debug
WITHOUT_CLASSIFICATION	no argument blocks
WITHOUT_CLASSIFICATION	new scope for this invocation of the block based on parent scope
WITHOUT_CLASSIFICATION	assert false can this happen?
WITHOUT_CLASSIFICATION	binary typed calls
WITHOUT_CLASSIFICATION	highest reserved id
WITHOUT_CLASSIFICATION	set self to the class
WITHOUT_CLASSIFICATION	this should only be called by 1.8 1.9 subclasses this to handle unusedblock .
WITHOUT_CLASSIFICATION	not sure if this is actually possible but better safe than sorry
WITHOUT_CLASSIFICATION	line 391
WITHOUT_CLASSIFICATION	with block literal iter
WITHOUT_CLASSIFICATION	id must always be even
WITHOUT_CLASSIFICATION	static scope
WITHOUT_CLASSIFICATION	no block
WITHOUT_CLASSIFICATION	with block pass
WITHOUT_CLASSIFICATION	yydgoto 136
WITHOUT_CLASSIFICATION	try count specific args to determine required
WITHOUT_CLASSIFICATION	static scoping information for this scope
WITHOUT_CLASSIFICATION	instance variable methods
WITHOUT_CLASSIFICATION	fast and safe respond to? call site logic
WITHOUT_CLASSIFICATION	ensure zero is devoted to no method name
WITHOUT_CLASSIFICATION	no binding scope so we should create one
WITHOUT_CLASSIFICATION	captured dynamic scopes
WITHOUT_CLASSIFICATION	lastline
WITHOUT_CLASSIFICATION	helper function to give a good view of current dynamic scope with captured scopes
WITHOUT_CLASSIFICATION	silently ignore
WITHOUT_CLASSIFICATION	initialize the static settings to determine which factory to use
WITHOUT_CLASSIFICATION	updating position for same line skip
WITHOUT_CLASSIFICATION	used by compiler
WITHOUT_CLASSIFICATION	line 1788
WITHOUT_CLASSIFICATION	backref for 1 etc
WITHOUT_CLASSIFICATION	we need to guarantee that any existing reads of old map can proceed. so we cannot yet null out each bin.
WITHOUT_CLASSIFICATION	note in ruby 1.9 all of this logic can go away since they will require explicit bindings for evals.
WITHOUT_CLASSIFICATION	some helper functions
WITHOUT_CLASSIFICATION	single node on list
WITHOUT_CLASSIFICATION	clone all remaining nodes
WITHOUT_CLASSIFICATION	reuse trailing consecutive sequence at same slot
WITHOUT_CLASSIFICATION	populate up to shorter of calling arguments or local parameters in the block
WITHOUT_CLASSIFICATION	we only define one special dynamic scope per logical binding. so all bindings for the same scope should share the same dynamic scope. this allows multiple evals with different different bindings in the same scope to see the same stuff.
WITHOUT_CLASSIFICATION	line 1797
WITHOUT_CLASSIFICATION	line 1809
WITHOUT_CLASSIFICATION	no extra args for rest
WITHOUT_CLASSIFICATION	line 1742
WITHOUT_CLASSIFICATION	class bodies prepare their own dynamic scope so let it do that
WITHOUT_CLASSIFICATION	line 1758
WITHOUT_CLASSIFICATION	conversion
WITHOUT_CLASSIFICATION	nil pad since we provided less values than block parms
WITHOUT_CLASSIFICATION	here starts the logic for the class definition
WITHOUT_CLASSIFICATION	. this is the proper behavior for all non expanded assigners..
WITHOUT_CLASSIFICATION	line 1767
WITHOUT_CLASSIFICATION	. this is the proper behavior for all non expanded assigners which have a pre 0. the rest. override this..
WITHOUT_CLASSIFICATION	extra args for rest
WITHOUT_CLASSIFICATION	if undefined branch to method missing
WITHOUT_CLASSIFICATION	caller
WITHOUT_CLASSIFICATION	call is ok punch it!
WITHOUT_CLASSIFICATION	fastinvocationcallback
WITHOUT_CLASSIFICATION	retrieve method module name
WITHOUT_CLASSIFICATION	class body
WITHOUT_CLASSIFICATION	invoke callmethodmissing
WITHOUT_CLASSIFICATION	method object already present push various args tc self klazz name
WITHOUT_CLASSIFICATION	prefill ?
WITHOUT_CLASSIFICATION	if it s method missing just invoke it
WITHOUT_CLASSIFICATION	enebo perhaps slow but simple for now
WITHOUT_CLASSIFICATION	load arity for check
WITHOUT_CLASSIFICATION	calltype block
WITHOUT_CLASSIFICATION	invocationcallbackfactory
WITHOUT_CLASSIFICATION	if no exception raised jump to end to leave result on stack for return
WITHOUT_CLASSIFICATION	load arity for error
WITHOUT_CLASSIFICATION	if reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	irubyobject cacheentry threadcontext irubyobject irubyobject string
WITHOUT_CLASSIFICATION	from dup setup
WITHOUT_CLASSIFICATION	dumpinginvocationcallbackfactory
WITHOUT_CLASSIFICATION	if already inspecting there is no need to register unregister again.
WITHOUT_CLASSIFICATION	rb ary new4
WITHOUT_CLASSIFICATION	d
WITHOUT_CLASSIFICATION	invocationcallback
WITHOUT_CLASSIFICATION	only fill if there actually will remain trailing storage
WITHOUT_CLASSIFICATION	arity ok continue
WITHOUT_CLASSIFICATION	for fast lookup org.joni.encoding.encoding org.jruby.rubyencoding
WITHOUT_CLASSIFICATION	irubyobject rubyclass cacheentry threadcontext irubyobject irubyobject string
WITHOUT_CLASSIFICATION	load the encoding
WITHOUT_CLASSIFICATION	irubyobject dynamicmethod rubyclass cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	line 1746
WITHOUT_CLASSIFICATION	throw
WITHOUT_CLASSIFICATION	irubyobject dynamicmethod rubyclass cacheentry threadcontext irubyobject irubyobject string irubyobject
WITHOUT_CLASSIFICATION	irubyobject rubyclass cacheentry threadcontext irubyobject irubyobject string irubyobject
WITHOUT_CLASSIFICATION	line 1731
WITHOUT_CLASSIFICATION	line 1678
WITHOUT_CLASSIFICATION	line 1711
WITHOUT_CLASSIFICATION	line 1647
WITHOUT_CLASSIFICATION	line 1660
WITHOUT_CLASSIFICATION	line 1818
WITHOUT_CLASSIFICATION	receiver
WITHOUT_CLASSIFICATION	line 1610
WITHOUT_CLASSIFICATION	line 1625
WITHOUT_CLASSIFICATION	irubyobject rubyclass cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	return a meta object corresponding to the class
WITHOUT_CLASSIFICATION	make java class files in the jar reachable from ruby
WITHOUT_CLASSIFICATION	line 1705
WITHOUT_CLASSIFICATION	breakjump cacheentry threadcontext irubyobject irubyobject
WITHOUT_CLASSIFICATION	if we re running in 1.9 compat mode add ruby 1.9 libs to path before 1.8 libs
WITHOUT_CLASSIFICATION	irubyobject cacheentry threadcontext irubyobject irubyobject string args
WITHOUT_CLASSIFICATION	line 1615
WITHOUT_CLASSIFICATION	threadcontext
WITHOUT_CLASSIFICATION	breakjump threadcontext
WITHOUT_CLASSIFICATION	source extensions
WITHOUT_CLASSIFICATION	add all startup load paths to the list first
WITHOUT_CLASSIFICATION	line 1445
WITHOUT_CLASSIFICATION	empty paths do not need to be added
WITHOUT_CLASSIFICATION	signed short big endian
WITHOUT_CLASSIFICATION	add rubylib paths
WITHOUT_CLASSIFICATION	add 1.8 libs
WITHOUT_CLASSIFICATION	wrap in try catch for security exceptions in an applet
WITHOUT_CLASSIFICATION	if it s a compiled jruby script instantiate and run it
WITHOUT_CLASSIFICATION	if a source extension is specified try all source extensions
WITHOUT_CLASSIFICATION	line 1573
WITHOUT_CLASSIFICATION	create package name by splitting on and joining all but the last elements with a . and downcasing them.
WITHOUT_CLASSIFICATION	if an extension is specified try more targetted searches
WITHOUT_CLASSIFICATION	no library or extension found try to load directly as a class
WITHOUT_CLASSIFICATION	library has already been loaded in some form bail out
WITHOUT_CLASSIFICATION	if there is a jar file with the required name we add this to the class path.
WITHOUT_CLASSIFICATION	quietly try to load the class
WITHOUT_CLASSIFICATION	this code exploits the fact that all .jar files will be found for the jarredscript feature. this is where the basic extension mechanism gets fixed
WITHOUT_CLASSIFICATION	trim extension to try other options
WITHOUT_CLASSIFICATION	line 1538
WITHOUT_CLASSIFICATION	it s really expensive to check that the class actually exists in the jar so we don t do that now.
WITHOUT_CLASSIFICATION	value
WITHOUT_CLASSIFICATION	try all extensions
WITHOUT_CLASSIFICATION	unknown extension fall back to search with extensions
WITHOUT_CLASSIFICATION	extension extensions
WITHOUT_CLASSIFICATION	end suffix iteration
WITHOUT_CLASSIFICATION	try only literal search
WITHOUT_CLASSIFICATION	if a jar or file url return load service resource directly without further searching
WITHOUT_CLASSIFICATION	unknown extension fall back to exact search
WITHOUT_CLASSIFICATION	should invoke seek on realio
WITHOUT_CLASSIFICATION	remove any relative prefix e.g. . foo bar becomes foo bar .
WITHOUT_CLASSIFICATION	hmm...
WITHOUT_CLASSIFICATION	allow mainexitexception to propagate out for exec and friends
WITHOUT_CLASSIFICATION	otherwise load the library we ve found
WITHOUT_CLASSIFICATION	if given path is absolute just try it as is with extensions and no load path
WITHOUT_CLASSIFICATION	if it s a . basename use cwd logic
WITHOUT_CLASSIFICATION	if name starts with a we re done classloader resources won t load with an initial
WITHOUT_CLASSIFICATION	check if it s true ending if so
WITHOUT_CLASSIFICATION	args
WITHOUT_CLASSIFICATION	if entry is an empty string skip it
WITHOUT_CLASSIFICATION	num2int is also implemented
WITHOUT_CLASSIFICATION	we check length 0 for load which does not use load path
WITHOUT_CLASSIFICATION	write i instance var signet if class is not a direct subclass of object
WITHOUT_CLASSIFICATION	handle security sensitive case
WITHOUT_CLASSIFICATION	prepend . if . is not already there since we re loading based on cwd
WITHOUT_CLASSIFICATION	it s an absolute path use it as is
WITHOUT_CLASSIFICATION	line 1489
WITHOUT_CLASSIFICATION	line 1436
WITHOUT_CLASSIFICATION	otherwise try to load from classpath note jar resources always uses
WITHOUT_CLASSIFICATION	line 1519
WITHOUT_CLASSIFICATION	make sure this is not a directory or unavailable in some way
WITHOUT_CLASSIFICATION	signed short native
WITHOUT_CLASSIFICATION	write s
WITHOUT_CLASSIFICATION	end loop
WITHOUT_CLASSIFICATION	flush afer whole dump is complete
WITHOUT_CLASSIFICATION	object has instance vars and isn t a class get a snapshot to be marshalled and output the ivar header here
WITHOUT_CLASSIFICATION	directories and unavailable resources are not able to open a stream.
WITHOUT_CLASSIFICATION	line 1433
WITHOUT_CLASSIFICATION	object is a custom class that extended one of the native types other than object
WITHOUT_CLASSIFICATION	only accept an open brace if there is a close
WITHOUT_CLASSIFICATION	need to initialize
WITHOUT_CLASSIFICATION	call the proc but not for symbols
WITHOUT_CLASSIFICATION	w unique
WITHOUT_CLASSIFICATION	all c marshalled objects descend from core classes which are all rubyobject
WITHOUT_CLASSIFICATION	any ivars since we don t have attached ivar now
WITHOUT_CLASSIFICATION	major minor
WITHOUT_CLASSIFICATION	line 1381
WITHOUT_CLASSIFICATION	sic
WITHOUT_CLASSIFICATION	if we re not the argument scope for zsuper try our parent
WITHOUT_CLASSIFICATION	xxx 0xffff0000 on be?
WITHOUT_CLASSIFICATION	unsigned short native
WITHOUT_CLASSIFICATION	line 1493
WITHOUT_CLASSIFICATION	int native long native
WITHOUT_CLASSIFICATION	rubysignal
WITHOUT_CLASSIFICATION	cld is also 20
WITHOUT_CLASSIFICATION	. process s example dir.glob jruby jython readme .
WITHOUT_CLASSIFICATION	all braces pushed..
WITHOUT_CLASSIFICATION	look for slash starting from start position until end .
WITHOUT_CLASSIFICATION	rest arg must be splatted
WITHOUT_CLASSIFICATION	copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	fields should really be an immutable map as it is never modified after construction
WITHOUT_CLASSIFICATION	traverse the instructions in this basic block in reverse order! mark as dead all instructions whose results are not used!
WITHOUT_CLASSIFICATION	foo are not getting set from somewhere...i want the following assert to be true though assert variablevalues offset ! null getting unassigned staticscope.getvariables offset
WITHOUT_CLASSIFICATION	sunsignalfacade
WITHOUT_CLASSIFICATION	load self object as irubyobject for recv param
WITHOUT_CLASSIFICATION	line 1456
WITHOUT_CLASSIFICATION	line 1502
WITHOUT_CLASSIFICATION	line 533
WITHOUT_CLASSIFICATION	modify the block with a new backref lastline grabbing scope
WITHOUT_CLASSIFICATION	iot is also 6
WITHOUT_CLASSIFICATION	line 530
WITHOUT_CLASSIFICATION	hashdef object a hash with a default
WITHOUT_CLASSIFICATION	assign remaining elements as an array for rest args or empty array
WITHOUT_CLASSIFICATION	skip inner braces
WITHOUT_CLASSIFICATION	new exception .printstacktrace
WITHOUT_CLASSIFICATION	failed try next recursion
WITHOUT_CLASSIFICATION	line 1782
WITHOUT_CLASSIFICATION	try to use posix for this first
WITHOUT_CLASSIFICATION	no or mismatched braces..move along..nothing to see here
WITHOUT_CLASSIFICATION	retuns null when not found to avoid unnecessary getruntime .getnil call
WITHOUT_CLASSIFICATION	line 1803
WITHOUT_CLASSIFICATION	returns the stored value without processing undefs autoloads
WITHOUT_CLASSIFICATION	otherwise fall back on the old way
WITHOUT_CLASSIFICATION	are we at
WITHOUT_CLASSIFICATION	lefttoken made us start as nest 1
WITHOUT_CLASSIFICATION	single precision little endian
WITHOUT_CLASSIFICATION	index of left most brace index of right most brace
WITHOUT_CLASSIFICATION	this is not an expression that computes anything
WITHOUT_CLASSIFICATION	ignore we re on the way out
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	not reached here
WITHOUT_CLASSIFICATION	line 1806
WITHOUT_CLASSIFICATION	b64 xtable for decoding base 64
WITHOUT_CLASSIFICATION	simplesampler
WITHOUT_CLASSIFICATION	ruby class methods
WITHOUT_CLASSIFICATION	pickaxe says must be followed by a name character but mri does not require this.
WITHOUT_CLASSIFICATION	complete according to posix.2
WITHOUT_CLASSIFICATION	get index of last read byte
WITHOUT_CLASSIFICATION	long little endian
WITHOUT_CLASSIFICATION	double precision big endian
WITHOUT_CLASSIFICATION	obtain b
WITHOUT_CLASSIFICATION	double precision little endian
WITHOUT_CLASSIFICATION	prepare to call def utility method to handle def logic
WITHOUT_CLASSIFICATION	single precision native
WITHOUT_CLASSIFICATION	single precision big endian
WITHOUT_CLASSIFICATION	arg1
WITHOUT_CLASSIFICATION	unsigned char
WITHOUT_CLASSIFICATION	signed char
WITHOUT_CLASSIFICATION	signed short little endian
WITHOUT_CLASSIFICATION	64 bit number native as fixnum
WITHOUT_CLASSIFICATION	possible checksum byte
WITHOUT_CLASSIFICATION	unsigned int native
WITHOUT_CLASSIFICATION	int native
WITHOUT_CLASSIFICATION	see if we have a converter for the job...
WITHOUT_CLASSIFICATION	? last status
WITHOUT_CLASSIFICATION	pid
WITHOUT_CLASSIFICATION	otherwise the unpack should be here...
WITHOUT_CLASSIFICATION	used only by the compiler interpreter will set the literal flag
WITHOUT_CLASSIFICATION	normal exit this should be faster than a test at each iterations for string with more than about 40 char
WITHOUT_CLASSIFICATION	ignore and try windows version
WITHOUT_CLASSIFICATION	1
WITHOUT_CLASSIFICATION	encode.limit
WITHOUT_CLASSIFICATION	3
WITHOUT_CLASSIFICATION	skip embedded comments in pack format string
WITHOUT_CLASSIFICATION	5
WITHOUT_CLASSIFICATION	16 ?
WITHOUT_CLASSIFICATION	root fiber
WITHOUT_CLASSIFICATION	4
WITHOUT_CLASSIFICATION	we encountered 0 when were reading the buffer above increment the number of read bytes.
WITHOUT_CLASSIFICATION	7
WITHOUT_CLASSIFICATION	determine how many of type are needed default 1
WITHOUT_CLASSIFICATION	if the low bit is set set the high bit of the result
WITHOUT_CLASSIFICATION	z adds extra null pad versus a
WITHOUT_CLASSIFICATION	line 1270
WITHOUT_CLASSIFICATION	if the index is not a multiple of 8 we are not on a byte boundary shift the byte
WITHOUT_CLASSIFICATION	yysindex 889
WITHOUT_CLASSIFICATION	do some padding i don t understand the padding strategy
WITHOUT_CLASSIFICATION	snip off ruby or jruby command from list of arguments leave alone if the command is the name of a script
WITHOUT_CLASSIFICATION	if the index is not a multiple of 8 we are not on a byte boundary
WITHOUT_CLASSIFICATION	we filled up current byte append it and create next one
WITHOUT_CLASSIFICATION	we don t deal with negatives.
WITHOUT_CLASSIFICATION	default pidgetter
WITHOUT_CLASSIFICATION	populate commandline with ng provided stuff
WITHOUT_CLASSIFICATION	this test may be too lax but it is the same as in mri
WITHOUT_CLASSIFICATION	break out if we ve dug as deep as we can
WITHOUT_CLASSIFICATION	just unix
WITHOUT_CLASSIFICATION	ignore and use hashcode
WITHOUT_CLASSIFICATION	z
WITHOUT_CLASSIFICATION	direct invocation of the command
WITHOUT_CLASSIFICATION	include its parent and in turn that module s parents
WITHOUT_CLASSIFICATION	single string command pass to sh to expand wildcards
WITHOUT_CLASSIFICATION	just windows
