DEFECT	todo this brute force approach of updating listeners on each and every event without checking the event type or any other information is going to because lots of invalidelementexceptions in subclasses implementations of updatelisteners and they will not have the event information to make their own decisions
DEFECT	todo the above statement also refreshes when we are not shown to be verified hence not entirely correct.
DEFECT	class to display graphics for a uml synchstate in a diagram. p todo if the font increases the circle should grow too. author pepargouml yahoo.es
DEFECT	rank the nodes depending on their level position in hierarchy and set their weight to achieve a proper node sequence for the layout. rows exceeding the maximum row width are split if standalone nodes are available. p weight the other nodes to determine their columns. p todo weighting does not appear to be working as intended because multiple groups of children specializations get intermixed in name order rather than being grouped by their parent generalization. tfm 20070314
DEFECT	todo this is a tagged value name which will never trigger an event
DEFECT	tests copyhelper without using stereotypes. p the test is using the tree of objects pre model p1 p2 class nestedpackage interface attribute pre todo this test does not match the mdr implementation because it expects the contents of a namespace to be copied. it is disabled until it can be fixed to run with both mdr and euml. tfm 20070820 author bogdan
DEFECT	todo correctly implement next function in the model subsystem for issue 1942
DEFECT	todo the code implementing this method is from 2003 see issue 2171 mechanically integrated by tfmorris in may 2007. needs to be reviewed updated. author decki endi yayan politechnic of bandung. computer departement method for changing text of message
DEFECT	todo why does the next part not work?
DEFECT	todo we do not really want this to be filled but if it is not then the user cannot double click in the compartment to add a new literal apparently gef thinks unfilled figs are only selectable by border setfilled false
DEFECT	todo we cannot have a global current language notationproviderfactory2.setcurrentlanguage newlanguage
DEFECT	todo we should warn the user we have removed something tfm
DEFECT	fixme the following throws org.argouml.model.invalidelementexception javax.jmi.reflect.invalidobjectexception object with mofid 127 0 1 1 ... 000e75 no longer exists. applicabletagdefs tagdefcbmodel.getapplicabletagdefinitions aclass assertnotnull tag definition was not found in return value of tagdefcbmodel.getapplicabletagdefinitions aclass after loading the project. teststereotypeutility.findmodelelementnamed profilemother.tag definition name td applicabletagdefs
DEFECT	todo i18n gef needs to pass us back the description of what is being done.
DEFECT	make it stretch vertically todo the curbody must notify modification
DEFECT	todo is this next line safe? what happens if there is just one comment edge or a comment edge and a single message?
DEFECT	todo this appears to expect that the uml 1.3 tag name will appear as a property name in an event but with the uml 1.4 switch to tagdefinitions this will not work
DEFECT	todo removed from uml2 non nls 1
DEFECT	todo only occurrence of isconcurrent in uml 2.1.1 is in index it is not on the page that is indexed
DEFECT	todo this works for 90 degree angles but is suboptimal for other angles. it should reflect the angle rather than just using a negative offset along the same vector
DEFECT	todo map uml2 names to uml1.x names non nls 1 non nls 1
DEFECT	todo except this will not work because the names are different which will because a test in checkumlmodelhelper to fail remap.put core permission core packageimport
DEFECT	this does not work in uml2 both owner and property needed!
DEFECT	fixme fails here. the current behavior appears intentional ie the test is wrong tfm assertnull the profile stereotype named profilemother.stereotype name st should not be found. findmodelelementfromnamespace stereotypeutility.getavailablestereotypes aclass profilemother.stereotype name st profilemodel
DEFECT	todo this looks backwards. left over from issue 2034?
DEFECT	todo this does not work but should collection elements model.getfacade .getrootelements model.getumlhelper .deletecollection elements elements model.getfacade .getrootelements asserttrue failed to create clean environment elements.isempty
DEFECT	todo issue 6144. it is proposed to allow any paclage to return as a potential namespace. commenting out until this is reviewed and clearly accepted by all.
DEFECT	todo something might go wrong during processing. we do not really want to create the model element until the user releases the mouse in the place expected.
DEFECT	strange but the link.getconnection returns a collection not a list! this is a bug compared to the uml standard imho mvw . hence the linkend is added to the end instead...
DEFECT	todo synchronized is required here as there can be some concurrent modification problems when drawing a call message and having that automatically draw the reply. maybe fixing the todo below will resolve this and the synch can go.
DEFECT	these next lines for the case that the current namespace is not a valid one... which of course should not happen but it does see the project attached to issue 3772.
DEFECT	todo in uml2.x event has no parameters. todo treat objectflowstate this does not exist anymore in uml2 and classifier
DEFECT	todo if this is an ordered list then you have to add in the right location!
DEFECT	appears to be gone from uml 2.x
DEFECT	todo this does not work no event arrives.
DEFECT	todo this is only checking immediate siblings when it needs to be checking all imported elements both here and by our parents and also taking into account visibility
DEFECT	this does not work anymore yet? since we never have a figtext here
DEFECT	utility function to localize the given string with help text and show it in the status bar of the argouml window. this function is used in favour of the inline call to enable later improvements e.g. it would be possible to show a help balloon. p todo work this out. one matter to possibly improve show multiple lines. param s the given string to be localized and shown
DEFECT	todo monitor is getting dismissed before layout is complete
DEFECT	todo we currently do not support per fig settings for most stuff so we can just use the defaults that we were given. settings new diagramsettings rendersettings
DEFECT	todo not yet working for uml2
DEFECT	this triggers some warnings in logs because some elements are created without an owner and eresource is null todo fix this the warning log if we would not add the eobject to a resource would looks like this ...warn awt eventqueue 0 encountered deleted object during delete of...
DEFECT	todo should not we throw an exception here?!?!
DEFECT	todo algorithm is n 2 in number of nodes
DEFECT	update attached node figures todo presumably this should only happen on a add or remove event
DEFECT	fixme depends on internal behavior of xmireaderimpl. needed for solving issue 5017.
DEFECT	todo allow adding models to a diagram issue 4172.
DEFECT	todo update the old and new node above this! this is issue 5079. the old and new uml namespaces are in the event but how do we know which nodes to refresh? and how to refresh? not necessarily the namespaces depending on the perspective.
DEFECT	todo this should only be building list up to index
DEFECT	todo the following can be removed if selectall gets fixed
DEFECT	fixme boundary condition at end of image for non integral multiples of buffer height
DEFECT	todo we cannot have a global current language notationproviderfactory2.setcurrentlanguage oldlanguage
DEFECT	xxx this seems to be a bug of the parser it always requires a context
DEFECT	todo use model.getmodelmanagementhelper .getpathlist modelelement todo this will fail with nested models
DEFECT	if we are not visible most likely we are being deleted. todo this indicates a more fundamental problem that should be investigated tfm 20061230
DEFECT	todo we should have all the information that is required in the notationsettings object
DEFECT	parse a transition description line of the form pre event signature guard condition action expression . pre a is not interpreted as having any special meaning. p the event signature may be one of the 4 formats ul li changeevent when condition li timeevent after duration li callevent a parameter list . li signalevent any string without . ul remark the uml standard does not make a distinction between the syntax of a callevent and signalevent both may have parameters between . for simplicity and user friendliness we chose for this distinction. if a user wants parameters for a signalevent then he may add them in the properties panels but not on the diagram. p an alternative solution would be to create a callevent by default and when editing an existing event do not change the type. p todo this function fails when the event signature contains a or a . see issue 5983 for other cases that were a problem in the past. param trans the transition object to which this string applies param s the string to be parsed return the transition object throws parseexception when no matching are found
DEFECT	todo this whole block can be deleted when issue 6266 is resolved
DEFECT	dirty fix for issue 1758 needs to be amended when we start supporting parameters
DEFECT	todo this does not work! mvw model.getfacade .setbody expr guard model.getfacade .setexpression g expr
DEFECT	todo in this case the properties panel is not updated with the changed expression!
DEFECT	warning the outputstream version of this does not work! tfm
DEFECT	else if the y coordinate is outside of the classifier role we fix the y in the max y of the classifier role. fixme we should increase the height of the classifier role do not???
DEFECT	warning the gef implementation of the outputstream version of this method does not work tfm 20070531
DEFECT	todo do tests for allinstances 8.5.11 even though it is not yet supported
DEFECT	todo not implemented by euml
DEFECT	todo this only works if the item is visible all its parents are expanded getexpandeddescendants makevisible
DEFECT	this will have problems if the smallest possible data segment is smaller than the size of the buffer needed for regex matching
DEFECT	todo why is this throwing a generic runtime exception?!?!
DEFECT	disabled since it gives various problems e.g. the toolbar icons get too wide. also the default does not give the new java 5.0 looks. component tree projectbrowser.getinstance swingutilities.updatecomponenttreeui swingutilities.getrootpane tree
DEFECT	if this is a feature get the owner of that feature todo does anything actually make use of this? it can because unexpected behaviour.
DEFECT	todo this error needs to be reported!
DEFECT	todo not in uml 2
DEFECT	todo we should be giving the user more direct feedback
DEFECT	todo this should be using internalgetallrealizedinterfaces
DEFECT	many many of these events .. this slows things down
DEFECT	todo this does not perform well enough with large models to have it enabled by default. if the performance cannot be improved perhaps we can introduce a manual find in explorer tree action. selectall targets
DEFECT	todo this is never executed as ludos di work was never finished.
DEFECT	todo when the attribute is not in the diagram for exemple select attribut by explorer then the refresh is not auto we had to click !!
DEFECT	todo this is probably an undesirable side effect unless the user confirms it. placing an element on a second diagram is going to potentially change its namespace. tfm 20061208
DEFECT	todo the below is not strictly correct but should cover the case we deal with. using a real xml parser would be better. look for xml document has just a single root element
DEFECT	todo assumes public todo this is probably an undesirable side effect unless the user confirms it. placing an element on a second diagram is going to potentially change its namespace. tfm 20061208
DEFECT	todo uncomment the following to get the failure. assertloadmodel issue5946 base dir zipped uml14 andromda profile datatype 3.3 andromda profile datatype 3.3.xml.zip null testreadcompressedandromdaprofilefileissue5946
DEFECT	status as of november 2008 figs created property panels exist more work required on explorer and assumptions about models not being nested tfm
DEFECT	if we have anything or multiple elements selected we do not do anything todo we need to support multiple selection. see issue 2552 http argouml.tigris.org issues show bug.cgi?id 2552
DEFECT	todo make setbounds calcbounds and updatebounds consistent
DEFECT	set the child components to the heights in the array list calculating the height of any proportional component on the fly. fixme this assumes that the jlabel and the component it labels have been added to the parent component consecutively.
DEFECT	a mode to interpret user input while creating a permission edge. the permission can connect any model elements including those represented by edges as well as nodes. p todo in uml 2.x permission becomes packageimport and the class hierarchy has changed so that it is no longer a subtype of dependency so this may need to be refactored to work correctly.
DEFECT	todo considering all delete events to be valid like below is going to because lots of unecessary work and some problems
DEFECT	todo the size of text figs which is what we care about most is not computed correctly by gef. if we got ambitious we could recompute a proper size ourselves.
DEFECT	a critic to detect when a classifier has to many operations . p todo exclude getter and setter operations from count
DEFECT	todo why is not this calculation for location working?
DEFECT	todo this code does not look like it will get reached because any abstraction realization is going to take the isaabstraction leg of the if before it gets to this more general case. tfm 20080508
DEFECT	todo this should probably only update the project when the user presses return or focus is lost
DEFECT	the next line does not work
DEFECT	todo if actioncopy is no longer a singleton how shall this work?
DEFECT	todo huge side effect. hoist out of parse tfm let us load the project
DEFECT	todo support navigability. the code below causes and exception in figassociationendannotation.
DEFECT	todo we do not really want to do the following but I am not sure what depends on it tfm 20070725
DEFECT	todo why is this clearing the name?!?! tfm
DEFECT	offset in x y for depth perspective lines of cube. todo this is the same value as the member would in link org.tigris.gef.presentation.figcube but there is nothing enforcing that correspondence. things will probably break if they do not match.
DEFECT	todo the code implementing this method is from 2003 see issue 2171 mechanically integrated by tfmorris in may 2007. needs to be reviewed updated. author decki endi yayan politechnic of bandung. computer departement method for changing text of message param newowner param parameter
DEFECT	todo this exception will be thrown during autoscrolling when the edge of the canvas is reached causing either the width or height to be adjusted to a negative value
DEFECT	todo make the tree refresh and expand really work in all cases!
DEFECT	todo the code implementing this method is from 2003 see issue 2171 mechanically integrated by tfmorris in may 2007. needs to be reviewed updated. author decki endi yayan politechnic of bandung. computer departement method for changing text of message param newowner model element which should now be listened to
DEFECT	todo should save and restore the last positions of the toolbars
DEFECT	todo does anyone use command line? if so localization is needed tfm
DEFECT	todo the following rather than the above is probably the correct way to search stereo findstereotype obj null name
DEFECT	really ought to have a criticexception to throw here.
DEFECT	there is a possibility that the next step forward takes another path in this wizard. to allow for this we must destroy the path already traveled by. p todo i linus would say that this is really a problem with the wizard implementation since i believe it should be possible to explore a path in the wizard and then go back. inheritdoc
DEFECT	builds a message within some interaction related to some assocationrole. the message is added as the last in the interaction sequence. furthermore the message is added as the last to the list of messages already attached to the role. effectively the already attached messages become predecessors of this message. todo this sets the activator as a side effect. however it is impossible to determine the activator at this stage as we do not yet know what the action will be of the message we are creating. see issue 5692. param inter the interaction. param role the association role. return the newly created message.
DEFECT	todo name is not expanded for diagram objects
DESIGN	todo it is probably worthwhile to abstract and factor this chooser and directory stuff. more file handling is coming I am sure.
DESIGN	todo complete this implementation tfm
DESIGN	todo this will vary based on the type of the tagdefinition
DESIGN	setfontfamily dialog todo is this needed?
DESIGN	todo move this into the toolbar project.
DESIGN	these methods are based on the graphevents. these need replacing by more specic meaningful requests of the diagram interface model
DESIGN	this is wrongly called with a null handle as a workaround we return an empty collection
DESIGN	todo not navigable this direction? tfm
DESIGN	todo this does not look right review tfm
DESIGN	return the statemachine todo if this method is called by any of the figs it will introduce a dependency cycle. it would be much better if they could just use link org.argouml.uml.diagram.argodiagram getowner which does the same thing.
DESIGN	todo need to clean up objecttoid can we do it based on modelelement delete notifications?
DESIGN	the constructor. todo why does this method not handle all settings key default shadow width is missing ?
DESIGN	todo performance critical method
DESIGN	todo needs work. must determine which figs enclosed in the pool are within the bounds of this fig and translate those.
DESIGN	todo optimize for root model case? tfm
DESIGN	todo do we really need to do this? carried over from old behavior
DESIGN	todo elementownership is not in modelsubsys!!
DESIGN	todo this seems like a brute force workaround and a very indirect one at that . it appears to be needed though until we fix the problem properly. tfm 20070904
DESIGN	todo is this really needed?
DESIGN	todo uml 1.4 spec requires both client and supplier to be in the same model tfm
DESIGN	todo temporary let tree expand implicitly tfm
DESIGN	todo split into an inherited attr critic and a local attr critic
DESIGN	todo should throw if the string is not good?
DESIGN	a wizard which adjust the threshold for critics. p todo make the treshold setting adjustable without using the wizard and make it persistent. maybe by using the configure button on the browse critics dialog. see org.argouml.uml.cognitive.critics.abstractcrtoomany author mkl
DESIGN	todo better if we wrap in a profileexception and throw that
DESIGN	create our bandbuffer which is just a small slice of the image todo we used a fixed height buffer now but we could be smarter and compute a height which would fit in some memory budget allowing us to use taller buffers with narrower images minimizing the overhead of multiple rendering passes
DESIGN	todo support iterate declarator
DESIGN	return returns the default stereotype view todo enumeration here?
DESIGN	todo how about figassociationclass?
DESIGN	todo this should not depend on the current project but for now just make sure it is defined and that we have an undo manager
DESIGN	remove this diagram from existence. todo move to gef
DESIGN	todo this needs to be managing undo on a per project basis instead of using gef s global undo manager
DESIGN	this class gives critics access to parts of the uml model of the design. it defines a gen function that returns the children of any given part of the uml model. basically it goes from project to models to modelelements. argo s critic agency uses this to apply critics where appropriate. todo this thinks it knows all the composition associations of the the uml metamodel but it is a incomplete and b not updated for uml 1.4. this should be done using information from the metamodel rather than hardwired code. tfm 20070205 see org.argouml.cognitive.agency see org.argouml.cognitive.designer author jrobbins
DESIGN	todo define constants for magic numbers
DESIGN	todo consider inherited associations? todo self loops are double counted
DESIGN	todo multiple associations between the same pair of elements need to be special cased so that they do not overlap tfm 20060228
DESIGN	gets the current threshold. todo should this be protected? return the current threshold.
DESIGN	todo there is a cyclic dependency between this class and figconcurrentregion
DESIGN	todo move to mmutil or some other common place and merge with umlcomboboxentry findnamespace
DESIGN	needs more work sending and receiving icons
DESIGN	an object tagged as being the owner of a figedgenote. has knowledge about the source and destination of the figedgenote. p the source and destination are modelelements. at least one of them is a comment but they may be both comments. todo there is tons of special case code scattered around argouml for this one class since it is the only owner of a figedgemodelelement which is not a uml element. we should find a way to generalize this. p todo issue 3031 requires this class to be replaced by a similar mechanism as the n ary association class the node and the edges shall all have the same owner i.e. the uml comment object. since jul 17 2004 author jaap.branderhorst xs4all.nl
DESIGN	todo offenders need to be more strongly typed. tfm 20070630
DESIGN	if expression implements one of the combobox select it todo ? do it in euml module project ?
DESIGN	return the set of offenders todo the return value needs to be more strongly typed. tfm 20070630
DESIGN	todo do all these classes need to be in their own files? public?
DESIGN	must be overridden to make sense i did not want to make it abstract because it might not be required
DESIGN	todo use default value of appropriate type for td
DESIGN	our superclass no longer has this method so perhaps this whole thing should be removed? tfm super.updatelisteners newowner
DESIGN	todo this is actually a hack! some diagram types like the statechart diagrams access the current diagram to get some info. this might because problems if there is another statechart diagram active so i remove the current project before loading the new one.
DESIGN	todo handle multiple top level packages
DESIGN	the following is specifically for realizations todo correction in gef it should use interfacerealization not abstraction
DESIGN	todo in uml 2.x a tagdefinition has become a property on a stereotype anything that uses this will probably need to be reviewed changed. just return property for now.
DESIGN	language must be unique todo do it in the model if do not use the dialog and change the first
DESIGN	todo cyclic dependency between persistancemanager and here
DESIGN	todo this should not be an instance variable. it should just be created and discarded as needed.
DESIGN	check for duplicate name and rename if necessary
DESIGN	creates a new ocl critic param oclconstraint ocl expression param headline headline param description description param moreinfourl the info url param knowledgetypes the knowledge types param supporteddecisions the decisions param priority the priority throws invalidoclexception if the ocl is not valid todo do these need to be lists or can they be simple collections?
DESIGN	todo why is this inside a block? forgotten else branch?!? question by euluis 2009 08 16.
DESIGN	todo maybe separate name
DESIGN	todo here we should e.g. show the user a message that the loaded project was using a notation that is not currently available and a fall back on the default notation was done. maybe this can be implemented in the persistencemanager?
DESIGN	todo this is the same as in parent remove? see org.argouml.uml.diagram.ui.fignodemodelelement updatebounds
DESIGN	todo should we handle access and import here?
DESIGN	todo remove when code below in characters is removed private static final string returnstring n
DESIGN	todo this probably needs more qualification tfm
DESIGN	todo this method is obsolete. use getinputmap etc as below
DESIGN	todo check semantics here tfm
DESIGN	todo this should be a configurable property
DESIGN	todo all super constrcutors should take a graphmodel
DESIGN	todo should fire its own event and projectbrowser should register a listener tfm
DESIGN	todo remove this old implementation after 0.22 if it is demonstrated that it is not needed. tfm
DESIGN	todo there is a cyclic dependency between figconcurrentregion and the actions actionaddconcurrentregion
DESIGN	public object getgoalinfo string goal return goals.getproperty goal todo we need a better representation of goals
DESIGN	local variables what do they do?
DESIGN	todo really should be a separate class
DESIGN	a modelelement has been changed. now we give it priority to be checked by the critics as soon as possible. todo why is is synchronised? todo what about when objects are first created? param dm the design material param reason the reason
DESIGN	todo we could generalize this to initialize more stuff if needed
DESIGN	todo why is this here? who is calling this? see java.beans.vetoablechangelistener vetoablechange java.beans.propertychangeevent
DESIGN	todo this probably belongs with the diagram subsystem
DESIGN	todo change this to use an undomanager instance per project when gef has been enhanced.
DESIGN	hack for to do items only should check isleaf node but that includes empty folders. really i need alwaysleaf node .
DESIGN	todo why was this next line in the code so long?
DESIGN	this method has insufficient information to call buildextensionpoint. thus we will need to create one and pray that whomever called us knows what kind of mess they got.
DESIGN	todo do we need to set the input encoding here? it was done for todo parsing but none of the other member types inputsource inputsource new inputsource new inputstreamreader inputstream argo .getencoding
DESIGN	todo why is this not executed? remove if not needed tfm
DESIGN	loads a project displaying a nice progressmonitor param file the project to be opened param showui whether to show the gui or not todo this needs to be refactored to be gui independent tfm
DESIGN	todo this does not belong here but it is not a good time to move it. find someplace less obtrusive than this inner loop. tfm
DESIGN	todo asargument??
DESIGN	todo this creates a dependency on the critics subsystem. instead that subsystem should register its desired menus and actions.
DESIGN	todo get rid of magic numbers! figure out which represent line widths vs padding vs offsets
DESIGN	references to actions that we need for mac hack
DESIGN	todo convert all to use standard factory registration
DESIGN	todo should define a compoundcritic
DESIGN	todo this class is part of a dependency cycle with projectbrowser and
DESIGN	andreas just temporary for the uml2 pre alpha versions!
DESIGN	now get all classifiers imported from other packages todo this should probably happen automatically in getallmodelelementsofkind tfm
DESIGN	todo add an open most recent project command so that command state can be decoupled from user settings?
DESIGN	install the trap to eat securityexceptions. note this is temporary and will go away in a future release http bugs.sun.com bugdatabase view bug.do?bug id 4714232
DESIGN	todo what are these magic numbers?
DESIGN	create a taggedvalue with a tag type matching our source module filename and a value of the file s last modified timestamp. todo this functionality needs to be moved someplace useful if it is needed otherwise it can be deleted. tfm 20070217
DESIGN	hack in order to be able to compile in java1.3
DESIGN	choose the arrowhead style for each end. p todo this is called from paint . would it not better be called from renderingchanged ?
DESIGN	todo why is not this stuff managed by the namefig itself?
DESIGN	andreas just temporary a warning dialog for uml2...
DESIGN	todo this class should be moved to package org.argouml.uml.ui.behavior.common behavior.
DESIGN	if is a classifier role it must return the sent messages. in other cases returns an empty list. todo must be the incoming messages or the sent ones?
DESIGN	initialize the argouml application version so that link applicationversion getversion does not return null. throws exception if something goes wrong... todo move this to an helper class.
DESIGN	create an enumeration. return object new enumeration since uml 1.4 todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	todo let us move this behind the model interface
DESIGN	if is a classifier role it must return the received messages. in other cases returns an empty list. todo must be the outgoing messages or the received ones?
DESIGN	argoeventpump is an event dispatcher which handles events that are global in nature for the entire application. p todo diagramappearance and notation events are not application wide and will be moved from here to someplace more specific in the future so that they can be managed on a per project or per diagram basis.
DESIGN	create an empty but initialized instance of a uml node. return an initialized uml node instance. todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	get the classifier participant of an associationend. todo rename this getparticipant to align with uml spec tfm 20070331 param handle the associationend to get from. return the classifier of the associationend.
DESIGN	determine if the passed parameter has a return direction kind. todo this is a duplicate of link isreturn object return true if it is a return direction kind param handle the parameter
DESIGN	todo is it appropriate the templateableelement as the client and a list of templateparametersubstitution as the list of parameters?
DESIGN	todo silently ignore instead? return false
DESIGN	find the icon for a given model element. return the icon or code null code if there is no icon. param value the model element. todo this should not use string matching on classnames to do this since this means that we have knowledge about how the model elements are implemented outside of the model component.
DESIGN	initialze gef s version of the loader too todo we should probably be passing icons that we loaded ourselves but there does not seem to be a way to do that with gef tfm
DESIGN	return the key tag of some tagged value. todo this does exactly the same as gettag object . remove one of them. param handle the tagged value. return the found value as string.
DESIGN	todo lots more types duration instance interval
DESIGN	todo can we get this from the metamodel? non nls 1
DESIGN	todo how do we get the connectors of an association?
DESIGN	a classifier can only have a single unnamed classifierrole so todo this probably belongs in a critic instead of here
DESIGN	the part of the design this issue affects. p each member is either a model element a link fig or a link diagram . p todo offenders need to be more strongly typed. because there is not a common supertype for these three types we cannot type this list. we should introduce a common supertype interface. tfm 20070630 p the list of offenders is set once e.g. by the constructor and cannot change. p
DESIGN	reply a set of design material s that are the subject of this todoitem. return the offenders todo offenders need to be more strongly typed. tfm 20070630
DESIGN	todo this could be a huge collection find a more efficient way
DESIGN	todo generalize assumes uml type names are unique without the qualifying package names true for uml 1.4
DESIGN	models the designers goals in making this design. provides useful control information to the agency so that only critics relevant to the designers goals are ever executed. todo really this should be part of a domain extension and not the kernel. i have not developed this part of argo very much. author jason robbins
DESIGN	todo do we need to worry about umlclass umlpackage etc?
DESIGN	todo encountering a deleted object during any part of this traversal will abort the rest of the traversal. we probably should do the whole traversal in a single mdr transaction.
DESIGN	return the default type for the return parameter of a method. return a classifier to use as the default type todo this belongs in projectsettings. tfm
DESIGN	todo hold lock for entire recursive traversal?
DESIGN	todo add enumerationliteral someplace
DESIGN	todo this is well formedness rule from uml1.4.2 4.5.3.20 1 a root cannot have any generalizations. self.isroot implies self.generalization isempty
DESIGN	todo this should fetch the stereotype from our profile
DESIGN	todo let us build this into a separate buildtoolbar method
DESIGN	todo this references the concrete factory we need a factories factory
DESIGN	set the target anew. todo this method is never used. what is its intention? remove it?
DESIGN	todo this first loop just to count the items appears redundant to me tfm 20070630
DESIGN	create a new panel for the given step. for example when the given step is 1 create the first step of the wizard. p todo it might be convient to make a reusable subclass of wizard that shows all textual steps to guide the user without any automation. such a wizard could be easily authored stored in an xml file and efficiently presented by reusing a single panel with a single jtextarea. param newstep the number of the step to make a panel for. return a new panel for the given step
DESIGN	todo tabtodo should listen for an event that this fires so that we can decouple from the projectbrowser. tfm
DESIGN	todo this is using internal knowledge of gef. it should handle this itself. tfm
DESIGN	copy a file from source to destination. todo perhaps belongs in a utilities class of some sort. param source the source file to be copied param dest the destination file return success status flag
DESIGN	todo this is using internal knowledge of gef. it should handle this itself. tfm mvw move into something like main.initgef
DESIGN	for locale selection. p todo detect the available locales from the available files. return locales used in argouml
DESIGN	return the default type for an attribute. return a classifier to use as the default type todo this belongs in projectsettings. tfm
DESIGN	todo unused?
DESIGN	searches for a type classifier with name s. if the type is not found a new type is created and added to the current namespace. p todo move to model subsystem tfm 20070307 param s the name of the type classifier to be found return classifier
DESIGN	searches for a type classifier with name s. if definenew is true a new type is defined if the type classifier is not found. the newly created type is added to the currentnamespace and given the name s. p todo move to model subsystem tfm 20070307 param s the name of the type classifier to be found param definenew if true define a new one return classifier the found classifier
DESIGN	moves some object to trash i.e. deletes it completely with all dependent structures. p deleting an object involves pre removing target history deleting all fig representations for the object deleting the uml element deleting all dependent uml modelelements deleting commentedges which are not uml elements move to trash for enclosed objects i.e. graphically drawn on top of move to trash subdiagrams for the object saveguard that there is always at least 1 diagram left if the current diagram has been deleted select a new one to show trigger the explorer when a diagram is deleted set the needssave dirty flag of the projectmanager pre param obj the object to be deleted see org.argouml.kernel.projectimpl trashinternal object p todo this should just be named delete or something which better tells what it does since there really is not a trash can .
DESIGN	changed in uml 2.1 component with subsystem stereotype todo we should deprecate this?
DESIGN	returns the root package. return the package which is the root deprecated for 0.25.4 by tfmorris use link getroots to get packages model elements which are at the top level. p todo we probably need a getdefaultnamespace method or something similar to replace some uses of this.
DESIGN	updates the top level modelelements for all projects. in uml2 each model knows it is root elements so this could make setroots ... obsolete. e.g. applying a stereotype in uml2 adds a new root. todo this is redundant with setroots getroots. there are already too many ways this stuff is managed without adding an additional one. all current model subsystem implementations know their top level elements. responsibility can be moved to the model subsystem but let us choose one way of managing this.
DESIGN	a datastructure for settings for a project. p most getters return a string since they are used by argo.tee . this is also the reason all these attributes are not part of a map or something. p todo the header comment is currently not used this function is not completely implemented yet. how do we store this in the project? where should the user enter his header comment? see issue 4813. author michiel
DESIGN	notation settings value object. stores settings which control how text is rendered on diagrams. p todo this needs to go on a diet. it is used everywhere so is performance sensitive. the current set of settings is the union of all those found in the legacy code but it is not clear that all of them are actually used. author tom morris tfmorris gmail.com
DESIGN	this does a calculation of where our ext directory is. todo we should eventually make sure that this calculation is only present in one place in the code and not several.
DESIGN	in contrast to link getzipname returns the member s name without the prepended name of the project but with the extension . p todo this is not used anywhere shall we remove it? author steffen zschaler return the member s name without any prefix or suffix
DESIGN	todo end up with multiple models here
DESIGN	we are deleting the last diagram so let us create a new one todo once we go mdi we will not need this.
DESIGN	create a notation settings value object with all default values. p todo this class only has partial undo support basically just those members that had it as part of a previous implementation .
DESIGN	this code was copied from actionbooleantaggedvalue
DESIGN	parse a message textual description. p todo this method is too complex let us break it up. p param umlmessage the uml message object to apply any changes to param s the string to parse throws parseexception when it detects an error in the attribute string. see also parseerror.geterroroffset .
DESIGN	this is the temporary solution for issue 1011
DESIGN	todo addonly has been removed in uml 2.x so we should phase out support of it tfm 20070529
DESIGN	save the .argo entry todo cyclic dependency with persistencemanager move persistencemanager..getprojectbasename someplace else
DESIGN	if c2 is empty then we are done or there is a cycle in the message graph which would be bad if c2 has more than one element then the model is crappy but we will just use one of them anyway
DESIGN	utility method to encode a string in a way that allows it to be saved properly in an xml file and regained filtering out any noice that an xml framework might have seen fit to add. todo why are we doing this ourselves? surely encoding information for xml serialization is a well known task tfm i have never understood why this is being done. i think we should remove any usage bob param str the string to encode. return the encoded string.
DESIGN	hence a less elegant workaround that works
DESIGN	this should probably be inside xmireader.parse but there is another place in this source where xmireader is used but it appears to be the nsuml xmireader. when argo xmireader is used consistently it can be responsible for loading the listener. until then do it here.
DESIGN	a critic to suggest using the facade stereotype. p todo at the moment only a dummy implementation see issue 3093.
DESIGN	todo what progressmgr is to be used here? where does it come from?
DESIGN	could this be some other type of internal error that we want to handle differently? do not think so. tfm
DESIGN	todo what if used elsewhere?
DESIGN	create and register diagrams for activity and statemachines in the model s of the project. if no other diagrams are created a default class diagram will be created. argouml currently requires at least one diagram for proper operation. todo move to xmifilepersister protected param project the project
DESIGN	load .xmi file before any pgml files fixme the following is loading the model before anything else. due to the zargo containing the profiles currently we have removed this hack in umlfilepersister and i think it should be removed from here also.
DESIGN	a bufferinputstream that is aware of xml structure. it searches for the first occurrence of a named tag and reads only the data inclusively from that tag to the matching end tag or it can search for the first occurrence of a named tag and read on the child tags. the tag is not expected to be an empty tag. p todo this is hardwired to assume a fixed single byte character encoding. it needs to be updated to handle different encodings including multi byte encodings. tfm 20070607 author bob tarling
DESIGN	todo attempt to move the following code to gef
DESIGN	todo use stylesheet to convert or wait till we use fig factories in diagram subsystem. what is the last version that used fignote?
DESIGN	todo move to diagram subsystem?
DESIGN	set the fig style attributes. p todo this should move into the render factories as described in issue 859. param fig the fig to style. param attributemap a map of name value pairs
DESIGN	todo without this we fail to draw e.g. a class. but is this a good solution? why is the layer not set in the constructor?
DESIGN	todo we really want to be able replace the initial content handler which is passed to sax but we cannot do this without cloning a whole bunch of code because it is private in the super class.
DESIGN	if no fig was created by the code above then we must go look for the old style constructor that should have fallen into disuse by now. fig object rectangle diagramsettings all of these constructors should have been deprecated at least and replaced with the new signature. this is here for paranoia only until all figs have been reviewed.
DESIGN	a fignodemodelelement with no owner should match here todo this is a temporary solution due to figpool extending fignodemodelelement when in fact it should not do so.
DESIGN	translate the visibility flag of a fig to the pgml visibility attribute value. the pgml values are 0 hidden and 1 shown. if not specified then 1 is the default so we return null for this to prevent redundent data being written to pgml. todo remove on gef release after 0.11.9 as it will be provided there. param f the fig return 0 hidden null shown
DESIGN	the file persister for the uml model. todo this is empty. what is its purpose? tfm author bob tarling
DESIGN	todo not sure we need to do this but just to be safe for now.
DESIGN	open a zipinputstream to the first file found with a given extension. todo remove since this is a duplicate of zipfilepersister method when we have refactored the persister subsystem. param url the url of the zip file. param ext the required extension. return the zip stream positioned at the required location. throws ioexception if there is a problem opening the file.
DESIGN	todo this does not need a full profilereference since it uses the reader handed in the constructor. it does not make much sense to make its callers init the path to some name which it does not need... author luis sergio oliveira euluis
DESIGN	todo what does the magic number 6000 represent here? put it in an explanatory literal! tfm 20071205
DESIGN	todo seems like overkill to load the model just to get the display name but that is where it is stored currently tfm
DESIGN	todo this appears unused. if it is needed the model api should be enhanced to provide a method that does this directly.
DESIGN	todo is this critics embedded in comments actually used by anyone?
DESIGN	todo all this profile loading handling needs to move someplace in model subsystem probably
DESIGN	todo this profile is not used anymore see getmodel
DESIGN	todo this is an absurdly long method! break it up.
DESIGN	todo we need a specific exception type here.
DESIGN	todo this code is cloned over and over again! tfm
DESIGN	settings dialog tab panel for layout options. p todo this class contains a lot of references to org.argouml.uml.ui. it would probably be better to move it there. todo this class breaks too many dependency limitations. and it is not used anywhere. so i mvw disabled its functionality. author linus tolke
DESIGN	todo we could also support other flavors here e.g. image then you can drag modelelements directly into your wordprocessor to be inserted as an image .
DESIGN	todo why is not this done in save?
DESIGN	todo the following handling of multiselection is just a local solution for the line color better find a more general solution i do not know if it is undoable this way thn
DESIGN	todo the following handling of multiselection is just a local solution for the fill color better find a more general solution i do not know if it is undoable this way thn
DESIGN	todo we need to get the model extent and package? associated with the current diagram so that we can create the new element in the right place.
DESIGN	the dialog that allows the user to go to any diagram in the project by doubleclicking on it. p this dialog is not modal and can stay open while the user is working on the model. it is even possible to open multiple of these dialogs although the purpose of such useraction eludes me. p todo this dialog should have multiple tabs named help diagram classifier statevertex etc. which would allow the user to go to other things than diagrams. author mvw
DESIGN	todo some parts of argouml have preliminary support for multiple details panels but we currently only support the default south bottom panel
DESIGN	todo check that this is correct
DESIGN	flag to indicate if we are the main application or being integrated in another top level application such as eclipse via the argoeclipse plugin . todo this is a temporary measure until projectbrowser can be refactored more appropriately. tfm
DESIGN	todo bob says tabs that listen for target changes should register themselves not expect detailspane to listen and pass on the event. otherwise these tabs always rely on detailspane. tabtodotarget and tabprops currently listen directly.
DESIGN	try to save the project. param overwrite if true then we overwrite without asking param file the file to save to param pmw the progressmonitor to be updated return true if successful todo separate this into a swing specific class tfm deprecated in 0.29.1 by bob tarling use trysavewithprogressmonitor
DESIGN	todo work in progress here to allow multiple details panes with different contents bob tarling
DESIGN	todo this causes a cyclic depencency with actionsaveproject
DESIGN	todo this needs work so that users can set the font size through a gui preference window.
DESIGN	loads a project displaying a nice progressmonitor param overwrite if true the file is going to be overwritten param file the target file todo separate this into a swing specific class tfm param exit if true exit argouml when done
DESIGN	todo bob says we are looking at focus change to flag the start of an interaction. this is to detect when focus is gained in a prop panel field on the assumption editing of that field is about to start. not a good assumption. we need to see if we can get rid of this.
DESIGN	this class represents a pool of swimlanes for activity diagrams. this is exists only to act as the gef style encloser. other nodes in the same must be placed entirely within or outside the boundaries of this fig but cannot intersect with the boundary. p todo there is no actual model element being represented here so we are inheriting a lot of behaviour from fignodemodelelement that we do not want. we require to split fignodemodelelement to separate the code that requires a model element owner. see issue ... p remark mvw why not give it an owner instead? the activitygraph is the obvious candidate or maybe the top state. author mkl
DESIGN	manages a progressmonitor dialog. note users of this class should use the type of the interface link org.argouml.taskmgmt.progressmonitor wherever possible to maintain gui independence. author andrea nironi tigris.org todo bob says i do not like the naming of this class. its confusing that its called ...window and yet it is not a window. let us rename once we have it hidden.
DESIGN	loads the project file and opens all kinds of error message windows if it does not work for some reason. in those cases it preserves the old project. param file the file to open. param showui true if an error message may be shown to the user false if run in commandline mode param pmw the progressmonitor to be updated if not needed use null return true if the file was successfully opened todo separate this into a swing specific class tfm
DESIGN	todo this should listen for file save events tfm
DESIGN	loads the project file and opens all kinds of error message windows if it does not work for some reason. in those cases it preserves the old project. param file the file to open. param showui true if an error message may be shown to the user false if run in commandline mode param pmw the progressmonitor to be updated if not needed use null return project the project that was created based on the file that was successfully opened todo separate this into a swing specific class tfm
DESIGN	todo can we move this knowledge behind model facade rather than have a condition here?
DESIGN	a command to set selected figs to their minimum size. p despite its name really the minimum size is selected here! p todo rename this class. author markus klink
DESIGN	this fig is never placed on a diagram. it is only used by the call renderer so that pick list items look like diagram figs. todo this fig does not represent a model element and so it should not extend fignodemodelelement. we should split fignodemodelelement in two one for base functionality for all nodes and one that is truly for model elements.
DESIGN	todo why is this code even getting called for a figgeneralization?
DESIGN	class to manage project related actions which need to be or historically have been managed as singletons. todo it is unclear to me whether all of these actually have to be managed as singletons but for now I have just moved them from projectbrowser as is. tfm author tom morris
DESIGN	todo move to different class?
DESIGN	i hate this so much even before i start writing it. re initialising a global in a place where no one will see it just feels wrong. oh well here goes.
DESIGN	todo this should not know the internal form of type names but I am not sure what gef s predicatetype does so I am fixing it here tfm
DESIGN	kludge required by gef s use of hashmap in the api todo this can be removed if they ever fix gef to use maps
DESIGN	critique menu todo this dependency should be inverted with the critics subsystem registering its desired shortcuts with us tfm
DESIGN	genericargomenubar defines the menu bar for all operating systems which do not explicitly ask for a different kind of menu bar such as mac os x. p menu s and the mnemonics of menu s and the menuitems are separated in the propertyresourcebundle them menu.properties them . p menu items are separated in the propertyresourcebundle them action.properties them . p the key s in menu.properties have the following structure pre menu file . name of menu e.g menu.file mnemonics of menu s file . name of menu .mnemonic e.g menu.file.mnemonic mnemonics of menuitems file . flag for item . name of menuitem .mnemonic e.g menu.item.new.mnemonic pre todo add registration for new menu items. deprecated in 0.29.2 by bob tarling. this class will be moved and made private in future. use menubarfactory.createapplicationmenubar
DESIGN	forwards this event to the tree model. param element the modelelement to be changed todo this should not be public. components desiring to inform the explorer of changes should send events.
DESIGN	todo delete should be available on any combination of model elements and diagrams. todo should not be creating a new instance here. we should hold the delete action in some central place.
DESIGN	adds the entry to the mru list. param filename of the project todo this should listen for file save events rather than being called directly tfm.
DESIGN	todo make sure this should not go into a previous condition tml
DESIGN	todo should not be creating a new instance here. we should hold the delete action in some central place.
DESIGN	the tree structure has changed significantly. inform the associated tree model. todo this should not be public. components desiring to inform the explorer of changes should send events. deprecated by mvw in v0.25.4. use events instead.
DESIGN	todo we really only care about events which affect things that are visible in the current perspective view . this could be tailored to cut down on event traffic. tfm 20060410
DESIGN	the singleton instance. todo why is this a singleton? would not it be better to have exactly one for every explorer?
DESIGN	todo we need a factory pattern for goxxx classes that can determine if they are required
DESIGN	todo can this be made more restrictive? do we care about any attributes other than name? tfm
DESIGN	this is carried over from previous implementation not sure why we do not want contents of package tfm 20060214
DESIGN	todo any namespace can contain other elements. why do not we allow this? tfm
DESIGN	todo really should be element modelelement but we do not have a type which is portable for this
DESIGN	todo this method can be replaced by getclass .getsimplename when argo drops support for java versions 1.5
DESIGN	see org.argouml.cognitive.critic setheadline java.lang.string set up the locale specific text for the critic headline the one liner that appears in the to do pane and the critic description the detailed explanation that appears in the to do tab of the details pane . mvw maybe we can make it part of the constructor cruml ? fixme why override if nobody uses?
DESIGN	set the threshold. todo should this be protected? param threshold the threshold to compare to.
DESIGN	todo split into one critic for inherited problems and one for problems directly in this class.
DESIGN	todo do we need this generalization is not a named element
DESIGN	these may not actually make any difference at present the code behind addtrigger needs more work .
DESIGN	find all the figs that visualise the given model element in this layer or null if there is none. todo once gef includes this same method in diagram then this can go see org.tigris.gef.base.diagram presentationsfor java.lang.object
DESIGN	todo this uses a last one wins algorithm for registration we should warn if a factory is being overwritten.
DESIGN	gets font name. if it does not exist in configuration it creates new entries in configuration for appearance. todo why create in a getter? return the name of the configured font
DESIGN	todo what is this trying to do? it is never going to get called tfm really dirty hack to remove unwanted listeners
DESIGN	todo this should not be referencing the current project. instead the appropriate undomanager should have already been retrieved from the correct project.
DESIGN	todo we should be given an undo manager to use rather than looking for a global one
DESIGN	todo replace the next deprecated call. this case is complicated by the use of parameters. all other figs work differently.
DESIGN	class to display graphics for a uml choice state in a diagram the circle. todo this should really be renamed figchoicestate. it is the last vestige of the uml 1.3 name. author pepargouml
DESIGN	todo what is this needed for? tfm
DESIGN	the next 4 lines fix the 2nd half of issue 5638. is there no better way?
DESIGN	return a list of gravity points around circle which is enclosed in the bounding box. convenience method for use by figinitialstate and figfinalstate. todo as this method is not required by all sub classes it would seem sensible to extend figstatevertex with figcirclevertex and only have the relevant concrete figs extend that and gain this functionality. return a list of points
DESIGN	to resize only when a new concurrent region is added changing the height. todo probably should not exist as this class should be listening for added concurrent regions and call this internally itself. param h the new height
DESIGN	todo are not our items always strings? tfm 20100917
DESIGN	actually instanciate the netnode and fignode objects and set the global next mode to modeplace todo should call super reduce code volume! see org.tigris.gef.graph.graphfactory makenode
DESIGN	todo this logic may well be worth moving into the model component. provide a similar grid to the connectionsgrid
DESIGN	todo ? if this class listen the model it will be able to change in live as it is done in the figs diagram
DESIGN	todo redo it curbody should be as long as curlanguage button
DESIGN	todo needs to be tidied up after stable release. graph model should be created in constructor
DESIGN	when we change the type we need to create a new initial value. and to display the panel todo if we select the same type that the current do nothing.
DESIGN	todo we definitely do not want to react to addition and removal of transitions. cannot we be more specific when we register ourselves as a listener.
DESIGN	the target model element in uml1.x this is the element that owns the expression. in uml2.x this is the expression itself todo this makes behaviour different enough that separate subclasses should be considered.
DESIGN	field todo textarea or textfield
DESIGN	todo use it notify set to true to forward events to model. only one of language and body fields should have this set to true.
DESIGN	todo if this is an ordered list then you have to add in the right location!
DESIGN	todo this is a redundant invocation
DESIGN	get all classifiers in our model todo we need the property panels to have some reference to the project they belong to instead of using deprecated functionality
DESIGN	todo copied from umldiagramrenderer. get the fignode from the given layer that represents the given model element. the fignode portion of an association class is returned in preference to the figedge portion. if no fignode is found then a figedge is searched for and the fignode that acts as its edge port is returned. param lay the layer containing the fig param modelelement the model element to find presentation for return the fignode presentation of the model element
DESIGN	todo build a return parameter
DESIGN	todo how to merge multiple inheritance? necessary? this currently copies the common ancestors multiple times
DESIGN	todo this cannot depend on projectbrowser. alternate below
DESIGN	todo this is a composite association so these will get deleted automatically. the only thing we need to do is check for any additional elements that need to be deleted as a result.
DESIGN	todo this is well formedness rule from uml1.4.2 4.5.3.20 2 no generalizableelement can have a parent generalization to an element that is a leaf. self.parent forall s not s.isleaf
DESIGN	check arguments against parameters for type and number todo perhaps move this to a critic instead? tfm 20070326
DESIGN	todo add standard stereotype? set is open ended but predefined names include call create instantiate send
DESIGN	todo is there anyway we can determine this size at runtime?
DESIGN	we are getting events we do not want. filter them out. todo can we instruct the model event pump not to send these in the first place? see defect 5095. param event the event
DESIGN	modelimpl.getfacade .getrootelements gets all root elements in the uml repository including available profiles that are not part of the current project degrades performance . projectmanager.getmanager .getcurrentproject .getroots only returns user model roots and no profiles. projectmanager.getmanager .getcurrentproject .getmodels gets all root models but no root namespaces. todo which is best? is there any other way?
DESIGN	todo as currently coded this actually returns all behavioralfeatures which are owned by classifiers contained in the given namespace which is slightly different then what is documented. it will not include any behavioralfeatures which are part of the namespace but which do not have an owner.
DESIGN	todo performance. consider instantiating this just once outside the for loops and clear at this point instead.
DESIGN	delete a model element. implements cascading delete to make sure model is still valid after element has been deleted. p the actual deletion is delegated to delete methods in the rest of the factories. for example a method deleteclass exists on corehelper. delete methods as deleteclass should only do those extra actions that are necessary for the deletion of the modelelement itself. i.e. deleteclass should only take care of things specific to umlclass. p the delete methods in the uml factories should not be called directly throughout the code! calls should always refer to this method and never call the deletexxx method on xxxfactory directly. the reason that it is possible to call the deletexxx methods directly is a pure implementation detail. p the implementation of this method uses a quite complicated if then else tree. this is done to provide optimal performance and full compliance to the uml 1.4 metamodel. the last remark refers to the fact that the uml 1.4 model uses multiple inheritance in several places. this has to be taken into account. p todo the requirements of the metamodel could probably be better determined by reflection on the metamodel. then each association that a deleted element participates in could be reviewed to make sure that it meets the requirements and if not be deleted. tfm p extensions and its children are not taken into account here. they do not require extra cleanup actions. not in the form of a call to the remove method as is normal for all children of mbase and not in the form of other behaviour we want to implement via this operation. param elem the element to be deleted see org.argouml.model.umlfactory delete java.lang.object
DESIGN	do not allow connections to be created from a read only model element to any other todo this should be considered a workaround. it only works because by default we place newly created relationships in the namespace of the fromelement. the correct behavior in the presence of read only elements really depends on the type of connection as well as the writeability of both ends.
DESIGN	todo taken from figclassifierboxwithattribute to handle events on an attribute. all this event handling should eventually be moved to the compartment fig for attributes
DESIGN	an array of valid connections the combination of connecting class and node classes must exist as a row in this list to be considered valid. ul li the 1st column is the connecting element. li the 2nd column is the from element type. li the 3rd column is the to element type. the 3rd column is optional if not given then it is assumed to be the same as the from element. li the existence of a 4th column indicates that the connection is valid in one direction only. ul todo this encodes not only what is legal in uml but also what argouml knows how to create so not all legal connections are included. probably should be split into two pieces 1 legal uml here and 2 supported in argouml application someplace tfm 20060325 p see also issue 3863. p most of these are subtypes of relationship which includes association dependency flow generalization extend and include. dependency includes binding abstraction usage and permission. associationrole and associationclass are associations. the remaining items link transition associationend message are non relationship types which argouml treats as connections edges.
DESIGN	todo check for duplicates is this possible???
DESIGN	todo we also have code registering for the names of a tagged value like derived
DESIGN	recursive method to get all subtypes. todo does this have a scalability problem?
DESIGN	todo bob says we should not be listening here for addition and removal of attributes. this should be done in figattributescompartment.
DESIGN	do not wait on ourselves we will deadlock! todo we might want to throw an exception here
DESIGN	todo must we calculate the whole list?
DESIGN	todo replace this recursive function by a loop like in getroot
DESIGN	updates a compartment box. called from updatelayout if there is a model event effecting the attributes operations and from renderingchanged in all cases. todo the above statement means that the entire contents of the compartments are being rebuilt whenever an add remove of an attribute operation or a reception is detected. it would be better to have compartments listen for add and remove events and make minimum change rather than entirely rebuild. remark mvw this is a bit exaggerated since the populate method is already heavily optimized.
DESIGN	todo reconfigure exception handling to distinguish between errors that are possible due to bad input data and those that represent unexpected processing errors.
DESIGN	todo callers will need to be refactored to work around the change in the way multiplicities work tfm
DESIGN	and its stereotypes todo are not stereotypes handled elsewhere?
DESIGN	todo because we get called on each and every change event when the model is in a state of flux we will often get an invalidelementexception before we finish this collection. the only saving grace is that we are called so many times that on the last time things should be stable again and we will get a good set of elements for the final update. we need a better mechanism.
DESIGN	todo some elements such as generalization are no longer named. for a transitional period we will return a string so debug can continue but the calling code should probably be fixed. tfm 20070607 bob says these are the comments that were in facadeeumlimpl.getname. same trick is needed here for now.
DESIGN	map of which resources are read only. p todo this needs to be managed per editingdomain.
DESIGN	todo mvw would it not be better if this code would go in starttexteditor not overruling mouseclicked . but we made this fig not editable to stop it from reacting on key presses. anyhow this is a hack abusing a figtext gef does not really support double clicking on a fig to trigger some action.
DESIGN	todo does corehelper getextendingclassifiers object element means all direct and indirect extending classifiers or only the direct extending classifiers?
DESIGN	todo this code appears to be designed to jump to the diagram containing the contents of the package that was double clicked but it looks like it is always searching for the name main instead of the package name. todo but in any case it should be delegating this work to to something that knows about the diagrams and they contents tfm
DESIGN	todo what is the behavior of this in the case of nested models?
DESIGN	todo is this returning extended elements or base classes?
DESIGN	todo instancespecification classifier association is not navigable in this direction
DESIGN	a model element has been removed from this packages namespace if the fig representing that model element is on the same diagram as this package then make sure it is not enclosed by this package. todo in my view the fig representing the model element should be removed from the diagram. yet to be agreed. bob.
DESIGN	todo seems to work only with both loops check why.
DESIGN	todo this needs to be double checked. tfm
DESIGN	used by pgml.tee. return the class name and bounds together with compartment visibility. todo is this not duplicate with the parent?
DESIGN	this node cannot be dragged and manipulated in the same way as other fignodes in argouml. it is actually an optional child fig or more precisely a path item of a figedgemodelelement. this allows the dashed edge of an association class to connect the association edge and allows the dashed edge of a comment edge to attach a comment to some other edge type. gef can only attach edges to nodes by making this fig both a node and containing it as a child of an edge we push the rules to allow edge to edge connections. todo we are inheriting a lot of functionality here that we do not really require. we should attempt to make figedgeport extend fignode. author bob tarling
DESIGN	searches for a stereotype just like the given stereotype in all given models and their sub namespaces . the given stereotype can not have its namespace set yet otherwise it will be returned itself! todo this function should not take a stereotype object as parameter but a name and a baseclass. p todo currently only works for stereotypes with only one baseclass. p todo should it only search for stereotypes owned by the model object? param models a collection of models param stereo is the given stereotype return stereotype
DESIGN	finds a stereotype in a given namespace and all those in any sub namespace of the given namespace. returns null if no such stereotype is found. p todo what if stereo.getname or stereo.getbaseclass is null? then you know immediately that none will be found but is that the correct answer? currently null is returned in these cases. p todo this function should not take a stereotype object as parameter but a name and a baseclass. p todo currently only works for stereotypes with only one baseclass. p todo currently only works for stereotypes where the baseclass is equal to the given one inheritance does not work. return the stereotype found or null. param ns is the namespace. param stereo is the stereotype.
DESIGN	creates a uml model element of the given type. this only works for uml elements. if a diagram contains elements of another type then it is the responsibility of the diagram manage those items and not call this method. it also only works for uml model elements that are represented in diagrams by a node. param elementtype the type of model element to build return the model element todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	builds a compositestate as top for some statemachine. p todo confusing name this method should better be named buildtopstateonstatemachine. param statemachine the given statemachine return mcompositestate the newly build top state see buildcompositestate object
DESIGN	todo mvw this needs rethinking rework! i have the following questions why does it not search for a stereotype in the namespace using properties and only create a new stereotype if it will actually be used? ie why is there not a getstereotype string name string baseclass ? edited by d00mst
DESIGN	todo this functionality is in the worn place. we should be able to call setvisible on the compartment itself and then this class should react to that event. improvements will follow in later releases. hence this method should not be considered stable for module developers. param compartment the compartment to be changed param isvisible true if the attribute compartment is visible
DESIGN	todo this should become private and only called from constructor see org.argouml.uml.diagram.ui.figcompartment populate
DESIGN	remove all items in the group otherwise the model event listeners remain todo why does a figgroup not do this?
DESIGN	todo the above populate works but seems rather heavy here. i can see something like this is needed though as events will not manage this quick enough. could we make figeditablecompartment.createmodelelement create the new child fig instance? it may also be useful for it to return the new model element rather than the current void return bob.
DESIGN	todo is this needed correct? for when all compartments are hidden?
DESIGN	this tag is set on elements that are generated by reference when importing. if it is set then the critics could ignore those objects if they want. todo this is really belongs in a higher level utility class that uses the facade s tagged value methods. also it needs to be updated to use a uml 1.4 tagdefinition instead of a simple string.
DESIGN	recognizer for n ary association. todo this is not a recognizer for some type. rename to isnaryassociation? param handle candidate return true if handle is an association
DESIGN	todo is this needed?
DESIGN	builds an interface with a given name. param name is the given name. return interface todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	builds a default implementation for an interface. the interface is not owned by any model element by default. users should not forget to add ownership. return interface todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	check if labels etc have been hit apparently gef does require pathitems to be annotations which ours are not so until that is resolved...
DESIGN	create an empty but initialized instance of a uml templateparameter. return an initialized uml templateparameter instance. todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	builds a default implementation for a class. the class is not owned by any model element by default. users should not forget to add ownership. return newly created class todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml usage. return an initialized uml usage instance. todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml permission. return an initialized uml permission instance. todo this needs an extra parameter to specify the model extent where the new element should be created. deprecated for 0.27.3 by tfmorris. renamed in uml 2.x to packageimport. use link createpackageimport .
DESIGN	create an empty but initialized instance of a uml permission. return an initialized uml permission instance. todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	action to add a stereotype to a model element. todo appears to be unused? author bob tarling deprecated for 0.27.2 by tfmorris. use link org.argouml.uml.actionaddstereotype .
DESIGN	returns the destination of a relation or link. the destination of a relation is defined as the modelelement that receives this relation. if there are more then 1 destinations only the first is returned. if there is no destination null is returned. examples of sources include classifiers that are types to associationends usecases that are bases to extend and include relations and so on. in the case of an association the destination is defined as the type of the second element in the connections list. p todo move this method to a generic modelhelper param relationship is the relation return object
DESIGN	return the source of a relation or link. the source of a relation is defined as the modelelement that propagates this relation. if there are more then 1 sources only the first is returned. if there is no source null is returned. examples of sources include classifiers that are types to associationends usecases that are bases to extend and include relations and so on. a source is always the start from the arrow in the fig the destination the end. p todo move this method to a generic modelhelper param relationship is the relation return object
DESIGN	sets the language of an expression. todo this operation is fooling the user in thinking that the body of the object is changed. instead a new object is created. there is no other way a mexpression can not be altered once created! so this operation returns a newly created object instead. param handle the expression. param language the new language. return the newly created object.
DESIGN	todo having critics actions here introduces an unnecessary dependency on the critics subsystem. have it register its desired actions using an extension mechanism tfm
DESIGN	true if an instance is allowed to be invisible. this is currently only set true by figedgeport. todo figedgeport should be removed from the fignodemodelelement hierarchy and so the need for this removed.
DESIGN	todo we really want this class to have package scope however the reflection
DESIGN	todo there are lots and lots of magic numbers used in calculating positions and sizes. any time you see figs being placed at 10 10 use these constants instead. if you can reliably interpret calculations you can factor them out of there as well. add additional constants as needed to express other common factors tfm 20081201
DESIGN	name is set to the empty string yuck! by default fix it
DESIGN	find a model element in modelelements which name is equal to name. param name the name of the model element to find. it cannot be null. param modelelements the link collection of model elements in which to find a model element with name. return the model element if found or null. todo maybe should be moved to a helper class that deals with model related stuff.
DESIGN	todo we should really set up our own profile instead of depending on the default. this depends on the default profile configuration containing the type integer to test properly. otherwise it will get created in the main project defeating the purpose
DESIGN	called by propertychanged when it detects that a stereotype has been added or removed. on removal the fignode removes its listener to that stereotype. when a new stereotype is detected we add a listener. todo bob says in my opinion we should not be doing this here. figstereotype should always be listening to change of its owners name. figstereotypescompartment should always be listening for add or remove of stereotypes to its owner. those classes will need to pass some event to the fignode on the awt thread only if a change results in a change of size that requires a redraw. p note runs at the model mdr thread p param event the umlchangeevent that caused the change
DESIGN	todo do we want the top level package here instead of the immediate parent?
DESIGN	this is a template method called by the argouml framework as the result of a change to a model element. do not call this method directly yourself. p override this in any subclasses in order to change what model elements the fignode is listening to as a result of change to the model. p p this method is guaranteed by the framework to be running on the same thread as the model subsystem. p todo let us refactor this at some time to take umlchangeevent argument param event the umlchangeevent that caused the change
DESIGN	todo generalize extension and remove critic specific code
DESIGN	todo is this required? why would the fig already be dashed? see org.tigris.gef.presentation.figedge setfig org.tigris.gef.presentation.fig
DESIGN	prevent underline events if underline does not change. todo gef should manage this after gef 0.13.4 is included.
DESIGN	todo generalize extension and remove critic specific stuff
DESIGN	there shall not be a dependency from ... to ...
DESIGN	todo mvw why is this not done in gef?
DESIGN	todo use the following function to have a dropdown set of tools toolbarfactory.additemstotoolbar buttonpanel actions true instead this temporary solution param buttonpanel the toolbar param actions an array of actions representing the tool layout
DESIGN	todo we should not need this reflection any more once we have convinced ourselves that everything with a getitemuid method is implementing iitemuid
DESIGN	todo figure out when this is getting thrown throw new unsupportedoperationexception
DESIGN	constraint this code only deals with 1 supplier per dependency! todo how to support more? see org.argouml.uml.ui.abstractactionaddmodelelement doit java.util.list
DESIGN	todo the namespace of created events is currently the model. i think this is wrong they should be in the namespace of the activitygraph! vec.addall model.getmodelmanagementhelper .getallmodelelementsofkind model.getfacade .getnamespace gettarget model.getmetatypes .getevent
DESIGN	todo the namespace of enlisted events is currently the model. i think this is wrong they should be in the namespace of the activitygraph! vec.addall model.getmodelmanagementhelper .getallmodelelementsofkind model.getfacade .getnamespace gettarget model.getmetatypes .getevent
DESIGN	todo move this in figgroup in gef . param scb the suppresscalcbounds to set.
DESIGN	update the titlelabel mvw this overrules the icon set initiallly... why do we need this?
DESIGN	todo this function attempts to optimize the more generic code in the parent which also works correctly in this case. is this a good idea?
DESIGN	todo 21 12 2008 dthompson mouseclicked me above consumes the mouse event internally so i suspect that this line might not be necessary.
DESIGN	actionaddexistingnode enables pasting of an existing node into a diagram. author eugenio alvarez data access technologies. todo why do we have this class as well as actionaddexistingnodes?
DESIGN	the constructor. todo the name parameter is used for the icon and for the tooltip. this makes i18n of the tooltip impossible. param modeclass the next global editor mode param modeargs arguments for the new mode param name the name of the command that is the tooltip text.
DESIGN	fix up bad figs. p due to errors in earlier releases of argouml it can happen that there is a generalization without a child or parent. p todo move into xsl. we should not remove from the graph model while we are writing to it or we have a possible because of concurrent modification exception. param owner
DESIGN	todo the above does not work reliably in a constructor. we need a better way of getting default fig settings for the owning project rather than using the project manager singleton. tfm
DESIGN	defines the methods to generate source code from the model. each class providing code generation functionality must implement this to be recognized by argouml as a code generator. p todo a gui independent mechanism to pass settings to the code generator is needed similar to what we have for reverse engineering. see link org.argouml.uml.reveng.importinterface getimportsettings and link org.argouml.uml.reveng.settingstypes since 0.20 when it replaced the filegenerator interface.
DESIGN	todo this creates a dependency on the critics subsystem. we need a generic way for modules including our internal subsystems to request addition of actions to the popup menu. tfm 20080430
DESIGN	changes the font for all figs contained in the given figgroup. p todo in fact there is a design error in this method e.g. for a class if the name is italic since the class is abstract then the classes features should be in plain font. this problem can be fixed by implementing the updatefont method in all subclasses. param fg the figgroup to change the font of.
DESIGN	hack do not show first column where the model element object is placed.
DESIGN	todo it does not matter what these get set to because gef cannot draw anything except 1 pixel wide lines
DESIGN	todo workaround for gef redraw problem force all child figs into the same layer
DESIGN	this should not be looking for a namedelement since this is not always about the name of this modelelement alone.
DESIGN	p determines if the figedge is currently connected to the correct fignodes if not the edges is the correct fignodes set and the edge rerouted. p typically this is used when a user has amended from the property panel a relationship from one model element to another and the graph needs to react to that change. p e.g. if the participant of an association end is changed. p calls a helper method layoutthistoself to avoid this edge disappearing if the new source and dest are the same node. todo this method is called far too frequently. it should only be called when a specific event is received. it seems to be currently called whenever any event is received from the owner. return boolean whether or not the update was sucessful
DESIGN	todo this class should be moved to package org.argouml.uml.ui.behavior.common behavior
DESIGN	todo dependency cycle between fignodemodelelement and figedgeme is this needed? if so introduce a removable interface to decouple
DESIGN	figmycircle is a figcircle with corrected connectionpoint method this methods calculates where a connected edge ends. p todo once we are at gef version 0.13.1m4 this whole class can be removed since it was taken over by gef.
DESIGN	compute the border point of the ellipse that is on the edge between the stored upper left corner and the given parameter. p todo once we are at gef version 0.13.1m4 this method and in fact the whole class can be removed since it was taken over by gef in revision 1279. param anotherpt the remote point to which an edge is drawn. return the connection point on the boundary of the ellipse.
DESIGN	class to display graphics for n ary association association node i.e. the diamond. p todo improve the location of the stereotypes! author pepargouml yahoo.es
DESIGN	the constructor. todo the name parameter is used for the icon and for the tooltip. this makes i18n of the tooltip impossible. param modeclass the next global editor mode param arg the name of a new argument for the new mode param value the value of a new argument for the new mode param name the name of the command that is the tooltip text.
DESIGN	todo can we find a better way to do this than hard coding colour?
DESIGN	todo send an event instead of calling explorer directly
DESIGN	sets the target of the property panel. the given target t may either be a diagram or a modelelement. if the target given is a fig a check is made if the fig has an owning modelelement and occurs on the current diagram. if so that modelelement is the target. deprecated as of argouml version 0.13.5 the visibility of this method will change in the future replaced by link org.argouml.ui.targetmanager.targetmanager . todo mvw i think this should not be deprecated. param target the new target see org.argouml.ui.tabtarget settarget java.lang.object
DESIGN	todo this needs to use a different method than that used by the constructor if it wants to allow the method to be overridden
DESIGN	todo can we delegate this to a specialist figname class?
DESIGN	todo replace magic numbers with constants
DESIGN	information about a source unit and its content whether it exists only in memory or it is stored in a file. todo making this an interface instead of a class would allow more flexibility in dealing with non file based resources. tfm author aslo
DESIGN	todo without the null check the following throws a npe so many times when it is called from figedgemodelelement.modelchanged we need to think about it.
DESIGN	todo this should be managed by the detailspane targetlistener tfm remove the following line
DESIGN	todo this cannot depend on projectbrowser. it needs to get the current drawing area from the diagram subsystem or gef
DESIGN	create the main draggable label for the association. this can be overridden in subclasses to change behaviour. todo consider introducing this to figedgemodelelement and using throughout all edges. param owner owning uml element param settings rendering settings
DESIGN	mvw for this case i have to move the call to setselecteditem outside the buildingmodel otherwise the combo does not update with the new selection. the same does probably apply to the cases above!
DESIGN	the fig for a permission which is a form of dependency. p todo in uml 2.x the import and access permissions have become packageimports with public visibility and non public visibility respectively. argouml only supports the import permission currently . the friend permission has been dropped. also the type hierarchy has been reorganized so that packageimport is not a subtype of dependency. author markus klink
DESIGN	todo how does the pressed cancel become a java.lang.exception?
DESIGN	action to trigger code generation for one or more classes. p in fact only all named classes and interfaces on the active diagram are generated. or if this delivers an empty collection all selected classes interfaces and the contents of selected packages are generated independent if they are named or not . p todo implement a more logical behaviour.
DESIGN	todo bob says if the model element is not named we could generate a name. e.g. a generalization becomes class a class b
DESIGN	hack to make sure that the right height is applied when no icon is used.
DESIGN	todo this should be more extensible... may be only findpanelfor target if there is a panel why not show it?
DESIGN	utility function to localize the given string with help text and show it in the status bar of the argouml window. this function is used in favour of the inline call to enable later improvements e.g. it would be possible to show a help balloon. p todo this code is also present in other root figs... param s the given string to be localized and shown
DESIGN	add a concurrent region to a concurrent composite state p this action can be executed with either the composite concurrent state selected or one of its concurrent regions. p todo move all the magic numbers to constants author pepargouml yahoo.es
DESIGN	todo improve extensibility of this!
DESIGN	todo make the magic numbers configurable
DESIGN	helper method for changeconnectednode. todo this should probably be in superclass. associations can be on several diagram types.
DESIGN	returns the current target. deprecated as of argouml version 0.13.5 the visibility of this method will change in the future replaced by link org.argouml.ui.targetmanager.targetmanager gettarget targetmanager.getinstance .gettarget . todo mvw i think this should not be deprecated. return the target see org.argouml.ui.tabtarget gettarget
DESIGN	reroutes the connection to the old node to be connected to the new node. delegates to reroutexxx for each of the 4 possible edges in a class diagram association dependency generalization link. todo this should probably be in superclass. many figs can be on several diagram types. param newnode this is the new node that one of the ends is dragged to. param oldnode this is the existing node that is already connected. param edge this is the edge that is being dragged rerouted param issource tells us which end is being rerouted.
DESIGN	todo there is a cyclic dependency between selectionrerouteedge and figedgemodelelement
DESIGN	prevent bold events if bold does not change. todo gef should manage this after gef 0.13.4 is included.
DESIGN	todo this should not know about the specific type of fig that is being displayed. that couples it too strongly to things it should not need to know about tfm 20070924
DESIGN	todo this is a temporary method of making sure the model is updated on loss of focus of a combo box. in the long term we should attempt to update the model on each keypress. see java.awt.event.focuslistener focuslost java.awt.event.focusevent
DESIGN	the model for the table with the tagged values. implementation for uml 1.4 and tagdefinitions. todo this currently only supports taggedvalues with a tagdefinition which has a type of string.
DESIGN	todo use our extension registration mechanism for our internal classes as well so everything is treated the same
DESIGN	todo we should really be passing the default settings to the diagram factory so they get set at creation time
DESIGN	idem e.g. for a generalization with leaf root object todo but showing the message in the statusbar would help todo illegalargumentexception should not be used for events we expect to happen. we need a different way of catching well formedness rules.
DESIGN	the connect method specifying a connection type by class is unavailable in the argouml implementation. todo this should be unsupported. use the 3 object version inheritdoc
DESIGN	todo we would like these to not be filled but gef will not let us select them if we do that. setfilled false
DESIGN	gef methods todo these should really be picked up automatically from some gef interface that we extend but there is no such thing. note we have only added methods used by argouml so it is possible that external consumers need other methods.
DESIGN	abstract class that is the parent of all actions adding diagrams to argouml. the children of this class should implement creatediagram to do any specific actions for creating a diagram and isvalidnamespace that checks if some namespace is valid to add the diagram to. p argouml shall never create a diagram for a read only modelelement. p todo this class should be merged with actionnewdiagram. author jaap.branderhorst xs4all.nl
DESIGN	todo mvw i am not completely sure of the following p the namespace of the diagram is e.g. used when creating new elements that are shown on the diagram they will have their namespace set according this. it is not necessarily equal to the owner . return the namespace for the diagram
DESIGN	todo use default value of appropriate type here
DESIGN	set the fig style according to attributes. p todo this is never used! can we remove? param fig the fig to style. param attributemap a map of name value pairs
DESIGN	we hang our heads in shame. there are still bugs in argouml and or gef that because corruptions in the model. before a save takes place we repair the model in order to be as certain as possible that the saved file will reload. todo split into small inner classes for each fix. return a text that explains what is repaired.
DESIGN	todo the reference to the method org.argouml.uml.ui.vetoablepropertychange getvetomessage string was here but the class does exist anymore. where is it? this method is never used! param propertyname is the name of the property return a message or null if not applicable.
DESIGN	execute this action from the command line. todo the underlying gef library relies on acme that does not allow us to create these files unless there is a window showing. for this reason i have had to split the performing of commands in link org.argouml.application.main main string so that we can by not supplying the batch option run these commands with the window showing. hopefully this can eventually be fixed. see org.argouml.application.api.commandlineinterface docommand string param argument is the file name that we save to. return true if it is ok.
DESIGN	todo associationclasses fit both of the next 2 cases
DESIGN	needed?
DESIGN	todo we can probably use this instead of all of the above legacy uml 1.3 code tfm 20070915
DESIGN	see java.beans.propertychangelistener propertychange java.beans.propertychangeevent todo this should be reviewed to see if it can be improved with a view towards removing some of the overrriding methods used as workarounds for differences between nsuml and mdr tfm 20060302
DESIGN	todo fonts should not be handled any differently than other rendering attributes
DESIGN	todo no one should be sending the deprecated event from outside argouml but keep responding to it for now just in case
DESIGN	forwards this event to the tree model. param element the modelelement to be added todo this should not be public. components desiring to inform the explorer of changes should send events.
DESIGN	todo this should not need to know about projectsettings tfm
DESIGN	todo why cannot we use actionaddexistingnodes here? bob.
DESIGN	todo we would like to test this in its new guise as packageimport but we do not have a good way to do it currently
DESIGN	constraint this code only deals with 1 supplier per dependency! todo do we need more? see org.argouml.uml.ui.abstractactionaddmodelelement doit java.util.list
DESIGN	todo make the explorer listen to project member property changes... to eliminate coupling on gui.
DESIGN	abstract action to trigger creation of a new diagram. p argouml shall never create a diagram for a read only modelelement. p todo bobs says can we merge actionadddiagram with this class? author michiel
DESIGN	first of all let us set up the duplicate hash. this hash contains all the duplicate key for another key. todo every duplicate.put is done twice but how to avoid this?
DESIGN	todo this should get the containing project from the list of targets not from some global
DESIGN	todo bob says this is a really nasty horrible hack. shadowfig should not extend fignodemodelelement. instead we require a base class fignode with common behaviour of all nodes in argouml. shadowfig should extend that and fignodemodelelement should extend that same base class adding common functionality for fignode that represent model element. see org.argouml.uml.diagram.ui.fignodemodelelement setshadowsize int
DESIGN	a window that displays an exception to the user if we cannot handle it in any other way. todo this has been partly converted to be a generic error dialog rather than something specific to exceptions. this should be renamed when that process is complete.
DESIGN	todo do not use hardcoded colors here tfm
DESIGN	todo will not our use of pathcomparator take care of uniqueness?
DESIGN	author jaap.branderhorst xs4all.nl since jan 29 2003 todo for uml 2.x this needs to be changed to just a toggle which represents readonly frozen or not changeable .
DESIGN	save the project. param file the file to save to param pmw the progressmonitor to be updated return true if successful todo separate this into a swing specific class tfm
DESIGN	work in progress here to allow multiple details panes with different contents bob tarling
DESIGN	todo should fire its own event and projectbrowser should register a listener
DESIGN	this is the main class for the gui subsystem. p users of the gui subsystem i.e. components that are to place themselves in any of the gui components register themselves in this class. p todo add the rest of the registers to this. author linus tolke since 0.21.3
DESIGN	the constructor. p todo is this constructor used? what is the purpose with it? param n the name to be localized param subs the go rules
DESIGN	todo the following is mdr specific. we need something generic to all model subsystems tfm 20070716
DESIGN	todo we should not need this reflection any more once we have convinced ourselves that everything with a setitemuid method is implementing iitemuid
DESIGN	todo support nested let expressions !
DESIGN	this is needed for a commentedge ... todo why does not commentedge implement iitemuid and be handled with the mechanism above.
DESIGN	sets the directory name where the profiles can be found. initially uml14 is used. todo intermediate solution for uml 2.x support please implement a better solution. param dir name of the directory for the profiles
DESIGN	todo this is in the wrong place. it is not profile specific. it needs to be moved to main xmi reading code. tfm 20060326
DESIGN	this can be made public to allow others to extend their own persisters
DESIGN	once all edges are connected do a compute route on each to make sure that annotations and the edge port is positioned correctly only do this after all edges are connected as compute route requires all edges to be connected to nodes. todo it would be nice not to have to do this and restore annotation positions instead.
DESIGN	todo move to gef
DESIGN	param project the argouml link project to save in file. param file the link file in which an argouml link project will be persisted. return the persister used and usable for file. throws saveexception if saving the file goes wrong. throws interruptedexception if an interrupt occurs while saving. todo move this to an helper class.
DESIGN	todo this whole class needs to be updated to remove use of deprecated methods and hopefully test multi root and multi project methods. since nov 17 2002 author jaap.branderhorst xs4all.nl
DESIGN	method 2 assign data immediately see end of file . todo if we ever want to extend pathitemplacement we should modify this so that we also recognise any subclass of pathitemplacement. is the class name a pathitemplacment? todo use class reference to make this dependency obvious
DESIGN	todo there are cyclic dependencies between actionstereotypeview and fignodemodelelement. register these actions opaquely since we do not what they are. tfm
DESIGN	todo do we care?
DESIGN	todo break into 3 main member types model diagram and other
DESIGN	get an link abstractfilepersister for file. param file the link file in which an argouml link project will be persisted. return the appropriate persister for file or null if the file s extension does not match a supported persister. todo move this to an helper class.
DESIGN	finds a type in a model by name fixme duplicated from the method with the same name in org.argouml.profile.internal.modelutils. param s the type name param model the model return the type or code null code if the type has not been found.
DESIGN	this class manages the projects loaded in argouml and what the current project is. p classes in argouml can ask this class for the current project and set the current project. since we only have one project in argouml at the moment this class does not manage a list of projects like one would expect. this could be a nice extension for the future of argouml. as soon as the current project is changed a property changed event is fired. p todo move everything related to the creation of a project into the projectfactory. since nov 17 2002 author jaap.branderhorst xs4all.nl stereotype singleton
DESIGN	todo is this used in places other than on diagrams? if so it needs to stay in projectsettings as well as being a diagramsetting . return returns code true code if we show stereotypes in the explorer
DESIGN	throws saxexception when things go wrong with sax throws ioexception when there is an io error throws parserconfigurationexception when the parser finds wrong syntax todo unused?
DESIGN	since this is hopefully a temporary solution and nobody ever looks at the type of notation event we can simplify from sending every existing event to one event only. but since there is no catch all event defined we just make one up. rationale reduce the number of total refreshes of the drawing.
DESIGN	prefix identified as an implementation specific class. todo this should be generalized so it does not have to be changed each time a new implementation is created tfm 20051109
DESIGN	todo this is temporary. we need a new list for uml 2.x the following uml 1.4 elements are not in uml 2.x
DESIGN	todo this is currently just a mechanical merge of the tests in from the generic model test and the nsuml tests. they need to be reviewed merged. author euluis since 0.19.2 version 0.00
DESIGN	finds a classifier with a certain name. p will only return first classifier with the matching name. todo move to model subsystem tfm 20070307 param s is short name. param ns namespace where we do the search. return the found classifier or code null code if not found .
DESIGN	the uml 2.x package structure is entirely different so we have to remap a bunch of stuff. names without embedded colons indicate that the entire package is remapped. e.g. kernel core as a matter of fact the only package which did not get renamed or moved is usecases. todo this section is very incomplete. tfm
DESIGN	set the uri for this project. p do not use this directly! use instead link org.argouml.persistence.persistencemanager setprojecturi uri project p todo why is not this deprecated or private if it is not to be used? param theuri the uri to set.
DESIGN	todo projectbrowser does not need to mediate this conversation use an event listener in the todopane to communicate instead. tfm
DESIGN	the project interface encapsulates all information about a designer s project. it contains the list of diagrams and uml models various project properties such as the author s name and defaults for various settings. p todo this interface was mechanically refactored from the implementation class link projectimpl . it needs to be reviewed and cleaned up eliminating methods which should be part of the public api and splitting the interface into smaller function specific e.g. trashcan interfaces. author tom morris tfmorris gmail.com thomas neustupny since 0.25.4 when it replaced the concrete class of the same name
DESIGN	todo this should listen for new target events fired by wizstep.updatetabtodo so that we can decouple it from the projectbrowser.
DESIGN	todo should fire its own event and projectbrowser todo should register a listener
DESIGN	agency manages critics. since classes are not really first class objects in java a singleton instance of agency is made and passed around as needed. the agency keeps a registry of all critics that should be applied to each type of design material. when a design material instance is critiqued it asks agency to apply all registered critic s. in the current scheme there is a thread that proactively continuously critiques the design at hand even if the user is idle! this is simple and it works. the disadvantage is that all active critics related to a given design material are applied regardless of the reason for the critiquing and a lot of cpu time is basically wasted. p todo i am moving toward a more reactionary scheme in which specific design manipulations in the editor because critics relevant to those manipulations to be applied. this transition is still half done. triggers are the critiquing requests. the code for triggers is currently dormant latent? . p todo there is a strong dependency cycle between agency and designer. they either need to be merged into a single class or partitioned differently perhaps using an interface to break the cycle. the designer singleton gets passed to almost every single part of the critic subsystem creating strong coupling throughout. tfm 20070620 author jason robbins
DESIGN	reply true iff this critic is relevant to the goals that the designer is trying to achieve. by default all critic s are relevant regardless of the goalmodel. really this is something for a controlmech to compute but if a subclass of critic encapsulates some information you may need to override this method. p todo i would like a better default action but goals are typed and their values must be interpreted by critics. they are not as generic as the decisionmodel. param dsgr the designer return true if relevant
DESIGN	todo this is a hack. a much better way of doing this would be not to start the critic in the first place.
DESIGN	return true iff the given todoitem is still valid and should be kept in the given designers todolist. critics that are not enabled should always return false so that their todoitems will be removed. subclasses of critic that supply multiple offenders should always override this method. p by default this method basically asks the critic to again critique the offending object and then it checks if the resulting todoitem is the same as the one already posted. this is simple and it works fine for light weight critics. critics that expend a lot of computational effort in making feedback that can be easily check to see if it still holds should override this method. p todo maybe todoitem should carry some data to make this method more efficient. inheritdoc
DESIGN	the decisionmodel is part of the state of the designer. it describes what types of decisions or design issues the designer is thinking about at the current time. critics that are relevant to those decisions are made active critics that are not relevant are made inactive. todo there is some notion that each decision has a certain importanance at a certain time but i have not followed through on that because i do not have good examples of how to quantify the importance of a decision. todo right now the individual decisions are just strings maybe they should have some non atomic structure? author jason robbins
DESIGN	how much control should critics have over when they are relavant? does doing that in code instead of declaratively limit reasoning? how does using more semantically rich method calls impact componentization?
DESIGN	this class models the designer who is building a complex design in some application domain and needs continuous feedback to aid in the making of good design decisions. p strong this area needs work especially as it is a central idea of argo. strong p currently almost everything is hardcoded. what can be configurable?? p the todolist is dependent on this class i.e. each designer has its todolist. p each designer has his own agency which is the only class that knows all the critics. p this class listens to property changes from ...? p a designer can create todo items just like the critics. hence the designer implements the poster interface. p todo there is a strong dependency cycle between agency and designer. they either need to be merged into a single class or partitioned differently perhaps using an interface to break the cycle. the designer singleton gets passed to almost every single part of the critic subsystem creating strong coupling throughout. tfm 20070620 author jason robbins
DESIGN	return the default type for a parameter. return a classifier to use as the default type todo this belongs in projectsettings. tfm
DESIGN	todo at the moment setselectedcomponent does not take into account the rather complex tab selection mechanism of detailspane. the tab selection mechanism must be refactored.
DESIGN	todoitems that the designer has explicitly indicated that s he considers resolved. p todo generalize into a design rationale logging facility.
DESIGN	todo settext in gef should call setbounds instead of directly changing x y w h then we will have an event generated correctly in gef
DESIGN	handle firing a notation event. p todo this needs to be managed on a per diagram or per project basis. param event the event to be fired. param listener the listener.
DESIGN	indicates the end of the range for notation events. p todo remove this not used anyway. return the last id reserved for events.
DESIGN	handle firing a diagram appearance event. p todo this needs to be managed on a per diagram or per project basis. param event the event to be fired. param listener the listener.
DESIGN	todo this is currently duplicated from metadatacache must find a common place in model facade
DESIGN	todo once we have fixed all subclasses the title will always be localized so this localization can be removed.
DESIGN	andreas this is just temporary for the uml2 pre alpha versions.
DESIGN	sets the body of an expression. todo this operation is fooling the user in thinking that the body of the object is changed. instead a new object is created. there is no other way a mexpression can not be altered once created! so this operation returns a newly created object instead. param handle the expression to modify. param body the body to set. return the newly created expression.
DESIGN	todo this should happen in gef
DESIGN	todo remove listeners for add remove events
DESIGN	prevent italic events if italic does not change. todo gef should manage this after gef 0.13.4 is included.
DESIGN	todo move an empty implementation to figgroup in gef
DESIGN	todo note copy paste code in figentrypoint where is this code better placed in gef?
DESIGN	!! todo all code below here is duplicated in figbasenode. the reason is the gef defect http gef.tigris.org issues show bug.cgi?id 358 once we have taken a release of gef with that fix we can remove this code.
DESIGN	todo move magic number 10 to descriptive constant
DESIGN	mode to create a link between two figclassifierroles. todo provide a modefactory and then this class can become package scope. author penyaskito
DESIGN	mark the contain figpoly as complete. todo i think more work is needed in gef to either do this automatically when both ends are set or at the very least give a setcomplete method on figpolyedge that calls its contained poly
DESIGN	todo this should not be hardcoded 20 is the height of the spline 50 is the default activation height
DESIGN	todo remove the casting to diagramfactoryinterface2 as soon as diagramfactoryinterface is removed.
DESIGN	todo move the magic number 4 to a descriptive constant
DESIGN	brooms all the message which y coordinate is upper than the position of the broom. todo provide a modefactory and then this class can become package scope. author penyaskito
DESIGN	todo note copy paste code in figexitpoint where is this code better placed in gef?
DESIGN	this is a temporary hack until the notation provider for a sd message will be able to parse successfully when the sequence number is missing. remove this method completely then.
DESIGN	todo calcbounds is called by selectionmanager when the fig is dragged. this code is needed to reposition any self message as they are become detached from their classifier role see issue 5562 . the because of the detachment is not yet understood. unfortunately calcbounds is called from several other places so the code here is not optimal but is the best workaround until argouml can provide its own replacement selectionmanager for sequence diagram requirements see http gef.tigris.org issues show bug.cgi?id 344
DESIGN	the default behaviour from figedgemodelelement is not correct here. see issue 5005. todo we must determine what to do here but for now doing nothing is better. I am not sure why the super method would not work as i would expect that to do nothing if the ends are already correct. return true at all times for now
DESIGN	create an empty but initialized instance of a uml parameter. return an initialized uml parameter instance. todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	convert to bounding box very screwy! gef sometimes uses center and sometimes upper left todo gef also positions text at the nominal baseline which is well inside the bounding box and gives the overall size incorrectly
DESIGN	this is the interface for registering interest in events sent from the model component. p neither the registration or unregistration nor the events themselves contain any reference to the model implementation. instead they use the link java.beans.propertychangelistener link java.beans.propertychangeevent to deliver events. p the reference to the listener is a weakreference so you do not need to call removewhateverlistener you can just forget about your listener and it is eventually finalized and removed. this also means that you will have to keep a reference to your listener while it is active. since the garbage collecting mechanism is not really deterministic a forgotten about listener might still receive events. unless it can handle them in a harmless way this approach should not be used. todo is this still true or does it refer to the nsuml implementation? tfm 20051109 this is part of the contract that is established between the model subsystem and its users. if that is not fulfilled by the current implementation then the current implementation is incorrect. linus 20060411 . p todo what event names? the event names generated are link string s and their values and meanings are not really well documented. in general they are the name of an an association end or attribute in the uml metamodel. p here are some highlights ul li remove event sent when the element is removed. ul author linus tolke
DESIGN	create an empty but initialized instance of a uml method. return an initialized uml method instance. todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml binding. return an initialized uml binding instance. todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	returns names of all metamodel value elements including datatypes enumerations and primitive types. todo this method rightly belongs in a separate interface dealing with instances of mof types as opposed to uml types like all the rest of the methods here do. return collection containing strings with names of all metatypes
DESIGN	returns names of all metatypes in metamodel. todo this method rightly belongs in a separate interface dealing with instances of mof types as opposed to uml types like all the rest of the methods here do. return collection containing strings with names of all metatypes
DESIGN	create an empty but initialized instance of a uml class. return an initialized uml class instance. todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml associationclass. return an initialized uml associationclass instance. todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	create an empty but initialized instance of an artifact since uml 1.4 return an initialized artifact instance. todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml associationend. return an initialized uml associationend instance. todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml abstraction. return an initialized uml abstraction instance. todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml attribute. return an initialized uml attribute instance. todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml operation. return an initialized uml operation instance. todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml datatype. return an initialized uml datatype instance. todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	called by the constructor to create the figs at each end of the association. todo this is temporary during refactoring process. we should override setdestfignode and setsourcefignode and create the ends there. that will allow the same pattern to work for uml2 where we cannot assume the connection order. param sourceassociationend param destassociationend param settings
DESIGN	add a new package at the top level i.e. a model. p todo argouml currently only supports one model.
DESIGN	create an empty but initialized instance of a uml comment. return an initialized uml comment instance. todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml dependency. return an initialized uml dependency instance. todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml component. return an initialized uml component instance. todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml constraint. return an initialized uml constraint instance. todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	create an enumerationliteral. return object new enumeration since uml 1.4 todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml elementresidence. return an initialized uml elementresidence instance. todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	todo in uml 2.0 classifierrole associationrole and associationendrole have been replaced by the internal structure of the collaboration
DESIGN	create an empty but initialized instance of a uml interface. return an initialized uml interface instance. todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	create an empty but initialized instance of a uml flow. return an initialized uml flow instance. todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	create a uml primitivetype. since uml 2.1.1 return an initialized uml primitive instance. todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	builds a manifestation of an element for an artifact. param utilizedelement is the packageable element return manifestation todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	create a uml templateargument. since uml 1.4 return an initialized templateargument instance. todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	this checks the order in addition to the contents is that really what we want here? tfm 20070603
DESIGN	builds a class with a given name. param name the given name return class see buildclass todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	builds a method with a given name. param name is the given name return method todo this needs an extra parameter to specify the model extent where the new element should be created.
DESIGN	todo find a way to replace this dependency on project
DESIGN	recognizer for primary objects. a primary object is an object that is created by the parser or by a user. object that are created as a side effect of importing some other object are not. p todo this does not belong in the facade. it is a higher level function used specifically for certain reverse engineering operations. tfmorris param handle candidate return true if primary object.
DESIGN	todo this is a temporary crutch to use until all figs are updated to use the constructor that accepts a diagramsettings object
DESIGN	recognizer for parameter s with a directionkind of return. todo this is a duplicate of link hasreturnparameterdirectionkind object param handle candidate parameter return true if handle is a return parameter.
DESIGN	recognizer for modelelements with package visibility. todo this method name was chosen for compatibility with the existing naming scheme but has the potential of clashing with some future use. param handle candidate return true if handle has package visibility
DESIGN	recognizer for modelelements which have the singleton stereotype applied. p todo moved this out of the facade to someplace elese since it is not model subsystem specific tfm 20070607 param handle candidate return true if handle is a singleton.
DESIGN	this should be moved to a ui action.
DESIGN	return the tagged value with a specific tag. p warning this method returns only the first taggedvalue found with the given name. hence this method is a simplification of the real problem and should be avoided. todo what should be done about the above problem? options are to deprecate the method throw an exception if the name is ambiguous or leave the caller to figure it out themselves. param handle the model element the tagged value belongs to. param name the tag name. return the found tag null if not found
DESIGN	todo some of these magic numbers probably assume a line width of 1. replace with appropriate constants variables.
DESIGN	todo this needs to be managed on a per project or per model extent basis
DESIGN	returns all states that can be recursively contained by the given state. p todo link getallpossiblesubvertices object and link getallsubstates object are duplicates as implemented for mdr. it is not clear from the javadoc or usage whether they should do different things or this just happened because no one noticed we already had another method. param ostate the composite state we are searching the states for return collection the collection with found states
DESIGN	add a path to the list of paths to be searched when looking for xmi files to resolve external references with. the list is maintained in a static structure shared by all instances. p todo it is desirable to have separate search paths for separate files but more work is required in argouml so that it knows how to maintain separate contexts for the profiles and user models. param path a directory path to add to the search path
DESIGN	the buttons on selection for a stereotype. p todo find a way to hide the operationscompartment on the figclass of the created metaclass. author michiel
DESIGN	a changecommand that updates its label. p the label of this command can contain the character that will be replaced with information about an object when the label is returned. p todo switch this to use java string formatting instead of private notation? author bogdan pistol
DESIGN	todo this is probably related to the sendevent that is sending the signal but the association is not navigable in that direction
DESIGN	todo see if protected or need to be present in each subclass
DESIGN	todo we do not want to do this once we have dropped uml1.3 map uml 1.4 names to uml 1.3 equivalents
DESIGN	todo comment by a rueckert i do not think it makes much sense to query interactions from a collaboration in uml2 since this diagram does no longer exist and an interaction means something different in uml2.
DESIGN	todo comment by a. rueckert a rueckert gmx.net i think the handle holding the collaboration implementation should rather be a collaborationuse in uml2. but as a workaround for now I will try to get a collaboration representation collaborationuse and then try to get the owning classifier from there...
DESIGN	todo this probably cannot be implemented in a way that will make the uml 1.4 ui happy. needs to be generalized to uml 2 semantics.
DESIGN	todo what do we want to use as an equivalent here?
DESIGN	todo is there an option we can use to save our argouml version?
DESIGN	todo just a guess probably not right tfm return handle instanceof linkenddata
DESIGN	todo the uml 1.4 concept of a multiplicity multiplicity range has been replaced by a single element
DESIGN	todo not sure the semantics are an exact match here between uml 1.4 aggregate and uml 2.x shared.
DESIGN	todo changed in uml 2.x to special type of property?
DESIGN	todo tagdefinitions are gone from uml 2 they are now properties of stereotypes
DESIGN	todo moved this out of the implementation specific piece tfm everything is primary for now ie not reverse engineered
DESIGN	this keeps track of the editing domain that is used to track all changes to the model. p todo this probably needs to be a set of editingdomain so that we can manage an editingdomain per project.
DESIGN	todo this method is mostly entirely? redundant tfm
DESIGN	todo actionstate callstate and subactivitystate have been replaced in uml 2.0 by explicitly modeled actions
DESIGN	todo this does not belong in the implementation specific piece tfm
DESIGN	todo the javadoc specifies that null should be returned if from or to are null or if there are no associations between them. we should return an empty collection instead and the javadoc should be changed.
DESIGN	todo this is not right
DESIGN	todo support more than one body language
DESIGN	todo does corehelper getextendedclassifiers object element means all parents direct and indirect or only the direct parents?
DESIGN	todo what is the purpose of this? why do we hide buttons here? presumably if so we should not assume selectionclass
DESIGN	todo we currently delete the old values before setting to something new. this is a workaround to issue 6056. we should consider giving an api to get the lower and upper values so that controls can listen directly to those rather than the element containing those values.
DESIGN	todo in uml2.x event has no parameters. the event metaclass in uml1.x corresponds to the trigger metaclass in uml2.x see uml superstructure page 456 .
DESIGN	todo this should be built by reflection from the metamodel tfm update for uml 2.x metamodel if not replaced by reflection
DESIGN	do not implement deprecated method in interface.
DESIGN	todo booleanexpresion is removed from uml2.x is it ok to use valuespecification?
DESIGN	todo this will need to be adapted to send undo redo commands back to our consumer e.g. argouml if a new undo mechanism is implemented for the model subsystem tfm
DESIGN	this sets up the editing domain for the model editor. todo we probably need an editingdomain per argo project so that we can keep the resourcesets separate.
DESIGN	todo model implementation independent
DESIGN	todo remove? cannot be localized
DESIGN	todo do we really want stereotypes from nested packages?
DESIGN	todo is this removed from uml2 ?
DESIGN	an array of valid connections the combination of connecting class and node classes must exist as a row in this list to be considered valid. ul li the 1st column is the connecting element. li the 2nd column is the from element type. li the 3rd column is the to element type. li the 3rd column is optional if not given then it is assumed to be the same as the to element. li the existence of a 4th column indicates that the connection is valid in one direction only. ul todo this encodes not only what is legal in uml but also what argouml knows how to create so not all legal connections are included. probably should be split into two pieces 1 legal uml here and 2 supported in argouml application someplace tfm 20060325 p most of these are subtypes of relationship which includes association dependency flow generalization extend and include. dependency includes binding abstraction usage and permission. associationrole and associationclass are associations. the remaining items link transition associationend message are non relationship types which argouml treats as connections edges.
DESIGN	workaround for missing ability to parse
DESIGN	todo can we get this info from uml2 plugin? perhaps collect all references in the metamodel filter for those which represent containments and find the types on either end tfm
DESIGN	todo use getmodelelementcontainer for transition
DESIGN	todo we should not actually have to do all this work
DESIGN	todo hook this creating of a new resource in to someplace more more appropriate perhaps createmodel ? better yet add a new method to model api to create a new top level project model xmi file so we do not depend on side effects
DESIGN	todo check for resource to hold this and create if necessary? this is a discrepancy between mdr which does it here and euml which does it as part of setrootmodel
DESIGN	todo get setrootmodel are not specific to the model implementation they could probably be moved elsewhere tfm 20070530
DESIGN	i think that the synchronized access to idtoobjectmaps is required in order to respect the thread safe nature of the object. fixme maybe this should be moved into xmireferenceresolverimpl because it depends on internal implementation details of it.
DESIGN	todo we can choose between something which matches uml 1.4 in name or something that matches in functionality. we have chosen functionality for now but this will create a name conflict during the migration process. tfm
DESIGN	todo change to throw exception when uses are fixed throw new notimplementedexception non nls 1
DESIGN	a near clone of this code works fine outside of argouml but throws a null pointer exception during the transform when run within argouml i think it is something to do with the class libraries being used but i cannot figure out what so I have done a simpler less efficient stepwise translation below in serialtransform
DESIGN	todo bob says coding by use of side effect here. maybe this should be done in a clearer way but it fixes http argouml.tigris.org issues show bug.cgi?id 4978 it seems that when loading an xmi that is not contained in a zip file then the inputstream given as the argument to this method cannot be reused as it is at the end of the stream. in that case systemid appears to be none null at this stage. so if systemid is not null we recreate the inputsource.
DESIGN	create temporary file for output todo we should be able to chain this directly to xmi reader
DESIGN	xmiwriter implementation for mdr. this implementation is clumsy because the specified writer interface wants characters while the xmiwriter wants an outputstream dealing in bytes. we could easily create a writer from an outputstream but the reverse is not true. todo the old writer based interface can be removed when the deprecated modelimplementation.getxmiwriter is removed. author lmaitre
DESIGN	todo return empty collection on null input or throw illegalargument?
DESIGN	todo doing this violates the minimal cardinality of 1 if we allow it we at least need a critic to warn about it
DESIGN	apply profile stereotype to make it a profile our convention hack create that stereotype instead using the uml 1.4 profile
DESIGN	if systemid is a valid url simply use it. todo this causes a network connection attempt for profiles
DESIGN	todo make this work when the given stereotype has more than one baseclass. todo currently only works for stereotypes where the baseclass is equal to the given one inheritance does not work.
DESIGN	todo this should call the single namespace form getstereotype it2.next stereo
DESIGN	todo still not used because in argouml string is hardwired
DESIGN	todo mvw do we really look into super types of the stereotype or should we be looking into super types of the baseclass?
DESIGN	todo using just the last piece of the id leaves the potential for name collisions if two linked files have the same name in different directories
DESIGN	todo this should use a minimal update strategy instead of removing all and then adding all tfm 20070806
DESIGN	todo what type of validation can we do here on tagtype?
DESIGN	todo this can be simplified to just include extend .setbase usecase base
DESIGN	anything not found is newly created so return a null systemid indicating that it is in the parent document. todo this assumption will be invalid if when we allow editing of linked sub models
DESIGN	todo distinguish between deferred resolution and things which are unresolved at end of load and should be reported to user.
DESIGN	todo is this adequate for finding profiles in java webstart jars? tfm
DESIGN	todo check whether this is really needed. i think it is left over from an incomplete understanding of the magicdraw composition error problem tfm
DESIGN	todo not sure whether the above is better in some cases but the code below is better for both java web start and eclipse.
DESIGN	todo this returns a collection not a single object is this what the callers expect?
DESIGN	todo this code manually processes the elementimports of a package but we need to check whether mdr already does something similar automatically as part of its namespace processing. tfm 20060408
DESIGN	todo this has different semantics than everything else
DESIGN	todo an iterator filter would be nice here instead of the mucking around with the collection.
DESIGN	todo this does not belong here use getimportedelement.
DESIGN	todo rationalize this with getmodelelementcontainer
DESIGN	todo temporary stopgap for enumerationliteral
DESIGN	todo more is required here to support referencevalues
DESIGN	todo what other non modelelement types do we need to handle here?
DESIGN	todo this assumes ranges are sorted. is this true? tfm
DESIGN	this causes problems. it can make multiple return messages refer to the same activator even if not returning to the same classifier role as the activator emenates from. I am not sure that changing the activator of one message should amend any other messages but this is certainly changing too many bob.
DESIGN	todo i18n this needs to be localized but we do not have any localization capabilities in the model subsystem object args typename elemname alias misc.name.element import.alias imported 0 1 alias 2 return translator.localize misc.name.element import.alias args
DESIGN	register a listener for metamodel class and all its subclasses optionally qualified by a list of property names. todo verify that property event names are legal for this class in the metamodel
DESIGN	todo do we want to construct an artificial name here?
DESIGN	todo implement support for types other than string
DESIGN	todo this should be done after all events are delivered but leave it here for now to avoid last minute synchronization problems
DESIGN	only do verification if debug level logging is on todo should we leave this on always? tfm
DESIGN	todo mvw this needs rethinking rework! i have the following questions why does it not search for a stereotype in the namespace using properties and only create a new stereotype if it will actually be used? ie why is there not a getstereotype string name string baseclass ? edited by d00mst these comments imported from nsuml implementation tfm see org.argouml.model.extensionmechanismsfactory buildstereotype java.lang.object java.lang.object java.lang.object
DESIGN	todo the type of the model element used in a type parameter ie the formal needs to match the actual parameter that it gets replaced with later. this code is going to restrict that to always being a parameter which does not seem right but i do not have time to debug it right now. tfm 20090608
DESIGN	todo this should be built by reflection from the metamodel tfm update for uml 1.4 metamodel if not replaced by reflection
DESIGN	todo a minimal update strategy would be better here to minimize work and events firing but it may be better to deprecate the method and force calls to manage updates themselves since they probably usually want to just add or remove a single element tfm 20061108
DESIGN	todo this should use a minimal update strategy instead of removing everything and adding it again. tfm
DESIGN	todo this actually returns permissions with stereotypes of both access and import when the spec calls for only the former but that seems to give different semantics to the way package imports work. review to see which is wrong.
DESIGN	todo do we want to friend stereotypes too? model.getextensionmechanismshelper .hasstereotype permission modelmanagementhelper.friend stereotype
DESIGN	todo we have multiple string representations for multiplicities these should be consolidated. this form is used by org.argouml.uml.reveng
DESIGN	get elementresidences. todo unused. should be added to facade? tfm param handle a modelelement return collection the elementresidence for this model element
DESIGN	todo this is ambiguous as to whether it should be adding a container or resident.
DESIGN	todo this should either be extended to support all aggreationkinds or it should be simplified removed from the api tfm 20070331
DESIGN	todo it does not really make sense that a namespace would be returned as part of its own contents but that is the historical behavior.
DESIGN	todo perhaps use a hashset or other collection with faster lookup performance in case our callers are doing naive .contains lookups
DESIGN	todo try reusing the same set on every recursion
DESIGN	check that the two elements are not already linked the opposite way todo this is a part implementation of well formedness rule uml1.4.2 4.5.3.20 3 circular inheritance is not allowed. not self.allparents includes self
DESIGN	todo this is a part implementation of well formedness rule uml1.4.2 4.5.3.20 3 circular inheritance is not allowed. not self.allparents includes self
DESIGN	todo this is not according the contract for this function but it is used in several places and i mvw presume that we need this generally. this part 1 is about drawing an import permission between packages. the part 2 below is about modelmanagement.elementimport.
DESIGN	todo should we handle access and import ?
DESIGN	todo ?delete instances which have this as their classifier? or should we leave them since they contain so much state that the user would have to recreate?? nsmodel.getumlhelper .deletecollection nsmodel.getumlpackage .getcommonbehavior .getainstanceclassifier .getinstance cls todo ?delete objectflowstates which have this as their type? nsmodel.getumlhelper .deletecollection nsmodel.getumlpackage .getactivitygraphs .getatypeobjectflowstate .getobjectflowstate cls todo ?delete classifierinstates which have this as their type?
DESIGN	todo this should probably throw an exception if it gets invalid arguments rather than just returning null
DESIGN	todo delete old multiplicity? why is copy using hard coded value? tfm
DESIGN	todo as currently implemented this expects a list of multiplicityranges. is this an interface change from the nsuml implementation? i suspect it used to accept a list of integers. tfm see org.argouml.model.datatypesfactory createmultiplicity java.util.list
DESIGN	todo getallpossiblesubvertices and getallsubstates are duplicates tfm
DESIGN	todo copied from umldiagramrenderer. find the figs in the given layer that should be the source and destination and attach these to either end of the figedge param layer the layer to look for the fignodes param newedge the edge to attach
DESIGN	todo we need to rethrow this as some other exception type but that is too much change for the moment.
DESIGN	creates a new checkbox menu item attached to the specified action object and appends it to the end of this menu. todo this is almost a duplicate of argojmenu.addcheckitem must find a way to merge. param a the action for the checkbox menu item to be added return the new checkbox menu item
DESIGN	todo this is probably not the right location for switching off the filternewlines . the setting gets lost after selecting a different modelelement in the diagram. btw see how it is used in javax.swing.text.plaindocument. see issue 1812.
DESIGN	todo this can be a mess... there are any better solution?
DESIGN	the list of operations shall contain all operations of all classifiers contained in the same package as the callaction itself. p todo in fact we also should include operations of imported clasifiers. see org.argouml.uml.ui.umlcomboboxmodel buildmodellist
DESIGN	see javax.swing.event.documentlistener changedupdate javax.swing.event. documentevent todo are the 3 methods uses ?
DESIGN	creates a new field that selects the language for an expression. param m expression model should be shared between language and body fields param n only one of language and body fields should forward events to model todo mvw i do not understand that.
DESIGN	todo why do we need this as well as control? why is it instantiated when its not always needed.
DESIGN	the constructor. param expressionmodel expression model should be shared between language and body fields param notify set to true to forward events to model. only one of language and body fields should have this set to true. todo mvw i do not understand that.
DESIGN	to simplify implementation we list all associations found with any of the classifiers represented by the linked instances. p todo make a foolproof algorithm that only allows selecting associations that create a correct model. also take into account n ary associations and associationclasses. this algo best goes in the model subsystem e.g. in a method getallpossibleassociationsforalink . see org.argouml.uml.ui.umlcomboboxmodel buildmodellist
DESIGN	todo try to use valuefield.getcomponent
DESIGN	todo ?? use an other checkbox defines in argo and extends jcheckbox
DESIGN	mvw for this case i had to move the call to setselecteditem outside the buildingmodel otherwise the combo does not update with the new selection. see issue 5418.
DESIGN	todo consider a conditional feature in the xml panel def for this
DESIGN	todo is is really used ? see javax.swing.jcomponent removenotify
DESIGN	todo bob says the reflective code following should be replaced with something more specific like this commented out code. this would mean we need stype changed to a meta type object rather than a string.
DESIGN	todo are the 3 methods uses ?
DESIGN	an opaqueexpression can have n body n language when display to user we only show one body. a ... button is enabled for edit other. todo can we by import xmi have 0 language body ? author laurent braud
DESIGN	todo we have some quirk that the a baseclass addition or removal from a steroetype comes back as an attributechangeevent rather than an associationchangeevent. this needs further investigation to see if this can be made consistent.
DESIGN	todo rather than specifically ignore some item maybe it would be better to specifically state what items are of interest. otherwise we may still be acting on other events we do not need
DESIGN	todo this needs work... we also need to listen to addition removal of states to from a classifierinstate.
DESIGN	todo we may want to restrict the list to parameters which conform to the following wfr parameter.type ofstype or parameter.kind in and ofstype.allsupertypes includes type or parameter.kind out or parameter.kind return and type.allsupertypes includes ofstype or parameter.kind inout and ofstype.allsupertypes includes type or type.allsupertypes includes ofstype
DESIGN	todo getallmodelelementsofkind should probably do this processing of imported elements automatically
DESIGN	todo part of this is copied from actiondeletemodelelement. we maybe need some subclass for common code.
DESIGN	todo we should really test the model instead for this but we have no api yet. can we just check if the collection to build the jlist control implements the list interface?
DESIGN	see java.awt.event.actionlistener actionperformed java.awt.event.actionevent todo from combobox javadoc this method is public as an implementation side effect. do not call or override. we should find some other way to implement this.
DOCUMENTATION	todo please add some javadoc ugly classname also
DOCUMENTATION	uml 1.4 spec is ambiguous english says no association or generalization but ocl only includes association model.getfacade .isageneralization dm
DOCUMENTATION	add a comment with the given string todo currently a no op doc is read only param text the property
DOCUMENTATION	test delivery of model events. todo we have not documented exactly what events arrive and when. author linus tolke
DOCUMENTATION	todo does this still need to be synchronized? if so then explain why.
DOCUMENTATION	this interface contains methods to retrieve objects that represent the different uml types. these objects are use as tokens used to create model elements in some methods. todo there are parts of argouml which assume that the objects returned here are classes. we should formalize that by changing the return types to match. tfm 20070620 bob says there should be no such assumption in argouml. can we document where these are? see org.argouml.model.umlfactory buildconnection object object object object object object object see org.argouml.model.umlfactory buildnode object
DOCUMENTATION	todo do we need this?
DOCUMENTATION	todo document! author penyaskito
DOCUMENTATION	returns all substates some composite state contains. p todo link getallpossiblesubvertices object and link getallsubstates object are duplicates as implemented for mdr. it is not clear from the javadoc or usage whether they should do different things or this just happened because no one noticed we already had another method. param compstate the given compositestate return all substates
DOCUMENTATION	todo document! deprecated for 0.28 by tfmorris. use link umlactivitydiagram string object graphmodel .
DOCUMENTATION	todo document! what does this do? interacts with event pump in some manner param objects new objeccts
DOCUMENTATION	todo the quickguide also mentions open arg open given file on startup print arg print given file on startup and exit why are these gone?
DOCUMENTATION	todo needs documenting why synchronized?
DOCUMENTATION	todo document why we catch this.
DOCUMENTATION	predecessors used to be not implemented because it caused some problems that I have not found an easy way to handle yet d00mst. the specific problem is that the notation currently is ambiguous on second message after a thread split. why not implement it anyway? d00mst todo document this ambiguity and the choice made.
DOCUMENTATION	todo link to the signal.
DOCUMENTATION	the event to fire. todo investigate! is the purpose really to let the next call to link firepropertychanged string object object fire the old event again if the previous invocation resulted in an exception? if so please document why. if not fix it.
DOCUMENTATION	todo document
DOCUMENTATION	todo the recurrence goes in front of the action? does this not contradict the header javadoc?
DOCUMENTATION	todo check conformancy to specification
DOCUMENTATION	set the owners of the associated fignodes to be the statevertexes which are at either end of the transition. p todo this needs documentation! is this really needed? why? param lay diagram layer containing this fig param owner owning uml element deprecated in 0.28 by bob tarling the above todo is from michiel. i also do not understand the purpose of this method. the gef framework should be setting source dest or persistence should manage.
DOCUMENTATION	todo investigate typo in spec!!
DOCUMENTATION	generate the intno of the given message. p if the predecessor of the given message has only one successor then we return the string representation of the given integer. p if the predecessor of the given message has more than one successor then this is a case of parallel execution of messages e.g. message 3.1a and message 3.1b are concurrent within activation 3.1. hence in this case we use a syntax like 1a 1b 1c. this means that the first successor in the ordered list of successors that has more than one entry will get the postfix a the second b etc. todo document exceptional behaviour. param umlmessage the uml message object to generate the sequence number for param umlpredecessor the immediate predecessor message uml object that has the given message as successor param position the integer position of the given message within its sequence return the generated sequence expression string or null if the given message was null
DOCUMENTATION	todo are we intentionally eating all events? tfm 20060203 document!
DOCUMENTATION	well formedness rule for package. check that the alias for an imported element does not conflict with any existing name. section 4.14.3.3 of uml 1.4 spec. p other types of name conflicts in a namespace are checked by link crnameconflict . p todo mvw if an alias is the same as another class name then this critic fires but the explanation and wizard are wrong!
DOCUMENTATION	make use of the default visibility which is public... todo centralise this knowledge. see org.argouml.uml.diagram.ui.abstractactionradiomenuitem valueoftarget java.lang.object
DOCUMENTATION	todo bobs says what is the purpose of this flag? please document.
IMPLEMENTATION	todo maybe should stop at first or find highest priority.
IMPLEMENTATION	todo how to implement this method properly?
IMPLEMENTATION	todo make this final as soon as possible.
IMPLEMENTATION	now we know that this critic is still valid. what we need to figure out is if the corresponding to do item is still valid. the to do item is to be replaced if the name of some offender has changed that affects its description or if the contents of the list of offenders has changed. we check that by creating a new todoitem and then verifying that it looks exactly the same. this really creates a lot of to do items that goes to waste.
IMPLEMENTATION	todo what should we do here?
IMPLEMENTATION	the following debug line is now the single most memory consuming line in the whole of argouml. it allocates approximately 18 of all memory allocated. suggestions for solutions check if there is a log.log level.fine string string method that can be used instead. use two calls. for now i linus just comment it out. log.log level.fine applying critic headline
IMPLEMENTATION	todo why do we need this when we can just change the font and achieve the same effect?
IMPLEMENTATION	todo should we be doing anything on deleted elements? this throws an exception on remove events. skip for now tfm
IMPLEMENTATION	todo allow other configuration handlers.
IMPLEMENTATION	if we were not given a system id attempt to use the url for the jar that we were loaded from. why? tfm
IMPLEMENTATION	todo register listener for target todo item changes and for new showstep requests
IMPLEMENTATION	todo review priority of public id vs system id has been reversed from original implementation
IMPLEMENTATION	todo this should not require two passes through the list tfm
IMPLEMENTATION	compute which critics should be active i.e. they can be applied by applyallcritics for a given designer. p note i am setting global data i.e. the isenabled bit in each critic based on the needs of one designer. i do not really support more than one designer. which is why each designer if we would support more than one designer has his own agency. todo should loop over simpler list of critics not compoundcritics param d the designer
IMPLEMENTATION	todo why is this disabled always?
IMPLEMENTATION	todo should have an image of a wizard or some logo
IMPLEMENTATION	todo these buttons for future enhancement buttonpanel.add configbutton buttonpanel.add networkbutton
IMPLEMENTATION	todo check type!
IMPLEMENTATION	todo for uml 2.x powertypes are accessed indirectly through the generalizationsets that contain a generalization. since nov 3 2002 author jaap.branderhorst xs4all.nl
IMPLEMENTATION	unused currently stringbuffer taggedvaluessb gettaggedvalues modelelement
IMPLEMENTATION	todo placeholder implementation until support for tracking on a per project basis is implemented return dirty
IMPLEMENTATION	todo why is this a special case? tfm
IMPLEMENTATION	flag to indicate we are creating a new current project. todo this is not a thread safe way of doing mutual exclusion.
IMPLEMENTATION	todo indicate the direction!
IMPLEMENTATION	todo we need a way to set the line color and width here but testdependencies thinks this creates a dependency cycle fig line new argofigline snapx snapy snapx snapy argofig.line color line.setlinewidth argofig.line width
IMPLEMENTATION	todo this code can be removed when getcurrentproject is removed
IMPLEMENTATION	todo can we just do this every time no need for else bob
IMPLEMENTATION	todo tentative implementation. do we want something that updates the list of open projects or just simple open and close events? tfm
IMPLEMENTATION	todo add empty placeholder here?
IMPLEMENTATION	todo needs completing stub implementation only! tfm
IMPLEMENTATION	todo needs i18n
IMPLEMENTATION	todo is this removed from uml2 ?
IMPLEMENTATION	todo this should only be checking for the top level package if anything at all
IMPLEMENTATION	use a little trick to find out where argo is being loaded from. todo use a different resource here. argoini is unused and deprecated
IMPLEMENTATION	todo placeholder implementation until support for tracking on a per project basis is implemented
IMPLEMENTATION	todo it is a performance drain to load all classes at startup time. they should be lazy loaded when needed. instead of scanning all classes for ones which implement our loadable module interface we should use a manifest entry or a special name name pattern that we look for to find the single main module class to load here. tfm
IMPLEMENTATION	enable it. todo this by default selects all modules that are found. eventually we would rather obey a default either from the modules themselves from how they are found and also have information on what modules are selected from the configuration.
IMPLEMENTATION	if it is a jar clean it up and make it look like a file url
IMPLEMENTATION	we also show tagged values for uml 1 todo what to do for uml2 here?
IMPLEMENTATION	todo do we have any potential consumers of the unversioned name outside of the notation subsystem?
IMPLEMENTATION	the constructor. todo why does this method not handle all settings?
IMPLEMENTATION	todo these defaults need to be checked against historical ones
IMPLEMENTATION	todo should not we do something here?
IMPLEMENTATION	todo handle parse error
IMPLEMENTATION	todo this try catch will be needed once the code below is improved.
IMPLEMENTATION	todo this name of the expression language should be configurable by the user. p according to the uml standard the expression language should be the same for all elements in one diagram. p uml is not a sensible default usually this is some pseudo language. return the name of the expression language
IMPLEMENTATION	todo why are not we throwing an exception here? returning null results in npe and no explanation why.
IMPLEMENTATION	todo do we need to control separately for attributes and operations?
IMPLEMENTATION	we need to extend the extensionmechanismsfactory so that we can replace the above deprecated call with something like this
IMPLEMENTATION	empty implementation.
IMPLEMENTATION	todo this needs more work! we simply throw the new extension point away?
IMPLEMENTATION	todo find a better default language todo we should know the notation language since it is us
IMPLEMENTATION	todo can we put the static block within the init ?
IMPLEMENTATION	todo reuse the offender list.
IMPLEMENTATION	todo in the next line i should use buildguard but it does not show the guard on the diagram... why? mvw
IMPLEMENTATION	todo is this a good way of handling nested notation? the following fails the tests new transitionnotationuml t .parse line
IMPLEMENTATION	todo is this a good way of handling nested notation?
IMPLEMENTATION	todo add stereotype application ecore anytype?
IMPLEMENTATION	todo do we want isaumlelement here?
IMPLEMENTATION	todo any special handling for null names? append will use null
IMPLEMENTATION	todo this dtd does not exist so we cannot tell readers to look for it w.println !doctype profile system profile.dtd but we need a 2nd line to make the funky uml persister work remove this line if the above is uncommented
IMPLEMENTATION	todo add implementation.
IMPLEMENTATION	todo we need the project specific diagram settings here
IMPLEMENTATION	ignored it should not have been in the project in the 1st place
IMPLEMENTATION	todo add recent patterns
IMPLEMENTATION	todo these can not simply be translated...
IMPLEMENTATION	todo allow .zargo as profile as well?
IMPLEMENTATION	todo check if it is ok to just get the first zip entry since the zip file should contain only one xmi file thn
IMPLEMENTATION	todo profile dependencies for uml2
IMPLEMENTATION	todo support real types
IMPLEMENTATION	xxx hypotheses no qualifiers i do not know
IMPLEMENTATION	todo check types!
IMPLEMENTATION	stylepanel class which provides additional parameters for changing text elements provided by gef. todo i18n
IMPLEMENTATION	todo implement iterate todo implement sortedby todo implement subsequence
IMPLEMENTATION	how to handle empty target lists? probably the tabtext should only show an empty pane in that case
IMPLEMENTATION	todo investigate the unnamed opposite end
IMPLEMENTATION	todo support real numbers
IMPLEMENTATION	todo investigate abstraction.mapping is not in the model subsystem
IMPLEMENTATION	todo implement oclexpression
IMPLEMENTATION	todo implementationlocation??
IMPLEMENTATION	todo implement the difference between ocliskindof and oclistypeof
IMPLEMENTATION	todo this should really be coded the other way round to only act on associations which are important for representing the current perspective and to only act on a single end of the association tfm
IMPLEMENTATION	todo do we want to use the project here instead of just its name?
IMPLEMENTATION	todo this could be made more efficient by working with iterators directly and creating a composite iterator made up of all the various sub iterators.
IMPLEMENTATION	todo this is going to because the color to be reset on a refresh
IMPLEMENTATION	todo presentation??
IMPLEMENTATION	for tagged values use their containing modelelement since they do not have property panels of their own todo may want to do this for other types too?
IMPLEMENTATION	reorder submenu todo i think this requires i18n but not sure tfm
IMPLEMENTATION	empty implementation not used.
IMPLEMENTATION	todo add a button to force garbage collection
IMPLEMENTATION	todo only fetch names and defer fetching panels until needed
IMPLEMENTATION	hide save action during load. otherwise we get the appearing in title bar and the save enabling as models are updated todo do we still need this now the save enablement is improved?
IMPLEMENTATION	todo replace the functioncall in the next line by .requestfocusinwindow once we do not support java 1.3 any more.
IMPLEMENTATION	todo beautify the 2nd part of this string
IMPLEMENTATION	the text box containing the problem messages todo this should be hidden by default but accessible on via a details button or tab to provide more info to the user.
IMPLEMENTATION	todo a better implementation would be to batch events into logical groups and update the tree one time for the entire group synchronizing access to the model repository so that it stays consistent during the query. this would likely require doing the updates in a different thread than the event delivery thread to prevent deadlocks so for right now we protect ourselves with try catch blocks.
IMPLEMENTATION	todo the copy function is not yet completely implemented so we will have some exceptions here and there.
IMPLEMENTATION	todo do we want all enabled tabs to listen or only the one that is selected visible? tfm
IMPLEMENTATION	the drag gesture listener is notified of drag gestures by a recognizer. the typical response is to initiate a drag by invoking dragsource.startdrag . p todo find a way to show a different image when multiple elements are dragged. param draggestureevent the draggestureevent describing the gesture that has just occurred see java.awt.dnd.draggesturelistener draggesturerecognized java.awt.dnd.draggestureevent
IMPLEMENTATION	todo support other types of drag. here you set the owner by dragging into a namespace. an alternative could be to drag states into composite states...
IMPLEMENTATION	returns a set union of all unique applicable stereotypes for a given collection of model elements. todo this is not optimized for performance. param elements the given collection of model elements return the set with stereotype uml objects
IMPLEMENTATION	todo handle n way associations
IMPLEMENTATION	todo ignore and report exception until gettop implemented.
IMPLEMENTATION	called after the diagram font gets changed. p todo do we need to do anything here? see java.beans.propertychangelistener propertychange java.beans.propertychangeevent
IMPLEMENTATION	do we have 2 connection ends?
IMPLEMENTATION	todo we need to be more specific here about what to build
IMPLEMENTATION	todo mark diagram project as dirty?
IMPLEMENTATION	additional cleanup needed because this would not be removed by ext.destroy
IMPLEMENTATION	todo consider inherited attributes?
IMPLEMENTATION	do not know what to do otherwise
IMPLEMENTATION	a specialist selection class for figpartitions. this ensures that all swimlanes are the same length ie height . todo make sure that all swimlanes appear side by side uml spec states separated from neighboring swimlanes by vertical solid lines on both sides . todo allow drag of the west and east edge to resize both the selected fig and the fig connected to that side. todo show northwest and southwest handle only on leftmost swimlane. todo show northeast and southeast handle only on rightmost swimlane. author bob
IMPLEMENTATION	the activity diagram. p todo finish the work on subactivity states.
IMPLEMENTATION	this may not actually make any difference at present the code behind addtrigger needs more work .
IMPLEMENTATION	todo do we have anything to add here?
IMPLEMENTATION	todo we may return the following when the relocate has been implemented.
IMPLEMENTATION	todo do we really need to be listening for both of these events?
IMPLEMENTATION	todo this comparison is very suspect it should use equals method. the code within the block is in fact never executed. i hesitate to change this now as it will trigger code has never been used before and am not aware of any problems that it usage may introduce. i do think that we need to be able to find a different way to implement the intent here which seems to be to correct edge drawings that should actually not be allowed bob
IMPLEMENTATION	associations not supported yet todo create appropriate classdiagramedge
IMPLEMENTATION	todo make another pass to deal with overlaps?
IMPLEMENTATION	todo we may return something useful when the relocate has been implemented like all statemachines that are not activitygraphs.
IMPLEMENTATION	stylepanel which adds a checkbox to show or hide the stereotype. p todo i18n. author mvw tigris.org
IMPLEMENTATION	todo to enable models and subsystems change this flag work started by markus i believe where does this stand? bob.
IMPLEMENTATION	todo todoitem stuff should be made an opaque extension
IMPLEMENTATION	todo for uml 2.x this is isstatic
IMPLEMENTATION	todo why do i need to do this?
IMPLEMENTATION	todo this needs to be modified for uml 2.x
IMPLEMENTATION	for backward compatibility everything is above and right todo do in polar domain?
IMPLEMENTATION	todo it would be better here to continue the loop and try to build the rest of the compartment. hence try catch should be internal to the loop.
IMPLEMENTATION	todo why are these different colors? tfm
IMPLEMENTATION	todo how to handle changes in shadowsize from the project properties?
IMPLEMENTATION	todo add unnamed or new or something? localized of course
IMPLEMENTATION	todo should we require a graphmodel in the constructor since our implementations of setnamespace are going to try and set the namespace on the graphmodel as well?
IMPLEMENTATION	perhaps something like the following would work instead rectangle drawingarea globals.cureditor .getjcomponent .getvisiblerect
IMPLEMENTATION	todo this must happen on the awt thread
IMPLEMENTATION	todo we need a better algorithm.
IMPLEMENTATION	todo use this event mechanism to update the checkmark on the presentation tab
IMPLEMENTATION	todo if this turns out to be a performance bottleneck we can probably optimize the common case by caching our iterator and current position assuming that the next request will be for a greater index
IMPLEMENTATION	assert arrays.aslist properties .contains event.getpropertyname event.getpropertyname todo do we really always need to do this or only if notationprovider is null?
IMPLEMENTATION	let us test which situation we have. 3 possibilities 1. the nodes are already on the diagram we can use canaddedge for this. 2. one of the nodes is already on the diagram. the other has to be added. 3. both of the nodes are not yet on the diagram. for the time being we will only implement situation 1. todo implement situation 2 and 3.
IMPLEMENTATION	todo a more strongly typed data structure could be used here.
IMPLEMENTATION	perform re routing if src dest nodes have changed. p this method needs to be armed by a previous mousedragged to avoid the situation where the user just clicks on the node then clicks on some unrelated fig without moving the edge... p todo improve the fig finding algorithm to find the top most fig in the layer. will be useful for nested states in a statechart. see java.awt.event.mouselistener mousereleased java.awt.event.mouseevent
IMPLEMENTATION	a window that shows the progress bar and a cancel button. as a convenience to callers which may be executing on a thread other than the swing event thread all methods use swingutilities.invokelater or swingutilities.invokeandwait to make sure that swing calls happen on the appropriate thread. p todo react on the close button as if the cancel button was pressed.
IMPLEMENTATION	write todo check if sections are not used within the file and put them as comments at the end of the file. hint use a second map to compare with the used keys. param filename the file name param indent the current indentation param outputlostsections true if lost sections are to be written
IMPLEMENTATION	todo uml2 what do we do here?
IMPLEMENTATION	todo implement this show some documentation?
IMPLEMENTATION	todo these have been used for most instances of new figfoo x0 y0 ... but additional work is required to extract the constant from calculations etc.
IMPLEMENTATION	todo work here !
IMPLEMENTATION	todo what does the output directory have to do with the class path? project p projectmanager.getmanager .getcurrentproject entries.add p.getprojectsettings .getgenerationoutputdir
IMPLEMENTATION	todo this next line prevent loading a usecase with a stereotype to grow. why?
IMPLEMENTATION	todo i18n required
IMPLEMENTATION	utility function to localize the given string with help text and show it in the status bar of the argouml window. this function is used in favour of the inline call to enable later improvements e.g. it would be possible to show a help balloon. todo work this out. one matter to possibly improve show multiple lines. param s the given string to be localized and shown
IMPLEMENTATION	compilecheckbox new jcheckbox namebutton compilecheckbox checkbox.compile generated source todo implement the compile feature. for now disable the checkbox. compilecheckbox.setenabled false southpanel.add compilecheckbox borderlayout.south
IMPLEMENTATION	save the source language in the model. p todo support multiple languages now that we have uml 1.4 tagged values. param node param language
IMPLEMENTATION	todo this transformation is java specific. we need a more language notation scheme for specifying qualified names. possible algorithm replace all punctuation with our internal separator replace multiple separators with a single instance for languages like c . what about i18n? tfm
IMPLEMENTATION	todo need to add filechooser
IMPLEMENTATION	todo this needs to be improved even for nongui calling the config panel needs to be initialized
IMPLEMENTATION	todo implement additional operations in 4.5.3.5
IMPLEMENTATION	return the fully qualified name of a model element in java dot separated format. p todo we really need a language independent format here. perhaps the list of names that form the hierarchy? tfm
IMPLEMENTATION	generates a new unique id and returns it as a string. the contents of the string is supposed to be unique with respect to all strings generated by other instances of this class. todo we should consider using java.util.uuid for this instead. return a string with unique content.
IMPLEMENTATION	todo add up down buttons to control the ordering of items
IMPLEMENTATION	todo support other name kinds
IMPLEMENTATION	todo add all top level packages
IMPLEMENTATION	todo support other kinds of tail
IMPLEMENTATION	todo is this the right range here?
IMPLEMENTATION	this class provides a text field that can be used to display the text of all comments associated with an annotated modelelement. todo this could use more work. currently it returns all comment.name or comment.body attributes concatenated together into a single read only document. since 1 nov 2005 author tom morris tfmorris gmail.com
IMPLEMENTATION	todo we should assert this never happens before removing panels should control their own listeners
IMPLEMENTATION	todo implement this!
IMPLEMENTATION	todo the project should be bound to the action when it is created?
IMPLEMENTATION	todo it would be better to defer this initialization until the panel actually needs to be displayed. perhaps optimistically always return true and figure out later if we have got something to display tfm 20070110
IMPLEMENTATION	this panel contains radio buttons that represent the changeability of an asssociation end. author jaap.branderhorst xs4all.nl since jan 4 2003 todo for uml 2.x this needs to be changed to be just readonly frozen or not changeable .
IMPLEMENTATION	todo what to do with the return value?
IMPLEMENTATION	todo property name will need to be updated for uml 2.x unfortunately we can specify two property names here
IMPLEMENTATION	todo do we want to fire targetremoved here or is it enough to just stop updating the targets?
IMPLEMENTATION	a mock modelimplementation. p the facade the modeleventpump the factories and helpers are all created as mock objects using easymock. for each of them there should also be a possibility to access their link mockcontrol object. todo create the rest of the getters for the control objects. author linus tolke
IMPLEMENTATION	todo what shall we do with the exception?
IMPLEMENTATION	todo with new reference resolving scheme the model sub system will cache the systemid of the profile open it and resolve the profile on its own. thus the java.util.list will be found and the return value will be present again... assertnotnull returnparamtype
IMPLEMENTATION	todo i suspect this is not needed call is not needed but do not remove till out of alpha beta stage
IMPLEMENTATION	the uml 1.4 model elements to test. todo this needs to be updated with a version for uml 2.x.
IMPLEMENTATION	todo do we need this? is this the same as emptyfig.getheight ?
IMPLEMENTATION	todo use reflection against the test case to ensure that it does not import non argouml classes
IMPLEMENTATION	todo maybe a return message already exists. check first and and if the first found has no activator then set this call message as the activator and skip the code below.
IMPLEMENTATION	todo before adding a new region make the last region its minimum size smallest size that will still contain all enclosed
IMPLEMENTATION	todo why do we need to remove then add the fig?
IMPLEMENTATION	todo minimum height should not be calculated every time but only when an figmessage has been added or removed. currently doing that does not work because of an unknown problem. how to test create only two crs and a create message between them. then move the create message to the bottom! until that is fixed the workaround is to call updateminimumheight every time the minimum size is needed
IMPLEMENTATION	todo expression and instancevalue how if anyone have an example.
IMPLEMENTATION	finds the operation to which a callevent refers based on the given transition. this function determines the context of the statemachine that contains the given transition. if the context is a classifier then all operations of this classifier are candidates. if the context is a behavioralfeature then all operations of the owner classifier are candidates. the first operation of which the name matches is the result. for activity diagrams if the context is a package then all operations of all classifiers in the package are candidates. todo this function works for the most normal cases but needs some testing for rare cases e.g. internal transitions ... todo the parameters of the candidates are ignored. maybe this method should return a set of matching operations. author mvw param trans object of type transition param opname the name of the operation sought return object the operation with the given name or null
IMPLEMENTATION	get the innermost containing model of a modelelement. p if no containing model can be found the outermost containing modelelement is returned which could be the original element itself if it has no owner . p this method is intended to return the innermost containing model but there are circumstances where one may really expect the outermost containing model or root package to be returned e.g. where it is being used to test if two elements are from disjoint namespace hierarchies . hence there are two separate methods with different semantics. the method link getroot object returns the outermost containing object. p todo note also that some code uses org.argouml.kernel.project getroot to navigate down from the top instead of up from the bottom. we need to use a consistent algorithm for this. tfm 20070724 param handle to the model element. return model for the model element.
IMPLEMENTATION	there is more to be handled which still need to be implemented
IMPLEMENTATION	builds an actor in the same namespace as the given actor. if the object is not and actor nothing is built. p todo this should not just silently fail if it is passed a bad argument. this contract will change. tfm 20070607 param model the namespace. param actor the given actor return actor the newly built actor
IMPLEMENTATION	list transition result new arraylist transition todo not complete how to retrieve the transitions?
IMPLEMENTATION	todo first implementation will be to call buildpopop and extract all the contained actions. the toolbar will be built to the same structure. the toolbar will be displayed to the left of the jlist under the label.
IMPLEMENTATION	todo implement remaining supported types
IMPLEMENTATION	todo unfinished implementation
IMPLEMENTATION	eclipse uml2 implementation of xmiwriter. todo we need facilities for writing and reading stable ids to from either xmi.id or xmi.uuid. author tom morris
IMPLEMENTATION	todo all build create methods need undo support tfm
IMPLEMENTATION	todo need uml 2.x equivalent
IMPLEMENTATION	todo this is updating model on a per character basis as well as unregistering reregistering event listeners every character very wasteful tfm
IMPLEMENTATION	a language must be unique so select the current empty language. todo ? alert
IMPLEMENTATION	if the property that this comboboxmodel depicts is changed in the uml model this method will make sure that the changes will be done in the combobox model equally. p todo this function is not yet completely written! inheritdoc see java.beans.propertychangelistener propertychange java.beans.propertychangeevent
IMPLEMENTATION	todo review the tool tips ? stringfield.settooltiptext translator.localize label.body.tooltip
IMPLEMENTATION	the list with objects that should be shown in the combobox. todo using a list here forces a linear search when we are trying to add a new element to the model which can be very slow for large models.
IMPLEMENTATION	the panel that shows a value specification for an other uml element. todo do we need to implements changelistener if yes ok if no cannot be use without optional class or the optional do not need to !
IMPLEMENTATION	todo else alert
IMPLEMENTATION	todo enhance the isvalidnamespace function so that this never happens.
IMPLEMENTATION	todo after removing a region reset the overall size of the node.
IMPLEMENTATION	todo gone in uml 2.1
IMPLEMENTATION	todo not complete
IMPLEMENTATION	how to handle empty target lists? probably the wizstep should only show an empty pane in that case
IMPLEMENTATION	todo not all namespaces are useful here any wfrs?
IMPLEMENTATION	todo this work should be deferred until actually needed for display
IMPLEMENTATION	todo should be anything allowed by current diagram
IMPLEMENTATION	todo we expect an association end here check more carefully? tfm
IMPLEMENTATION	todo this is not done yet. eventually this will also feed the rational log.
IMPLEMENTATION	todo is it removed from uml2 ?
IMPLEMENTATION	todo this will need to change when we support multiple user models.
IMPLEMENTATION	todo 2nd next for single hasnext
IMPLEMENTATION	todo fully implement this!
IMPLEMENTATION	todo implement following wfr for generalizableelements 4 the parent must be included in the namespace of the generalizableelement. self.generalization forall g self.namespace.allcontents includes g.parent return modelmanagementhelpermdrimpl.getcontents ns .contains gen.getparent
IMPLEMENTATION	todo before allowing this we should really check that templateparameter.defaultelement is defined
IMPLEMENTATION	todo not implemented
IMPLEMENTATION	identifier for addonly changeability. todo note this should not be in uml2 version
IMPLEMENTATION	todo correctly implement next function in the model subsystem for issue 1942
IMPLEMENTATION	make a read only copy of the listeners list so that reentrant calls back to add removelistener will not mess us up. todo potential performance issue but we need the correctness tfm
IMPLEMENTATION	todo review all callers to make sure that they localize the title in process by harold braun 20070912
IMPLEMENTATION	todo once the default constructor is deleted we only set dirty flag
IMPLEMENTATION	todo all super constructors should take a graphmodel
IMPLEMENTATION	todo get project or other necessary context from source?? e.getsource
IMPLEMENTATION	todo make this more efficient for large i os
IMPLEMENTATION	todo bob says how can we auto generate this list?
IMPLEMENTATION	todo we failed to resolve url signal error
IMPLEMENTATION	todo count report unresolved references
IMPLEMENTATION	todo implement support for multiple taggedvalues
IMPLEMENTATION	todo why would this be null?
IMPLEMENTATION	todo treat message
IMPLEMENTATION	todo rework to use uml 1.4 tagdefinitions tfm
IMPLEMENTATION	todo needs undo support
IMPLEMENTATION	todo check if this is ok this is literally adapted from nsuml
IMPLEMENTATION	fix set the application name for mac os x
IMPLEMENTATION	todo what can we do with other kind of actions?
IMPLEMENTATION	todo use the svgwriter2d implementation cmd new savesvgaction2 translator.localize action.save svg
IMPLEMENTATION	apparently this method is never called.
IMPLEMENTATION	todo not implemented yet. the idea is that some problems identified by critic s can be fixed with certain design manipulations or transforms that can be applied automatically to resolve the problem. this method replies true iff the given problem can be fixed. the fixit method actually does the fix. see org.argouml.cognitive.poster canfixit org.argouml.cognitive.todoitem also see critic fixit
IMPLEMENTATION	todo not implemented yet. if the given todoitem can be fixed automatically and the user wants that to happen then do it. obviously this depends on the specific critic and problem. by default this method does nothing. param item the todo item param arg the design material ?
IMPLEMENTATION	list of checkliststatus es. indexed on the model element itself. todo should use weak references so that this is forgotten about when the object is removed.
IMPLEMENTATION	todo maybe the exception strings should be internationalized
IMPLEMENTATION	todo understand qualifiers
IMPLEMENTATION	todo convert this to some sensible logging
IMPLEMENTATION	todo is it possible to use more than one variable?
IMPLEMENTATION	reply the todoitem that the designer should see iff predicate returns true. by default it just fills in the fields of the todoitem from accessor methods of this critic. critic subclasses may override this method or the accessor methods to add computed fields to the todoitem. todo critic s may want to add new fields to a todoitem to make stillvalid more efficent. see critic critique param dm the offender param dsgr the designer return todoitem
IMPLEMENTATION	todo implementation?
IMPLEMENTATION	todo removed from uml 2.x
IMPLEMENTATION	category.getroot .getloggerrepository .setthreshold level.off todo find the proper implementation in java.util.logging api
IMPLEMENTATION	todo review all callers to make sure that they localize the title
IMPLEMENTATION	removes a listener eventtype pair from the listener list. todo replace the listener implementation with a eventlistenerlist for better performance param event the event to which the listener will not listen any more param listener the listener to be removed
IMPLEMENTATION	check the offenders. p this is called from the constructors where the offenders are given. todo why do we only care about checking the first 2 offenders above? param offs the offenders.
IMPLEMENTATION	todo this is a linear search of a list that contain many thousands of items one for every fig in the entire project
IMPLEMENTATION	todo check this
TEST	todo no test coverage for this or createproppanel? tfm
TEST	todo do tests for infix operators 8.4.7 even though it is not yet supported
TEST	the uml 2.1.1 metamodel is a mof 2.0 cmof model so we want nodes with tag ownedmember attribute xmi type cmof class todo this code is untested tfm
TEST	for modules it would be usefule to be able to remove their factories. p todo the effect of this method is not yet tested! param factory the factory to remove
TEST	test the constructor used for loading a profile from a jar file. todo test fignode! throws exception if something goes wrong
TEST	modelelement is abstract so no create tests todo add any other relevant tests
TEST	do we need to add tests for the following? aggregationkind changeablekind messagedirectionkind orderingkind parameterdirectionkind pseudostatekind scopekind visibilitykind
TEST	cleanallextentsbut model todo why is this causing a crash?!?
TEST	todo this needs more work. test e.g. creation when an operation is selected. author jaap.branderhorst xs4all.nl since jan 9 2003
TEST	for some reason listset.equals allocates a lot of memory well some memory at least. let us try to avoid that when not needed by invoking this test only when the two previous tests are not decisive.
TEST	tests for the diagramsettings. todo test chaining of settings. author tom morris based on testprojectsettings by michiel
TEST	todo should not be using assert here but i do not want to change to illegalstateexception at lead up to a release as i do not know how much testing is done with assert on.
TEST	todo fix this so that new sequence diagrams are tested
TEST	todo rewrite this test using reflection against uml class. this code has been commented out since september 2003
TEST	test creation of collaboration diagrams. todo test creating on an operation. author jaap.branderhorst xs4all.nl since jan 9 2003
TEST	test a uml 1.3 xmi 1.1 file to make sure that it gets converted properly. p todo our uml 1.3 converter currently only handles xmi 1.0. throws filenotfoundexception indicates a test configuration problem throws umlexception if it fails to open the file
TEST	tests if the list with namespaces defined in getvalidnamespaceclasses contains only valid namespaces. todo this test does not test anything really!
TEST	the application should have checked for availability at startup. for tests we would expect unix developers to be correctly configured. replace with an assert when we are jre1.4
TEST	todo this should fail but it does not
TEST	todo write test for enumerations although they are not yet supported
TEST	test read compressed models mainly to verify the correct reading of andromda profiles. todo move this test into argouml base when we will want to read also zip file. author lmaitre
TEST	todo do tests for navigation to association classes 8.5.5 even though it is not yet supported
TEST	we tested this above do we need to test again?
TEST	todo do tests for type conformance 8.4.4 even though it is not yet supported
TEST	testing does not fire. conflict with crnameconflict.
TEST	todo should it remove the leftovers from other tests? cleanallextents assert getfacade .getrootelements .size 0
TEST	entered in 0.29.3 prove that the test below is not needed
TEST	todo this requires that the tests be run with assertions enabled which is not guaranteed in all environments.
TEST	todo why does it fail for changing the name of an associationend? why should it pass?
TEST	for modules it would be useful to be able to remove their factories. p todo the effect of this method is not yet tested! param factory the factory to remove
TEST	todo test this.
TEST	todo test if the generated string is correct.
TEST	todo do tests for ranges in collection definition 8.5.12 even though it is not yet supported
TEST	todo do tests for collections of collections 8.5.13 even though it is not yet supported question should this happen with all collections or only the constructed ones?
TEST	test creation of metatypes. todo we could add tests here to make sure that we can not create abstract types
TEST	listening only to remove events does not work... todo check if this works now with new event pump tfm
TEST	todo we need some way of driving this from panel xml rather than hard coded test
TEST	todo prove that this works. the testumlassociationrolebasecomboboxmodel does not cut it. see org.argouml.uml.ui.umlcomboboxmodel addothermodeleventlisteners java.lang.object
TEST	todo presumably this is only relevant if obj is actually a model or profile. an added test of isamodel obj or isaprofile obj would clarify what is going on here.
TEST	all events going to the explorer must pass through here first! p most will come from the uml model via the eventadapter interface. p todo in some cases test cases this object is created without setting the treemodel. i linus will add tests for this now. it would be better if this is created only when the explorer is created. p todo the explorertreenode also listens to some events from diagrams so it does not follow the rule above. since 0.15.2 created on 16 september 2003 23 13 author alexb
WITHOUT_CLASSIFICATION	firenoderemoved node
WITHOUT_CLASSIFICATION	the following does not seem to work centered the fig instead. getnamefig .setjustificationbyname center
WITHOUT_CLASSIFICATION	get the widest of all textfigs calculate the total height
WITHOUT_CLASSIFICATION	4.5.2.24 generalization
WITHOUT_CLASSIFICATION	create the new figassociation edge to replace the node
WITHOUT_CLASSIFICATION	center the namefig since center justification does not seem to work.
WITHOUT_CLASSIFICATION	if we are about to upgrade the file let us take an archive of it first.
WITHOUT_CLASSIFICATION	actions specific to the use case diagram toolbar
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.layout.layouter layout
WITHOUT_CLASSIFICATION	loop through the associations counting the ends with aggregations
WITHOUT_CLASSIFICATION	now we can remove ourself which will also remove the attached association ends edges
WITHOUT_CLASSIFICATION	list of model element listeners we have registered.
WITHOUT_CLASSIFICATION	we want to maintain a minimum width for the fig. also add the border dimensions to the minimum space required for its contents
WITHOUT_CLASSIFICATION	added this part to load the extra menu content
WITHOUT_CLASSIFICATION	owner related todo items
WITHOUT_CLASSIFICATION	fig related todo items
WITHOUT_CLASSIFICATION	intentional if there is nonsense in the field we do not set the value
WITHOUT_CLASSIFICATION	intentional if there is nonsense in the field we return false
WITHOUT_CLASSIFICATION	pass everything except editing events to superclass
WITHOUT_CLASSIFICATION	if the source of the event is an uml object then the uml model has been changed.
WITHOUT_CLASSIFICATION	the source of an association end should not be the classifier. if it is the user has drawn the wrong way round so we swap here.
WITHOUT_CLASSIFICATION	todo update setting
WITHOUT_CLASSIFICATION	end class crunnavigableassoc
WITHOUT_CLASSIFICATION	the extend label. it is not a true stereotype so do not use the stereotype support int y getnamefig .getbounds .height
WITHOUT_CLASSIFICATION	see org.tigris.gef.persistence.pgml.pgmlstackparser setattrs org.tigris.gef.presentation.fig org.xml.sax.attributes
WITHOUT_CLASSIFICATION	since body ever looks at the type of the diagram appearance event we can simplify from sending every existing event to one event only. but since there is no catch all event defined we just use one. rationale reduce the number of total refreshes of the drawing.
WITHOUT_CLASSIFICATION	a use case has an external separator. external means external to the compartment box. this horizontal line sticks out of the box and touches the ellipse edge.
WITHOUT_CLASSIFICATION	fail silently as we expect users to accidentally drop on to wrong component
WITHOUT_CLASSIFICATION	the diagram are always owned by the model in this first implementation.
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlcombobox2 umlcombobox2 umlcomboboxmodel action
WITHOUT_CLASSIFICATION	required for mouselistener interface but we only care about clicks
WITHOUT_CLASSIFICATION	4. make sure the only figgroups on a diagram are also fignodes the report
WITHOUT_CLASSIFICATION	no need to update if model element went away
WITHOUT_CLASSIFICATION	private utility routine to work out the positive x coordinate of a point on an oval given the radii and y coordinate. p todo use this to calculate the separator lines! param a radius in x direction param b radius in y direction param y y coordinate return positive x coordinate for the given y coordinate
WITHOUT_CLASSIFICATION	link the new include relationship in to the ends
WITHOUT_CLASSIFICATION	figassociationrole figassociationrole new figassociationrole
WITHOUT_CLASSIFICATION	newfc content
WITHOUT_CLASSIFICATION	gef sets a different fig than the one that we had at construction time so we need to set its color and width
WITHOUT_CLASSIFICATION	mark this as newly created. this is to get round the problem with creating figs for loaded comments that had stereotypes. they are saved with their dimensions including the stereotype but since we pretend the stereotype is not visible we add height the first time we render such a comment. this is a complete fudge and really we ought to address how comment objects with stereotypes are saved. but that will be hard work.
WITHOUT_CLASSIFICATION	place the edge on the layer and update the diagram
WITHOUT_CLASSIFICATION	update the priority of the critic to be the same priority as the decision
WITHOUT_CLASSIFICATION	end computeroute
WITHOUT_CLASSIFICATION	todo does this help?
WITHOUT_CLASSIFICATION	if this is not a circle to circle edge we default to let gef calculate edge route.
WITHOUT_CLASSIFICATION	? two iterations of refinement maybe should be a for loop
WITHOUT_CLASSIFICATION	recursively place all nodes pointed to by outgoing transitions. because of the recursive algorithm multiple outgoing transitions will end up very lopsided because one entire subgraph will be done before dealing with the other transition s . param seen set of nodes seen so far param node the node to collect neighbors for
WITHOUT_CLASSIFICATION	get the two ends of any valid edge
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.fignodemodelelement clone
WITHOUT_CLASSIFICATION	only allow binary associations
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.fignodemodelelement updatenametext
WITHOUT_CLASSIFICATION	see java.util.collection remove java.lang.object
WITHOUT_CLASSIFICATION	if the line angle is less than 3 degrees then snap the line straight
WITHOUT_CLASSIFICATION	todo associationrole
WITHOUT_CLASSIFICATION	a dependency potentially has many clients and suppliers. we only consider the first of each not clear that we should really accept the case where there is more than one of either
WITHOUT_CLASSIFICATION	add the node check that it is an actor or use case and add it to the model namespace.
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.state.ui.figstatevertex makeselection
WITHOUT_CLASSIFICATION	tell gef its changed
WITHOUT_CLASSIFICATION	add the element and place it in the namespace of the model
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.activity.ui.figactionstate getnotationprovidertype
WITHOUT_CLASSIFICATION	tell gef
WITHOUT_CLASSIFICATION	everything else is ok
WITHOUT_CLASSIFICATION	remove a node
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.layout.layouter getobject int
WITHOUT_CLASSIFICATION	remove an edge
WITHOUT_CLASSIFICATION	something was added nothing for us to worry about
WITHOUT_CLASSIFICATION	if it is concurrent and contains concurrent regions the bottom region has a minimum height
WITHOUT_CLASSIFICATION	invoke the parent constructor first
WITHOUT_CLASSIFICATION	this makes dragging connected edges very smooth. see org.tigris.gef.presentation.fig getclosestpoint java.awt.point
WITHOUT_CLASSIFICATION	invoke the parent refresh first
WITHOUT_CLASSIFICATION	give up if the assocation ends do not have a type defined
WITHOUT_CLASSIFICATION	end class stylepanelfigusecase
WITHOUT_CLASSIFICATION	initialize any other figs here
WITHOUT_CLASSIFICATION	only the head should be filled not the text
WITHOUT_CLASSIFICATION	notation settings are different since we know that at a minimum the isshowpath setting can change because with implement pathcontainer so we make sure that we have a private copy of the notation settings.
WITHOUT_CLASSIFICATION	name updating
WITHOUT_CLASSIFICATION	text fig to hold the include label
WITHOUT_CLASSIFICATION	2. the profile configuration holding noneditable applied profiles
WITHOUT_CLASSIFICATION	the include label. it is not a true stereotype so do not use the stereotype support
WITHOUT_CLASSIFICATION	try some action errors
WITHOUT_CLASSIFICATION	if the element import is in the old owned it means it must have been removed. make sure the associated model element is removed.
WITHOUT_CLASSIFICATION	by default we do not show the attribute check box. mark this object as a listener for the check box.
WITHOUT_CLASSIFICATION	add figs to the fignode in back to front order put this rectangle behind the rest so it goes first
WITHOUT_CLASSIFICATION	todo we should be able to just call renderingchanged on the child figs here instead of doing an updateoperations...
WITHOUT_CLASSIFICATION	make the line dashed
WITHOUT_CLASSIFICATION	list of objects. note this methods which read write this do not appear to be used.
WITHOUT_CLASSIFICATION	add an arrow with an open arrow head
WITHOUT_CLASSIFICATION	create a new version of the relevant fig
WITHOUT_CLASSIFICATION	the nodes at the two ends
WITHOUT_CLASSIFICATION	the next if clause is important for the deployment diagram it detects if the enclosing fig is a component in this case the container will be set for the owning interface
WITHOUT_CLASSIFICATION	link the new dependency in to the ends
WITHOUT_CLASSIFICATION	side effect this creates the fig
WITHOUT_CLASSIFICATION	by default do not show extension points
WITHOUT_CLASSIFICATION	use arbitrary dimensions for now.
WITHOUT_CLASSIFICATION	get the parent vector first
WITHOUT_CLASSIFICATION	formula for a is described in the overall class description.
WITHOUT_CLASSIFICATION	for an ellipse we can put the box in the middle
WITHOUT_CLASSIFICATION	if dm is the top state of the statemachine then it is not supposed to have incoming transitions.
WITHOUT_CLASSIFICATION	super returns 1 if any of gefs buttons was hit but maybe one of the not gef buttons
WITHOUT_CLASSIFICATION	make the edge go between nearest points
WITHOUT_CLASSIFICATION	now we are into processing each specific path item strategy. at the moment we only know pathitemplacement
WITHOUT_CLASSIFICATION	add menu to add an extension point or note. placed one before last so the properties entry is always last.
WITHOUT_CLASSIFICATION	modifier menu. placed one before last so the properties entry is always last.
WITHOUT_CLASSIFICATION	work out the radii of the ellipse a and b. the top right corner of the ellipse cartesian coordinates centered on the origin will be at x y
WITHOUT_CLASSIFICATION	result as integers rounded up. we ensure that the radii are integers for convenience.
WITHOUT_CLASSIFICATION	only for associations
WITHOUT_CLASSIFICATION	use the code from the figcircle not the one from fig.
WITHOUT_CLASSIFICATION	end class crinstancewithoutclassifier
WITHOUT_CLASSIFICATION	let us register for events from all modelelements that change the name or body text
WITHOUT_CLASSIFICATION	required for keylistener interface but not used
WITHOUT_CLASSIFICATION	register for name changes added extensionpoints and abstract makes the text italic. all figs need to listen to remove too
WITHOUT_CLASSIFICATION	register for extension points
WITHOUT_CLASSIFICATION	set bounds will be called from our superclass constructor before our constructor has run so make sure this gets set up if needed.
WITHOUT_CLASSIFICATION	in deploymentdiagrams the situation is not the same as in other diagrams only classes interfaces and objects can intersect each other while they are not the enclosingfig so you have to prouve only these elements.
WITHOUT_CLASSIFICATION	set up figtext to hold the condition.
WITHOUT_CLASSIFICATION	distribute the extra height over the visible compartments
WITHOUT_CLASSIFICATION	join all into a group
WITHOUT_CLASSIFICATION	new style importers do not create diagrams so we will do it based on the list of newelements that they created
WITHOUT_CLASSIFICATION	uml spec for extend does not call for name nor stereotype
WITHOUT_CLASSIFICATION	make sure the line is dashed
WITHOUT_CLASSIFICATION	set up the property panels for use case diagrams
WITHOUT_CLASSIFICATION	if we are using a fixed offset just add it and return no collision detection is done in this case
WITHOUT_CLASSIFICATION	the renderer should be a singleton
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.activity.ui.selectionactionstate getnewnodetype int
WITHOUT_CLASSIFICATION	allow all packages and classifiers..
WITHOUT_CLASSIFICATION	two points for line segment used to compute slope of path here note that this is the average slope not instantaneous so it will give screwy results near bends in the path
WITHOUT_CLASSIFICATION	try the predecessors
WITHOUT_CLASSIFICATION	mcompositestate
WITHOUT_CLASSIFICATION	end class crnavfrominterface
WITHOUT_CLASSIFICATION	cp1252 is often the default but windows 1252 is the name listed by charset.availablecharsets
WITHOUT_CLASSIFICATION	let the group recalculate its bounds and then tell gef we have finished.
WITHOUT_CLASSIFICATION	the clone method that should clone the jgraph with it is contents and the toolbar with it is contents. since both jgraph as the toolbar are coming from the gef framework cloning them will be hard work and should actually not be placed here but in a clone method of the jgraph and the toolbar. see java.lang.object clone
WITHOUT_CLASSIFICATION	we accept a package but not a model or a subsystem.
WITHOUT_CLASSIFICATION	if we do not exclude a model here then dropping the model on a usecase diagram causes a package to be drawn.
WITHOUT_CLASSIFICATION	empty list
WITHOUT_CLASSIFICATION	private constructor to enforce singleton
WITHOUT_CLASSIFICATION	although we register for notification of diagrams being deleted we currently depend on the targetmanager to assign a new target when this happens when we implement mdi and have our own list of open diagrams we can ressurect the use of this
WITHOUT_CLASSIFICATION	some convenience methods
WITHOUT_CLASSIFICATION	optimize for the normal case to minimize target changes
WITHOUT_CLASSIFICATION	read until the end section is found discard generated content
WITHOUT_CLASSIFICATION	select buttons
WITHOUT_CLASSIFICATION	the next associationend
WITHOUT_CLASSIFICATION	output directory
WITHOUT_CLASSIFICATION	no further listeners required in this case the rest is handled by the notationprovider and sub figs.
WITHOUT_CLASSIFICATION	compile checkbox
WITHOUT_CLASSIFICATION	todo the last argument recursive flag should be a selectable option
WITHOUT_CLASSIFICATION	skip backup files. this is actually a workaround for the cpp generator which always creates backup files it is a bug .
WITHOUT_CLASSIFICATION	todo the following is carried over from setowner but probably is not needed renderingchanged it does the following add as needed updatenametext updatestereotypetext updatestereotypeicon updatebounds damage
WITHOUT_CLASSIFICATION	todo this is using the default platform character encoding. specifying an encoding will produce more predictable results
WITHOUT_CLASSIFICATION	todo get saved default directory outputdirectorycombobox.getmodel .setselecteditem saveddir
WITHOUT_CLASSIFICATION	generate button
WITHOUT_CLASSIFICATION	iterate over all the associationends. we only have a problem if 1 there is an end connected to an interface and 2 an end other than that end is navigable.
WITHOUT_CLASSIFICATION	classify nodes by base path
WITHOUT_CLASSIFICATION	end at an interface? navigable other end?
WITHOUT_CLASSIFICATION	else ignore
WITHOUT_CLASSIFICATION	the following is a possible future improvement of the modelchanged function. michiel propose not to do this to keep architecture stable.
WITHOUT_CLASSIFICATION	generate the files
WITHOUT_CLASSIFICATION	does not really matter what set we use.
WITHOUT_CLASSIFICATION	todo changed from uml 1.4
WITHOUT_CLASSIFICATION	show filechooser to select outputdirectory
WITHOUT_CLASSIFICATION	end class classgenerationdialog
WITHOUT_CLASSIFICATION	end class tablemodelclasschecks
WITHOUT_CLASSIFICATION	try changing the direction of m7
WITHOUT_CLASSIFICATION	both ends must be classes otherwise there is nothing to merge
WITHOUT_CLASSIFICATION	argoeventpump.fireevent new argoimporterevent argoeventtypes.importer added gen
WITHOUT_CLASSIFICATION	check if this diagram already exists in the project
WITHOUT_CLASSIFICATION	todo should be improved so that it is recognized whether there is something selected that can actually be generated nothing selected in the diagram
WITHOUT_CLASSIFICATION	otherwise create a new classdiagram for the package.
WITHOUT_CLASSIFICATION	the class is in the diagram so we are on a second pass find the fig for this class can update its visible state.
WITHOUT_CLASSIFICATION	add edges for a 2 pass r.e. process we might have already added the class but not its edges
WITHOUT_CLASSIFICATION	java is the default module for historical reasons but it is not required to be there
WITHOUT_CLASSIFICATION	stores the action command into the umlplaintextdocument class which is also used for setproperty and getproperty
WITHOUT_CLASSIFICATION	the previous line helps but we better check again
WITHOUT_CLASSIFICATION	there is no need to test if classes is empty because the shouldbeenabled mechanism blanks out the possibility to choose this alternative in this case.
WITHOUT_CLASSIFICATION	not a suffixfilter selected so we take all
WITHOUT_CLASSIFICATION	a runtime exception that occurs when some internal test fails
WITHOUT_CLASSIFICATION	filter out all unchanged files
WITHOUT_CLASSIFICATION	take canvas scrolling into account. the implementation below does place the element correctly when the canvas has been scrolled.
WITHOUT_CLASSIFICATION	set the lastmodified value
WITHOUT_CLASSIFICATION	we can delete figs like figrects now too
WITHOUT_CLASSIFICATION	return arrays.copyof selectedfiles selectedfiles.length
WITHOUT_CLASSIFICATION	end class sourcepathdialog
WITHOUT_CLASSIFICATION	iss.setvalue countfiles i 1 10
WITHOUT_CLASSIFICATION	roughly equivalent to and derived from old import.dofile
WITHOUT_CLASSIFICATION	log.debug is a base or multiplicity
WITHOUT_CLASSIFICATION	end class crmulticomposite
WITHOUT_CLASSIFICATION	both ends must be navigable otherwise there is nothing to merge
WITHOUT_CLASSIFICATION	see javax.swing.jfilechooser approveselection
WITHOUT_CLASSIFICATION	see javax.swing.jfilechooser cancelselection
WITHOUT_CLASSIFICATION	add the non associationend edges such as comment edges that were originally attached to this and attach them to the new figassociation and make sure they are positioned correctly.
WITHOUT_CLASSIFICATION	do layout even if problems occurred during import
WITHOUT_CLASSIFICATION	the enumerationliteral uses a dedicated notation that supports parsing name1 name2 name3 and stereotypes. also supports deleting a literal by erasing text.
WITHOUT_CLASSIFICATION	add messages from caught exceptions
WITHOUT_CLASSIFICATION	update the discriminator if it changed
WITHOUT_CLASSIFICATION	select the correct diagram implicitly creates it
WITHOUT_CLASSIFICATION	add the element to the diagram
WITHOUT_CLASSIFICATION	do nothing this rect will always be transparent
WITHOUT_CLASSIFICATION	print an exception trace to a string buffer
WITHOUT_CLASSIFICATION	todo get the list of extended settings from the current language importer and add those too
WITHOUT_CLASSIFICATION	level 0 import detail
WITHOUT_CLASSIFICATION	level 1 import detail
WITHOUT_CLASSIFICATION	level 2 import detail
WITHOUT_CLASSIFICATION	if the user has selected modeplace either by a diagram tool or addtodiagram then we do not want to show the toolbelt items.
WITHOUT_CLASSIFICATION	build the configpanel
WITHOUT_CLASSIFICATION	select the level of import 0 classifiers only 1 classifiers plus feature specifications 2 full import feature detail
WITHOUT_CLASSIFICATION	super implementation found a hit
WITHOUT_CLASSIFICATION	get the extension panel for the configuration settings.
WITHOUT_CLASSIFICATION	end class cralreadyrealizes
WITHOUT_CLASSIFICATION	explorereventadaptor.getinstance .structurechanged projectbrowser.getinstance .getstatusbar .showprogress 0
WITHOUT_CLASSIFICATION	this is because of the senseless? all files filefilter
WITHOUT_CLASSIFICATION	parsing file x of z.
WITHOUT_CLASSIFICATION	progress bar
WITHOUT_CLASSIFICATION	no title looks better
WITHOUT_CLASSIFICATION	see java.util.collection size
WITHOUT_CLASSIFICATION	no need for trigger on specialization
WITHOUT_CLASSIFICATION	todo add filename ?
WITHOUT_CLASSIFICATION	crazy numbering scheme at work here. here is how the handle numbers are laid out. values 0 7 are defined by gef and go left to right top to bottom ie not clockwise or counterclockwise . values 10 14 zigzag north south west east southwest. if you can correctly guess where 15 will go you should buy a lottery ticket immediately. pre 10 0 1 2 12 3 4 13 14 5 6 7 11 pre
WITHOUT_CLASSIFICATION	cannot remove the last file
WITHOUT_CLASSIFICATION	cannot remove from existing one so create new one.
WITHOUT_CLASSIFICATION	error warning messagearea
WITHOUT_CLASSIFICATION	gbc.gridheight 10
WITHOUT_CLASSIFICATION	cancel close button
WITHOUT_CLASSIFICATION	see java.awt.event.componentlistener componentmoved java.awt.event.componentevent
WITHOUT_CLASSIFICATION	normal model elements are not allowed to have spaces but for states we make an exception
WITHOUT_CLASSIFICATION	end class crmergeclasses
WITHOUT_CLASSIFICATION	user closing the progress window is interpreted as cancel request
WITHOUT_CLASSIFICATION	panel for controls
WITHOUT_CLASSIFICATION	nothings left disable firing.
WITHOUT_CLASSIFICATION	most likely because of this is that someone deleted our target with the event pump turned off so we did not get notification. nothing we can do about it now and we are changing targets anyway so just log it.
WITHOUT_CLASSIFICATION	select an index.
WITHOUT_CLASSIFICATION	removed item in last position
WITHOUT_CLASSIFICATION	just quit
WITHOUT_CLASSIFICATION	the text box containing the problem messages
WITHOUT_CLASSIFICATION	continue and abort buttons
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.layout.layouter getobjects
WITHOUT_CLASSIFICATION	listeners
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.layout.layouter getminimumdiagramsize
WITHOUT_CLASSIFICATION	add an invisible button to be used when everything is off
WITHOUT_CLASSIFICATION	i am only prepared to go this far.
WITHOUT_CLASSIFICATION	removed to workaround problems with autosplit ocleditor.optionmask autosplit
WITHOUT_CLASSIFICATION	addonly command determines a changeability kind. todo removed from uml 2.x. phase out of ui tfm 20070529
WITHOUT_CLASSIFICATION	tabmodeltarget interface methods
WITHOUT_CLASSIFICATION	warn about inherited name conflicts different critic?
WITHOUT_CLASSIFICATION	classifier
WITHOUT_CLASSIFICATION	it is illegal in uml to have multiple elements in a namespace with the same name but if it happens keep them distinct so the user has a chance of catching the error. pick an arbitrary but stable collating order. we do not call them equal because otherwise one will get eliminated from the treeset where this comparator is used.
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.layout.layouter add org.argouml.uml.diagram.layout.layoutedobject
WITHOUT_CLASSIFICATION	list classes getcandidates return classes.size 0
WITHOUT_CLASSIFICATION	loop through the associations looking for one with aggregation
WITHOUT_CLASSIFICATION	our first button is invisible. selecting it deselects all visible buttons.
WITHOUT_CLASSIFICATION	non nls 1 non nls 1 make sure we have a recognized file extension non nls 1
WITHOUT_CLASSIFICATION	set editor s model
WITHOUT_CLASSIFICATION	code generation
WITHOUT_CLASSIFICATION	check ocl parsing constraints
WITHOUT_CLASSIFICATION	do not create a constraint
WITHOUT_CLASSIFICATION	parse and check specified constraint.
WITHOUT_CLASSIFICATION	utility is a namespace collection also not strictly required to have variables.
WITHOUT_CLASSIFICATION	split constraint body if user wants us to
WITHOUT_CLASSIFICATION	end class crzerolengthedge
WITHOUT_CLASSIFICATION	the constraint must be owned by a namespace
WITHOUT_CLASSIFICATION	if the euml.resources system property is defined then we are in a stand alone application else we are in an eclipse plug in. the euml.resource should contain the path to the org.eclipse.uml2.uml.resource jar plugin. non nls 1
WITHOUT_CLASSIFICATION	store constraint body
WITHOUT_CLASSIFICATION	verify the name property was correctly updated
WITHOUT_CLASSIFICATION	new constraint first time setdata is called
WITHOUT_CLASSIFICATION	checkassignidtoobject figassociationrole true true
WITHOUT_CLASSIFICATION	check name for consistency with spec
WITHOUT_CLASSIFICATION	this throws org.argouml.model.xmiexception unknown element in xmi file model because the uml 1.3 1.4 converter can only handle xmi 1.0 not 1.1
WITHOUT_CLASSIFICATION	set name
WITHOUT_CLASSIFICATION	end class crtoomanyattr
WITHOUT_CLASSIFICATION	also set name in constraint body added 03 14 2001
WITHOUT_CLASSIFICATION	replace name
WITHOUT_CLASSIFICATION	todo why is this ignored? tfm 20070110
WITHOUT_CLASSIFICATION	try predecessors
WITHOUT_CLASSIFICATION	forks have their own outgoing transitions critic
WITHOUT_CLASSIFICATION	create a new tagged value with the given type and value and add it to a modelelement.
WITHOUT_CLASSIFICATION	delete the model and make sure everything inside goes with it
WITHOUT_CLASSIFICATION	we have no model event listeners so no need to do anything
WITHOUT_CLASSIFICATION	initialize new todoitem
WITHOUT_CLASSIFICATION	dm is a transition
WITHOUT_CLASSIFICATION	the source of the transition is a pseudostate
WITHOUT_CLASSIFICATION	todo i18n do not use the empty string for this or it will not show in the list
WITHOUT_CLASSIFICATION	assertnotnull model.getumlfactory .buildnode model.getmetatypes .getstate
WITHOUT_CLASSIFICATION	this should not be necessary but let us be sure
WITHOUT_CLASSIFICATION	remember the system id of our root document so that we can write out profiles and linked models to a different file if requested
WITHOUT_CLASSIFICATION	this call could easily fall if there is e.g. no public default constructor. if it fails tweak the if else tree above to accommodate the parameter or check if we need to test the particular method at all.
WITHOUT_CLASSIFICATION	remove old listeners
WITHOUT_CLASSIFICATION	this is the xmi version used to encode the metamodel. we could parse deeper to pull out the actual uml version. the uml 1.4 version is at xmi xmi.header xmi.model xmi.version . the uml 2.1.1 metamodel does not actually seem to contain its version.
WITHOUT_CLASSIFICATION	one of everything
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.figtext settextfilled boolean
WITHOUT_CLASSIFICATION	mvw this can never happen is not it?
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlmodelelementlistmodel2 removeothermodeleventlisteners java.lang.object
WITHOUT_CLASSIFICATION	check that the model was initialized with the unspecified goal
WITHOUT_CLASSIFICATION	notationproviderfactory2.getinstance .addnotationprovider 1234 name mynp.class notationprovider notationprovider notationproviderfactory2.getinstance .getnotationprovider 1234 new object asserttrue test notation provider for 1234 not found notationprovider ! null
WITHOUT_CLASSIFICATION	object args newvalue
WITHOUT_CLASSIFICATION	if a message has a name and a named operation and a script with parameters but without name then show the operation name
WITHOUT_CLASSIFICATION	reuse change event
WITHOUT_CLASSIFICATION	this swaps the direction of m3
WITHOUT_CLASSIFICATION	try moving in a simple maner
WITHOUT_CLASSIFICATION	try creating a string from the generated modelelements
WITHOUT_CLASSIFICATION	set the child components to the heights in the array list calculating the height of any proportional component on the fly.
WITHOUT_CLASSIFICATION	the following uml 1.4 elements have been removed from uml 2.x so we do not bother testing them.
WITHOUT_CLASSIFICATION	this swaps the direction of m3 back the colon is obliged but the not and the 2nd dot also not
WITHOUT_CLASSIFICATION	if a message has a name and a named operation and an expression with no script then show the operation
WITHOUT_CLASSIFICATION	if a message has a name and a named operation and a script then show the script
WITHOUT_CLASSIFICATION	upper lower case
WITHOUT_CLASSIFICATION	todo this seems to be called at startup only so no check so far
WITHOUT_CLASSIFICATION	we want the b foo attribute that is the second in the list
WITHOUT_CLASSIFICATION	may only occur as child of the model or in a package
WITHOUT_CLASSIFICATION	for those things which we have already migrated to uml 2.x syntax we need to map them back to their uml 1.4 equivalents during the migration period.
WITHOUT_CLASSIFICATION	if event source is unknown or the event source is the container s target then update the field
WITHOUT_CLASSIFICATION	check the possibility that this is a promiscuous event
WITHOUT_CLASSIFICATION	remap specific classes
WITHOUT_CLASSIFICATION	a deployment diagram shows something about the whole model according to the uml spec but we rely on the caller to enforce that if desired.
WITHOUT_CLASSIFICATION	a deployment diagram shows something about the whole model according to the uml spec
WITHOUT_CLASSIFICATION	clean up our two models and the extent that we read profile in to
WITHOUT_CLASSIFICATION	ns is a namespace but not a package
WITHOUT_CLASSIFICATION	todo the following cleans up left overs from previous tests but preferably we should not have to do this...
WITHOUT_CLASSIFICATION	ommit root package name it is the model s root
WITHOUT_CLASSIFICATION	see java.awt.dnd.dragsourcelistener dragexit java.awt.dnd.dragsourceevent
WITHOUT_CLASSIFICATION	if we have a model but no list then build the list with preferred constructor. eventually all lists should be built this way.
WITHOUT_CLASSIFICATION	end class actioncopy
WITHOUT_CLASSIFICATION	see java.awt.datatransfer.clipboardowner lostownership java.awt.datatransfer.clipboard java.awt.datatransfer.transferable
WITHOUT_CLASSIFICATION	add a predicate for argouml s default capabilities
WITHOUT_CLASSIFICATION	parser.parseandupdate modelobject s
WITHOUT_CLASSIFICATION	todo user defined profile support untested currently t t userdefined n t t t filename n foo.profile n filename n t t t model n foo.profile.package n t t t model n t t userdefined n
WITHOUT_CLASSIFICATION	remove from the model
WITHOUT_CLASSIFICATION	assertnotnull model.getumlfactory .buildnode model.getmetatypes .getextend assertnotnull model.getumlfactory .buildnode model.getmetatypes .getinclude assertnotnull model.getumlfactory .buildnode model.getmetatypes .getusecaseinstance assertnotnull model.getumlfactory .buildnode model.getmetatypes .getextensionpoint ...
WITHOUT_CLASSIFICATION	it is a uml element that is not a modelelement
WITHOUT_CLASSIFICATION	projectbrowser exposes functionality not components. assertnotnull pb.gettabprops assertnotnull pb.getstatusbar
WITHOUT_CLASSIFICATION	let us see if this diagram has some figs on it
WITHOUT_CLASSIFICATION	no content of diagram
WITHOUT_CLASSIFICATION	thedetailspane.getnamedtab translator.localize tab.properties
WITHOUT_CLASSIFICATION	we cannot delete the last diagram
WITHOUT_CLASSIFICATION	we cannot delete the model itself
WITHOUT_CLASSIFICATION	commented out next piece to remove failure of testcase. the testcase is probably correct but the implementation of detailspane is not pane.gettabs .setselectedcomponent docpane pane.targetset e assertequals docpane pane.gettabs .getselectedcomponent
WITHOUT_CLASSIFICATION	todo we should also test that the object have been removed from their namespace. collection c model.getfacade .getownedelements p.getroot
WITHOUT_CLASSIFICATION	test for return parameters. they can also fail!
WITHOUT_CLASSIFICATION	argodiagram activediagram diagramutils.getactivediagram return activediagram instanceof umlclassdiagram
WITHOUT_CLASSIFICATION	simply create 3 usecases and an actor in a package with individual names
WITHOUT_CLASSIFICATION	usage of other sureremove method is legacy. they should be integrated.
WITHOUT_CLASSIFICATION	multiplicity multiplicityrange and all expression subtypes do not have 0 argument create methods so we special case them.
WITHOUT_CLASSIFICATION	the diagram contains figs so let us ask the user if he she is sure
WITHOUT_CLASSIFICATION	build extend these parameters seem to be in correct order add an extend. we do not need an assoc on the extending use case
WITHOUT_CLASSIFICATION	todo this catch block needs to be narrower and do something with the caught exception tfm 20071120 ignore
WITHOUT_CLASSIFICATION	ok button
WITHOUT_CLASSIFICATION	delete button
WITHOUT_CLASSIFICATION	get a node s name along with the name of its parent which we will use to find the factory to create it with.
WITHOUT_CLASSIFICATION	procede with the deletion in the model
WITHOUT_CLASSIFICATION	confirm with the user that he wants to delete presenting the list of settings to delete
WITHOUT_CLASSIFICATION	handle the simple cases anything very exotic will fail but that will be our clue that the test needs to be extended
WITHOUT_CLASSIFICATION	the user cancelled!
WITHOUT_CLASSIFICATION	custom button text
WITHOUT_CLASSIFICATION	0
WITHOUT_CLASSIFICATION	tests used to be coded to assume immediate event delivery. they have been modified to use flush where needed. tfm oldeventpolicy mfactoryimpl.geteventpolicy mfactoryimpl.seteventpolicy mfactoryimpl.event policy immediate
WITHOUT_CLASSIFICATION	try some predecessor errors
WITHOUT_CLASSIFICATION	the following will bring up a dialog box so cannot be run headless actionsupplier.actionperformed new actionevent this 0 foo
WITHOUT_CLASSIFICATION	setup a user defined profile which is not loaded by the model subsystem and contains a stereotype and this contains a tag definition
WITHOUT_CLASSIFICATION	if no project was entered on the command line try to reload the most recent project if that option is true
WITHOUT_CLASSIFICATION	object icon resourceloaderwrapper.lookupicon s putvalue action.name translator.localize s putvalue action.small icon icon set the tooltip string putvalue action.short description translator.localize s
WITHOUT_CLASSIFICATION	end class actionopenproject
WITHOUT_CLASSIFICATION	todo see if the new target has a tv that we can proxy
WITHOUT_CLASSIFICATION	try adding the default extension.
WITHOUT_CLASSIFICATION	we only have this here until we have stereotypes list on property panel
WITHOUT_CLASSIFICATION	end class actionsaveprojectas
WITHOUT_CLASSIFICATION	only need to this from super
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlcombobox umlcombobox umlcomboboxmodel action boolean
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlmodelelementlistmodel isvalidelement java.lang.object
WITHOUT_CLASSIFICATION	this action performs the layout and triggers a redraw of the editor pane. see java.awt.event.actionlistener actionperformed java.awt.event.actionevent
WITHOUT_CLASSIFICATION	constructor. p todo correct? param nodes the uml elements typically classifiers to generate. param inmodel code true code if the path is in the model.
WITHOUT_CLASSIFICATION	mdr has a hardcoded printstacktrace on all exceptions even if they are caught which is unsightly so we handle unknown elements ourselves rather than letting mdr throw an exception for us to catch. org netbeans lib jmi util logger.java this can be uses to disable logging. default output is system.err setproperty org.netbeans.lib.jmi.logger.filename org.netbeans.mdr.logger the property org.netbeans.lib.jmi.logger controls the minimum severity level for logging
WITHOUT_CLASSIFICATION	proxy methods for real umlmodelelementtaggedvalue
WITHOUT_CLASSIFICATION	only do this for classifiers
WITHOUT_CLASSIFICATION	rearrange the diagram layout
WITHOUT_CLASSIFICATION	compound critics
WITHOUT_CLASSIFICATION	make this thread interruptible if called from swingworker
WITHOUT_CLASSIFICATION	a problem if we found more than 1 aggregation
WITHOUT_CLASSIFICATION	targets ought to be uml objects or diagrams
WITHOUT_CLASSIFICATION	see org.argouml.model.commonbehaviorhelper setnodeinstance java.lang.object java.lang.object
WITHOUT_CLASSIFICATION	todo we should not need this as well as the above.
WITHOUT_CLASSIFICATION	check here if there are no incoming call actions if not then create an activation at the top of the lifeline
WITHOUT_CLASSIFICATION	end class tabprops
WITHOUT_CLASSIFICATION	not currently present as token in model.getfacade . nif runtruthtest model.getfacade .isaelement o model.getfacade .element nif runtruthtest model.getfacade .isaexpression o model.getfacade .expression nif runtruthtest model.getfacade .isaextensionpoint o model.getfacade .extension point nif runtruthtest model.getfacade .isafeature o model.getfacade .feature
WITHOUT_CLASSIFICATION	we have found a non static one that is not initialized.
WITHOUT_CLASSIFICATION	end class crillegalname
WITHOUT_CLASSIFICATION	see targettablemodelview gettargettablemodel
WITHOUT_CLASSIFICATION	ignore any error. the transaction may already have been unwound as part of exception processing by mdr
WITHOUT_CLASSIFICATION	if we do not have it find the trigger. if this fails it will keep its default value of null
WITHOUT_CLASSIFICATION	includes the the seq expr from the header javadoc the is not included in number it is always present
WITHOUT_CLASSIFICATION	see org.argouml.model.commonbehaviorhelper setreceiver java.lang.object java.lang.object
WITHOUT_CLASSIFICATION	put everything together
WITHOUT_CLASSIFICATION	if the model repository does not manage a di model then we must generate our figs by inspecting pgml
WITHOUT_CLASSIFICATION	make lists
WITHOUT_CLASSIFICATION	give the resolver.getidtoobjectmap entries priority over entries with the same uuid from resolver.getidtoobjectmaps because entries in resolver.getidtoobjectmaps are historic.
WITHOUT_CLASSIFICATION	make buttons
WITHOUT_CLASSIFICATION	override public final void setheadline string s setupheadanddesc
WITHOUT_CLASSIFICATION	ignored this event
WITHOUT_CLASSIFICATION	get the assocations and connections. no problem there is a separate critic if this is a binary association or is an association role.
WITHOUT_CLASSIFICATION	make buttons layout
WITHOUT_CLASSIFICATION	first element is e.g. the class but we need to have its namespace to recompute the offenders.
WITHOUT_CLASSIFICATION	make listeners
WITHOUT_CLASSIFICATION	private property prptodo private property prpproperties private property prpdocumentation private property prpstyle private property prpsource private property prpconstraints private property prptaggedvalues
WITHOUT_CLASSIFICATION	build namespace hierarchy like this g a b c d e f
WITHOUT_CLASSIFICATION	enumerate declaring class
WITHOUT_CLASSIFICATION	note although it is not shown in the uml 1.4 spec a templateargument appears to be a datavalue like multiplicityrange and can not be reused in multiple instances. the uml diagrams do not show it as a composition but it effectively is.
WITHOUT_CLASSIFICATION	get the next non return parameter. null if non left.
WITHOUT_CLASSIFICATION	gridbagconstraints gridbagconstraints3 new gridbagconstraints gridbagconstraints3.gridx 2 gridbagconstraints3.anchor gridbagconstraints.northwest gridbagconstraints3.insets new insets 5 5 0 0 gridbagconstraints3.gridy 3 gridbagconstraints gridbagconstraints2 new gridbagconstraints gridbagconstraints2.gridx 0 gridbagconstraints2.anchor gridbagconstraints.northwest gridbagconstraints2.insets new insets 5 5 0 0 gridbagconstraints2.gridy 3
WITHOUT_CLASSIFICATION	end of sourcepathcontrollerimpl class definition
WITHOUT_CLASSIFICATION	this is not a well formed model in a strict sense. see the multiplicity in uml 1.3 figure 2 5.
WITHOUT_CLASSIFICATION	sb.append model.getfacade .getname c
WITHOUT_CLASSIFICATION	always select properties panel if defaulttoproperties is true and if properties panel is appropriate for selected perspective
WITHOUT_CLASSIFICATION	sb.append string model.getfacade .getbody c
WITHOUT_CLASSIFICATION	a parameterized class can only be the client of a single binding
WITHOUT_CLASSIFICATION	add to the collection and round to look at the next one
WITHOUT_CLASSIFICATION	actionpaste.getinstance .setenabled globals.clipboard ! null !globals.clipboard.isempty
WITHOUT_CLASSIFICATION	for now just skip registering this and ignore the request but the real issue is that magicdraw serializes the same object in two different composition associations first in the referencing file and second in the referenced file
WITHOUT_CLASSIFICATION	the workarea is all the visible space except the menu toolbar and status bar. workarea is laid out as a bordersplitpane where the various components that make up the argo application can be positioned.
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.critics.critic addknowledgetype java.lang.string
WITHOUT_CLASSIFICATION	compare against all earlier operations. if there is a match we have found the problem
WITHOUT_CLASSIFICATION	make new column with labelledlayout
WITHOUT_CLASSIFICATION	create the return message modelelement with the interaction and the collaboration
WITHOUT_CLASSIFICATION	comment.name text field editing disabled
WITHOUT_CLASSIFICATION	comment.body text field editing disabled
WITHOUT_CLASSIFICATION	only change the background colour if it is supplied by the laf. otherwise leave look and feel to handle this itself.
WITHOUT_CLASSIFICATION	in this case the bounds are determined by the figedge
WITHOUT_CLASSIFICATION	the following calls are order dependent. not sure why but the layer add must come before the model add or we will end up with duplicate figures in the diagram. tfm
WITHOUT_CLASSIFICATION	todo defer most of this work if the panel is not visible tfm
WITHOUT_CLASSIFICATION	get the generic clarifier for this designer poster. see org.argouml.cognitive.poster getclarifier
WITHOUT_CLASSIFICATION	needs to be updated for changes in notation subsystem tfm string namestr notation.generate this getowner .trim getnamefig .settext namestr
WITHOUT_CLASSIFICATION	just returns false. see org.argouml.cognitive.poster canfixit org.argouml.cognitive.todoitem
WITHOUT_CLASSIFICATION	if there is only a single child and we are it is only parent set a hint for where to place it when we get to its row
WITHOUT_CLASSIFICATION	chooser.setselectedfile new file filename
WITHOUT_CLASSIFICATION	so let us do it the hard way
WITHOUT_CLASSIFICATION	we know this is a return action now. it must be pointing the opposite way to the activator.
WITHOUT_CLASSIFICATION	the figmessage that triggered this figactivation into existence
WITHOUT_CLASSIFICATION	todo real numbers not yet supported assertequals defaultoclevaluator.getinstance .evaluate null null 1.5 1.5
WITHOUT_CLASSIFICATION	anything else is handled the normal way
WITHOUT_CLASSIFICATION	create an image which will do deferred rendering of the gef diagram on demand as data is pulled from it
WITHOUT_CLASSIFICATION	layerperspective layer diagramutils.getactivediagram .getlayer
WITHOUT_CLASSIFICATION	if we have a currentact object that means have reached the end of the lifeline with a call or a create not returned. add the activation to the list after setting its height to end at the end of the lifeline.
WITHOUT_CLASSIFICATION	convert max x y to width height
WITHOUT_CLASSIFICATION	get a domimplementation
WITHOUT_CLASSIFICATION	skip the 2 lines ?xml version 1.0 encoding utf 8 ? !doctype pgml system pgml.dtd
WITHOUT_CLASSIFICATION	org.argouml.cognitive.critics
WITHOUT_CLASSIFICATION	correct lazy initialization of static field without further updates
WITHOUT_CLASSIFICATION	look for a tagdefinition matching the given name
WITHOUT_CLASSIFICATION	if is a message it must return the sender and the receiver of the message.
WITHOUT_CLASSIFICATION	return just the comment edges for a specific layer. todo document diagram layer? param diagram the diagram. return a link list with the edges.
WITHOUT_CLASSIFICATION	request that we be made visible if we are not? topleveltabbedpane.setselectedcomponent t
WITHOUT_CLASSIFICATION	if the added edge is a create message it will affect the position of the classifierrole so it should be repositioned
WITHOUT_CLASSIFICATION	handle multivalued tagged value
WITHOUT_CLASSIFICATION	super model.getfacade .getname op null
WITHOUT_CLASSIFICATION	target has been deleted
WITHOUT_CLASSIFICATION	if the row is past the end of our current collection return an empty string so they can add a new value
WITHOUT_CLASSIFICATION	utility function to add a listener for a given property name and remember the registration. param element element to listen for changes on param property name of property to listen for changes of see org.argouml.model.modeleventpump addmodeleventlistener propertychangelistener object string
WITHOUT_CLASSIFICATION	keep nagging until the user solves the problem this seems a nice way to nag
WITHOUT_CLASSIFICATION	tagvalue true
WITHOUT_CLASSIFICATION	end class todobyoffender
WITHOUT_CLASSIFICATION	override fignode implementation to keep setowner from getting called.
WITHOUT_CLASSIFICATION	we really should not add it until after it is set up but we need it to have an owner for the following method calls
WITHOUT_CLASSIFICATION	constants instance variables
WITHOUT_CLASSIFICATION	this next argument may be used to switch off the generation of sequence numbers this is still to be implemented. they are less desired in sequence diagrams since they do not add any information. in collaboration diagrams they are needed and they are still optional in sequence diagrams.
WITHOUT_CLASSIFICATION	since we are not sure of ordering fire event for whole table
WITHOUT_CLASSIFICATION	no way we have to give up
WITHOUT_CLASSIFICATION	the diagram already exists in this project. select it as the current target.
WITHOUT_CLASSIFICATION	do nothing during the deprecation period then it can be removed.
WITHOUT_CLASSIFICATION	if the classifier is not in the current diagram add it
WITHOUT_CLASSIFICATION	for performance we check if this is a selfmessage if it is we have just updated the activations
WITHOUT_CLASSIFICATION	this is done for compatibility with previous version move the argo.user.properties written before 0.25.4 to the new location if it exists.
WITHOUT_CLASSIFICATION	todo assumes public user pref for default visibility?
WITHOUT_CLASSIFICATION	see javax.swing.defaultlistmodel addelement java.lang.object
WITHOUT_CLASSIFICATION	there is a bug in gef where positioning nodes can affect edge positions. we need to do 3 iterations to protect against that.
WITHOUT_CLASSIFICATION	see org.argouml.application.events.argogeneratoreventlistener generatoradded org.argouml.application.events.argogeneratorevent
WITHOUT_CLASSIFICATION	see tudresden.ocl.check.types.type conformsto tudresden.ocl.check.types.type
WITHOUT_CLASSIFICATION	add an element listener and remember the registration. param element element to listen for changes on see org.argouml.model.modeleventpump addmodeleventlistener propertychangelistener object string
WITHOUT_CLASSIFICATION	multiplicityelement is now an interface implemented by element types that support multiplicities tfm
WITHOUT_CLASSIFICATION	end class actionimportfromsources
WITHOUT_CLASSIFICATION	self messages act differently so it is needed to move them separetly. only self messages of selected cr should be horizontally translated.
WITHOUT_CLASSIFICATION	see org.argouml.ui.abstractargojpanel spawn
WITHOUT_CLASSIFICATION	this is never downlighted...
WITHOUT_CLASSIFICATION	this one should work except java is not registered by default asserttrue settings.setnotationlanguage java assertequals java settings.getnotationlanguage
WITHOUT_CLASSIFICATION	only specified format are allowed.
WITHOUT_CLASSIFICATION	implementation note unlike many of the interfaces to the model there is no control to force a single instance of an xmireader. this is to allow work objects generated by the implementation to be garbage collected when an xmireader instance falls out of scope.
WITHOUT_CLASSIFICATION	populate our namespace hierarchy to the requested depth. total number of created elements is children maxlevel so be careful not to increase parameters too much.
WITHOUT_CLASSIFICATION	try changing namespace of element and make sure results track
WITHOUT_CLASSIFICATION	see org.omg.uml.diagraminterchange.adiagramelementproperty getproperty org.omg.uml.diagraminterchange.diagramelement
WITHOUT_CLASSIFICATION	by default the build already builds one default ep
WITHOUT_CLASSIFICATION	set the tooltip of the arrow to open combined tools
WITHOUT_CLASSIFICATION	create a generalizable element with an element without children.
WITHOUT_CLASSIFICATION	set the minimum and preferred equal so that the size is fixed for the labelledlayout.
WITHOUT_CLASSIFICATION	reopen the project and assert that the metaprofile is not part of the profile configuration including the fact that the stereotype critic is not found
WITHOUT_CLASSIFICATION	this will add a new modelelement event listener after update is complete
WITHOUT_CLASSIFICATION	we presume that the container equals this proppanel.
WITHOUT_CLASSIFICATION	in uml2 the tag definition is the attribute itself
WITHOUT_CLASSIFICATION	refresh the target for all our children which were not getting while not visible
WITHOUT_CLASSIFICATION	this works we do get an event and now refresh the ui
WITHOUT_CLASSIFICATION	to manage the case there are no label component pairs but just one component
WITHOUT_CLASSIFICATION	if the component is a jlabel which has another component assigned then position size the label and calculate the size of the registered component
WITHOUT_CLASSIFICATION	assumes the next child is the labelled component
WITHOUT_CLASSIFICATION	assert that the model element that depends on the profile is consistent
WITHOUT_CLASSIFICATION	todo what about objectnode? return org.eclipse.uml2.uml.objectnode.class
WITHOUT_CLASSIFICATION	project p projectmanager.getmanager .getcurrentproject collection elems modelmanagementhelper.gethelper .getallmodelelementsofkind mclassifier.class
WITHOUT_CLASSIFICATION	construct an exception with a message and a causing exception. param message the message param c the because of the exception public xmireferenceexception string message throwable c super message c
WITHOUT_CLASSIFICATION	allow listening to other elements removeothermodeleventlisteners listtarget
WITHOUT_CLASSIFICATION	setdoublebuffered true
WITHOUT_CLASSIFICATION	try some more complex moving
WITHOUT_CLASSIFICATION	the only way a region is set to null is if we are deleting the vertex in which case we do nothing special so that the removal of the state triggers a delete event.
WITHOUT_CLASSIFICATION	implements backspace functionality
WITHOUT_CLASSIFICATION	make a nice little target area
WITHOUT_CLASSIFICATION	see org.argouml.uml.notation.notationprovider parse java.lang.object java.lang.string
WITHOUT_CLASSIFICATION	a composite state contains at least one region
WITHOUT_CLASSIFICATION	todo gone from uml 2
WITHOUT_CLASSIFICATION	there is a selection
WITHOUT_CLASSIFICATION	todo not exact but close
WITHOUT_CLASSIFICATION	end class actioncut
WITHOUT_CLASSIFICATION	create a new project and assert that it has the metaprofile as part of the project s profile configuration
WITHOUT_CLASSIFICATION	allow listening to other elements addothermodeleventlisteners listtarget
WITHOUT_CLASSIFICATION	uninterpretedaction.class
WITHOUT_CLASSIFICATION	if there is a selection on the clipboard
WITHOUT_CLASSIFICATION	see org.argouml.profile.internal.ocl.modelinterpreter invokefeature java.util.hashmap java.lang.object java.lang.string java.lang.string java.lang.object
WITHOUT_CLASSIFICATION	get localised strings once only
WITHOUT_CLASSIFICATION	setting the icon
WITHOUT_CLASSIFICATION	see org.argouml.application.events.argonotationeventlistener notationchanged org.argouml.application.events.argonotationevent
WITHOUT_CLASSIFICATION	setting the tooltip to type and name
WITHOUT_CLASSIFICATION	see org.argouml.profile.profilemanager lookforregisteredprofile java.lang.string
WITHOUT_CLASSIFICATION	see org.argouml.persistence.saxparserbase handleendelement org.argouml.persistence.xmlelement
WITHOUT_CLASSIFICATION	in the next line replacing makeemptyproject by getcurrentproject fails the test except when run in eclipse. mvw i have no idea why.
WITHOUT_CLASSIFICATION	see org.argouml.persistence.memberfilepersister load org.argouml.kernel.project java.io.inputstream
WITHOUT_CLASSIFICATION	in uml2 a td is a property of a stereotype in a profile
WITHOUT_CLASSIFICATION	only update our model if we are visible
WITHOUT_CLASSIFICATION	this target is a statemachine for which no diagram exists yet so let us use it.
WITHOUT_CLASSIFICATION	end class tabtaggedvalues
WITHOUT_CLASSIFICATION	setenabled globals.clipboard ! null !globals.clipboard.isempty !issystemclipboardempty
WITHOUT_CLASSIFICATION	end class actionpaste
WITHOUT_CLASSIFICATION	the target is a valid context.
WITHOUT_CLASSIFICATION	style panels only apply when a fig is selected. see org.argouml.ui.tabtarget shouldbeenabled java.lang.object
WITHOUT_CLASSIFICATION	must not be used in uml2 we model a method as a opaquebehavior object that already has a body so there is no need to have an intermediate expression object
WITHOUT_CLASSIFICATION	try to get the corresponding body and set it to the current body this should work if all the bodies were stored with their corresponding languages.
WITHOUT_CLASSIFICATION	specify design issue category and knowledge type
WITHOUT_CLASSIFICATION	let us just build a statemachine and put it in a suitable namespace.
WITHOUT_CLASSIFICATION	upperpanel.setborder borderfactory.createetchedborder
WITHOUT_CLASSIFICATION	the model structure has changed significantly eg a new project. see org.argouml.ui.explorer.treemodelumleventlistener structurechanged
WITHOUT_CLASSIFICATION	buttonbox.add box.createrigidarea new dimension 0 20
WITHOUT_CLASSIFICATION	see org.argouml.ui.explorer.treemodelumleventlistener modelelementchanged java.lang.object
WITHOUT_CLASSIFICATION	string title getui .getdialogtitle this
WITHOUT_CLASSIFICATION	todo since there may be multiple top level elements in a project this should be using the default namespace currently undefined or something similar
WITHOUT_CLASSIFICATION	detach any non associationend edges such as comment edges already attached before this association node is removed. they will later be re attached to the new figassociation
WITHOUT_CLASSIFICATION	end class croppendconflict
WITHOUT_CLASSIFICATION	report a progress to the progressmonitor window. see org.argouml.application.api.progressmonitor updateprogress int
WITHOUT_CLASSIFICATION	if its an interface we have an interface end otherwise its something else and we should see if it is navigable. we do not check that the end is a classifier rather than its child classifierrole since we have effectively eliminated that possiblity in rejecting associationroles above.
WITHOUT_CLASSIFICATION	select.settext translator.localize action.select
WITHOUT_CLASSIFICATION	select.add actionaddeventasdeferrableevent.singleton
WITHOUT_CLASSIFICATION	newmenu.settext translator.localize action.new
WITHOUT_CLASSIFICATION	mextend
WITHOUT_CLASSIFICATION	this next line presumes that the 1st fig with this owner is the previous port and consequently nullifies the owner of this 1st fig.
WITHOUT_CLASSIFICATION	get the association and its connections. iterate over all the associationends and check that each connected classifier is in the same sub system or model
WITHOUT_CLASSIFICATION	repair action for possible np after load
WITHOUT_CLASSIFICATION	try some more errors
WITHOUT_CLASSIFICATION	see tudresden.ocl.parser.analysis.depthfirstadapter caseafeatureprimaryexpression tudresden.ocl.parser.node.afeatureprimaryexpression
WITHOUT_CLASSIFICATION	to be able to remove dependencies later
WITHOUT_CLASSIFICATION	todo removed from uml 2.x phase out usage tfm 20070530
WITHOUT_CLASSIFICATION	copy to new file and let the regular load code do the actual load
WITHOUT_CLASSIFICATION	end class actionaddattribute
WITHOUT_CLASSIFICATION	apparently this object had no getitemuid
WITHOUT_CLASSIFICATION	since uml2 it is easier tds only via stereotypes
WITHOUT_CLASSIFICATION	just mark for rebuild next time since we use lazy loading
WITHOUT_CLASSIFICATION	a stereotype got applied or removed just mark for rebuild next time since we use lazy loading
WITHOUT_CLASSIFICATION	see namespace pushnamespaceelement namespaceelement
WITHOUT_CLASSIFICATION	no concrete subclasses defined this class is useless
WITHOUT_CLASSIFICATION	all strings collate before all uml elements
WITHOUT_CLASSIFICATION	and then by their enclosing path to fully distinguish them
WITHOUT_CLASSIFICATION	elements are collated first by name hoping for a quick solution
WITHOUT_CLASSIFICATION	keep track of first non equal comparison to use in case the case insensitive comparisons all end up equal
WITHOUT_CLASSIFICATION	add the action to the component
WITHOUT_CLASSIFICATION	stop desiring the goal which should remove it from the model
WITHOUT_CLASSIFICATION	if the strings differed only in non primary characteristics at some point case accent etc pick an arbitrary but stable collating order.
WITHOUT_CLASSIFICATION	first verify that the set goal priority did not add an extra goal
WITHOUT_CLASSIFICATION	transient false volatile false
WITHOUT_CLASSIFICATION	argo customization
WITHOUT_CLASSIFICATION	prohibit instantiation
WITHOUT_CLASSIFICATION	keyevent.isactionkey method
WITHOUT_CLASSIFICATION	apparently this object had no getuuid
WITHOUT_CLASSIFICATION	apparently it had a getitemuid but we are not allowed to call it
WITHOUT_CLASSIFICATION	apparently this object had no setitemuid
WITHOUT_CLASSIFICATION	apparently it had a setitemuid but we are not allowed to call it
WITHOUT_CLASSIFICATION	class preloading so packages are there...
WITHOUT_CLASSIFICATION	...getpackage can return null s so we have to cater for this
WITHOUT_CLASSIFICATION	see java.lang.throwable printstacktrace java.io.printstream
WITHOUT_CLASSIFICATION	switch the value back off so that we will get notified again next time.
WITHOUT_CLASSIFICATION	ignore any nested exceptions. we do not want infinite loop.
WITHOUT_CLASSIFICATION	did not work.
WITHOUT_CLASSIFICATION	first step. create the panel if not already done and options are available. otherwise it retains its default value of null.
WITHOUT_CLASSIFICATION	likely a nosuchmethodexception or an illegalaccessexception loading invoking eawt.application methods
WITHOUT_CLASSIFICATION	if the target method returns a boolean use that as a hint
WITHOUT_CLASSIFICATION	for eclipse setup
WITHOUT_CLASSIFICATION	for ant setup
WITHOUT_CLASSIFICATION	when running from maven
WITHOUT_CLASSIFICATION	param node see tudresden.ocl.parser.analysis.depthfirstadapter caseastandarddeclarator tudresden.ocl.parser.node.astandarddeclarator
WITHOUT_CLASSIFICATION	if we are setting a handler enable the preferences menu item by calling com.apple.eawt.application reflectively
WITHOUT_CLASSIFICATION	override osxadapter.calltarget to send information on the file to be opened
WITHOUT_CLASSIFICATION	see tudresden.ocl.parser.analysis.depthfirstadapter caseamultiplicativeexpressiontail tudresden.ocl.parser.node.amultiplicativeexpressiontail
WITHOUT_CLASSIFICATION	ignore if the directory does not exist. this error will throw when running from the eclipse setup.
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.todoitem deselect
WITHOUT_CLASSIFICATION	there was a comment saying that the below has no cycles but classycle thinks there is a cycle here too so i believe there really is one tfm 20070702 org.argouml.uml.cognitive.critics
WITHOUT_CLASSIFICATION	just completed the first step where we make our choices. first see if we have a choice. we always should so print a rude message if we do not
WITHOUT_CLASSIFICATION	todo org.argouml.ui org.argouml.cognitive.ui fails due to subpackages todo org.argouml.cognitive org.argouml.cognitive.critics
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.checklist.checkitem expand java.lang.string java.lang.object
WITHOUT_CLASSIFICATION	org.argouml.kernel org.argouml.uml.diagram.ui why does this fail?
WITHOUT_CLASSIFICATION	do nothing by design
WITHOUT_CLASSIFICATION	obey the contract ourselves!
WITHOUT_CLASSIFICATION	register all of the event listener trackers
WITHOUT_CLASSIFICATION	remove all of the listeners
WITHOUT_CLASSIFICATION	fire all of the diagram events
WITHOUT_CLASSIFICATION	fire all of the generator events
WITHOUT_CLASSIFICATION	fire all of the help events
WITHOUT_CLASSIFICATION	fire all of the notation events
WITHOUT_CLASSIFICATION	keep track of total events fired
WITHOUT_CLASSIFICATION	keep track of which events fired
WITHOUT_CLASSIFICATION	x x
WITHOUT_CLASSIFICATION	initialize the event listener trackers which verify that all of the proper events were fired
WITHOUT_CLASSIFICATION	display events are fired on the swing event thread. we need to wait for them to be dispatched note if more display events are added to this test this one needs to be last
WITHOUT_CLASSIFICATION	todo mvw i think this has to be clone.namefig figsinglelinetext clonefig but have not the means to investigate since this code is not yet used. enable the menu items for copy paste to test... btw in some other fignodemodelelement classes i see the same mistake.
WITHOUT_CLASSIFICATION	counts each bit that has been fired
WITHOUT_CLASSIFICATION	resolvedcritic string list
WITHOUT_CLASSIFICATION	resolvedcritic critic listset
WITHOUT_CLASSIFICATION	the interface realization will be created in the client namespace client is a namespace
WITHOUT_CLASSIFICATION	resolvedcritic critic listset boolean
WITHOUT_CLASSIFICATION	testmc should now have an itemuid so we should be able to create without adding a new itemuid
WITHOUT_CLASSIFICATION	set enabled to false and check the opposite condition
WITHOUT_CLASSIFICATION	verify isrelevant not is false
WITHOUT_CLASSIFICATION	notsnoozedcm isrelevant checks if the critic is snoozed snooze the critic to verify isrelevant returns false
WITHOUT_CLASSIFICATION	see org.argouml.model.abstractmodeleventpump removemodeleventlistener java.beans.propertychangelistener java.lang.object java.lang.string
WITHOUT_CLASSIFICATION	unsnooze the critic to verify the critic is not relevant
WITHOUT_CLASSIFICATION	verify isrelevant is true
WITHOUT_CLASSIFICATION	verify isrelevant is still false
WITHOUT_CLASSIFICATION	isrelevant should now be true
WITHOUT_CLASSIFICATION	private static final stereotypeview stereotypeviewmap static stereotypeviewmap new stereotypeview 3 stereotypeview. stereotypeviewmap diagramappearance.stereotype view textual stereotypeview.textual stereotypeviewmap diagramappearance.stereotype view big icon stereotypeview.big icon stereotypeviewmap diagramappearance.stereotype view small icon stereotypeview.small icon
WITHOUT_CLASSIFICATION	isrelevant should still be true
WITHOUT_CLASSIFICATION	initialize the todolist
WITHOUT_CLASSIFICATION	add a todoitem
WITHOUT_CLASSIFICATION	if the current shortcut has been set but is void then the current shortcut is not set then the default value does not change
WITHOUT_CLASSIFICATION	redundantly add item again which should be ignored
WITHOUT_CLASSIFICATION	size should be 1 since addition of second item would have been ignored
WITHOUT_CLASSIFICATION	retrieve item
WITHOUT_CLASSIFICATION	remove item
WITHOUT_CLASSIFICATION	size should be 0 since item was removed
WITHOUT_CLASSIFICATION	initialize the goalmodel
WITHOUT_CLASSIFICATION	if the source of the event is an uml object e.g. the owner of this fig but not always only the owner is shown e.g. for a class also its attributes are shown then the uml model has been changed.
WITHOUT_CLASSIFICATION	change priority of unspecified goal so we can verify it was updated
WITHOUT_CLASSIFICATION	check that the model correctly updates a goal s priority
WITHOUT_CLASSIFICATION	test the removal of a goal
WITHOUT_CLASSIFICATION	number of goals should now be 0
WITHOUT_CLASSIFICATION	start desiring a goal which should add a goal and bump the size to 1
WITHOUT_CLASSIFICATION	number of goals should now be 1
WITHOUT_CLASSIFICATION	umlsequencediagram seqdiag new umlsequencediagram
WITHOUT_CLASSIFICATION	this test calls todolist.addelement which requires the model. we are able to get away with using the mock model.
WITHOUT_CLASSIFICATION	checkassignidtoobject seqdiag true true
WITHOUT_CLASSIFICATION	figedgenote has no uuid
WITHOUT_CLASSIFICATION	cmd api
WITHOUT_CLASSIFICATION	checkassignidtoobject fighistorystate true true
WITHOUT_CLASSIFICATION	checkassignidtoobject figstate true true
WITHOUT_CLASSIFICATION	todo this could just work off the names in the uml profile todo it does not look like it matches what is in the uml 1.4 spec
WITHOUT_CLASSIFICATION	we moused over an object just as it was deleted transient condition does not require i18n
WITHOUT_CLASSIFICATION	initialize a decision object with parameters
WITHOUT_CLASSIFICATION	if we have only one return value and without type the return param string is we remove it
WITHOUT_CLASSIFICATION	set the priority to a different value
WITHOUT_CLASSIFICATION	verify the priority was correctly updated
WITHOUT_CLASSIFICATION	set the name to a different value
WITHOUT_CLASSIFICATION	putnotationargument showassociationname getsettings .isshowassociationnames
WITHOUT_CLASSIFICATION	test that properties were correctly initialized by the constructor
WITHOUT_CLASSIFICATION	see java.awt.component getminimumsize sets minimum size to 120 100
WITHOUT_CLASSIFICATION	initialize the checklist
WITHOUT_CLASSIFICATION	add some test data
WITHOUT_CLASSIFICATION	verify the size of the list
WITHOUT_CLASSIFICATION	the trysave method results in the save taking place in another thread. if that completes without error the projectbrowser.exit method will be called which will actually exist the system.
WITHOUT_CLASSIFICATION	verify the items were correctly added
WITHOUT_CLASSIFICATION	the text the user has filled in the textfield is first checked to see if it is a valid multiplicity. if so then that is the multiplicity to be set. if not the input is rejected.
WITHOUT_CLASSIFICATION	create a new list to test the addall
WITHOUT_CLASSIFICATION	verify the size of the new list
WITHOUT_CLASSIFICATION	initialize the checkliststatus
WITHOUT_CLASSIFICATION	construct a checkitem
WITHOUT_CLASSIFICATION	see org.argouml.profile.profile getprofileidentifier
WITHOUT_CLASSIFICATION	reset the values to something different
WITHOUT_CLASSIFICATION	2 construct another checkitem
WITHOUT_CLASSIFICATION	comments
WITHOUT_CLASSIFICATION	test that the properties were correctly initialized
WITHOUT_CLASSIFICATION	initialize snoozeorder
WITHOUT_CLASSIFICATION	note that multiplicity is what is the notation is listening for in uml1.4 uppervalue are listened to in uml2. it is not currently why it is not required to register for lowervalue also.
WITHOUT_CLASSIFICATION	unsnooze and verify its been disabled
WITHOUT_CLASSIFICATION	test with a class in a package
WITHOUT_CLASSIFICATION	test with a class and an inner class
WITHOUT_CLASSIFICATION	it is quite possible that the because of the problem has by now been deleted in which case we will throw an exception if we try to change things. catch this tidily.
WITHOUT_CLASSIFICATION	nothing yet. later maybe something like
WITHOUT_CLASSIFICATION	put the statemachine in the namespace of the class
WITHOUT_CLASSIFICATION	end class projectmembermodel
WITHOUT_CLASSIFICATION	test with a package and a class and activity diagram
WITHOUT_CLASSIFICATION	the name of this type of object
WITHOUT_CLASSIFICATION	attempt to save this project under a new name.
WITHOUT_CLASSIFICATION	build the activity diagram
WITHOUT_CLASSIFICATION	we no longer send individual events so next code is obsolete
WITHOUT_CLASSIFICATION	curdecisioncm isrelevant checks to see if the critic has any decisions that have a priority 0 and less than the priority of the critic. by default the critic has no decisions so isrelevant should return false.
WITHOUT_CLASSIFICATION	we initialised java notation so let us activate it
WITHOUT_CLASSIFICATION	needed for initialisations
WITHOUT_CLASSIFICATION	set metaprofile as a default profile
WITHOUT_CLASSIFICATION	create a dependency from the project s model to the metaprofile
WITHOUT_CLASSIFICATION	remove the metaprofile from the project s profile configuration
WITHOUT_CLASSIFICATION	save the project into a new file
WITHOUT_CLASSIFICATION	adds all stereotypes defined at the profiles applied to the current namespace
WITHOUT_CLASSIFICATION	setup a user defined profile
WITHOUT_CLASSIFICATION	try guard iterator syntax
WITHOUT_CLASSIFICATION	assert that the project s model element that had a dependency to the metaprofile does not get inconsistent
WITHOUT_CLASSIFICATION	assert that the project s model elements that had a dependency to the uml profile for java are consistent
WITHOUT_CLASSIFICATION	add it to the project configuration
WITHOUT_CLASSIFICATION	maybe uml2 has these as constants somewhere
WITHOUT_CLASSIFICATION	create a dependency between the project s model and the user defined profile
WITHOUT_CLASSIFICATION	notation events are fired on the swing event thread. we assume that serializing on the final call is sufficient
WITHOUT_CLASSIFICATION	load the project
WITHOUT_CLASSIFICATION	remove the user defined profile and the directory where it is
WITHOUT_CLASSIFICATION	clean up after ourselves by deleting profile model
WITHOUT_CLASSIFICATION	test both forms of addbaseclass
WITHOUT_CLASSIFICATION	test remaining form of removebaseclass
WITHOUT_CLASSIFICATION	we put the targets backwards in the history since the first target in the addedtargets array is the first one selected.
WITHOUT_CLASSIFICATION	sets the value of an element s property tagged value . this method makes sure that a collection of values is set if and only if the property is multivalued upper multiplicity value greater 1 so passing a collection is safe. see org.argouml.model.extensionmechanismshelper setvalueoftag java.lang.object java.lang.object java.lang.object
WITHOUT_CLASSIFICATION	flag to enable performance testing off by default
WITHOUT_CLASSIFICATION	not implementable in uml2 because property is missing
WITHOUT_CLASSIFICATION	20 sec.
WITHOUT_CLASSIFICATION	add one child.
WITHOUT_CLASSIFICATION	if the target has changed notify the third party listener if it exists and dispatch a new element event listener to ourself. otherwise dispatch a target reasserted to ourself.
WITHOUT_CLASSIFICATION	performance testing parameters
WITHOUT_CLASSIFICATION	enabledcm isrelevant checks if the critic is enabled initialize this to true to verify isrelevant returns true
WITHOUT_CLASSIFICATION	add grandchild.
WITHOUT_CLASSIFICATION	check periodically to see if we have exceeded time limit
WITHOUT_CLASSIFICATION	convert the string e.g. aaa bbb ccc into separate stereotype names e.g. aaa bbb ccc .
WITHOUT_CLASSIFICATION	add another child.
WITHOUT_CLASSIFICATION	tree is created depth first so this should be at the bottom
WITHOUT_CLASSIFICATION	try some guard iterator errors
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.umldiagram getowner
WITHOUT_CLASSIFICATION	see junit.framework.testcase testcase string
WITHOUT_CLASSIFICATION	make sure we have a root model for tagdefinitions to get put in.
WITHOUT_CLASSIFICATION	create the tree of objects
WITHOUT_CLASSIFICATION	only targets we did not have allready count
WITHOUT_CLASSIFICATION	copy package p1 into p2 package
WITHOUT_CLASSIFICATION	change the structure in p1 package
WITHOUT_CLASSIFICATION	verify the copied package
WITHOUT_CLASSIFICATION	verify the copied class
WITHOUT_CLASSIFICATION	verify the copied nested package and the copied interface
WITHOUT_CLASSIFICATION	verify the copied attribute
WITHOUT_CLASSIFICATION	see if we can copy a class right off
WITHOUT_CLASSIFICATION	scale everything up
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.layout.layouter remove org.argouml.uml.diagram.layout.layoutedobject
WITHOUT_CLASSIFICATION	see if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	nothing is editable since a link takes its identity from the association. see org.argouml.uml.diagram.ui.figedgemodelelement canedit org.tigris.gef.presentation.fig
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.fignodemodelelement initnotationproviders java.lang.object
WITHOUT_CLASSIFICATION	see if we can copy a datatype right off
WITHOUT_CLASSIFICATION	this function will by design contain long lists of i18n keys. it might be tempting to shorten these by constructing them from the parts but please then consider that we might loose the possibility to build tools to statically check the property files against this file.
WITHOUT_CLASSIFICATION	see if we can copy an interface right off
WITHOUT_CLASSIFICATION	update an existing tagged value on a model element.
WITHOUT_CLASSIFICATION	verify all events were fired correctly
WITHOUT_CLASSIFICATION	see if we can copy a package right off
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.fignodemodelelement modelchanged java.beans.propertychangeevent
WITHOUT_CLASSIFICATION	see if we can copy a stereotype right off
WITHOUT_CLASSIFICATION	ignore non existent and empty names
WITHOUT_CLASSIFICATION	is the name already in the list of those seen if not add it and go on round.
WITHOUT_CLASSIFICATION	permission
WITHOUT_CLASSIFICATION	check to see if association still exists
WITHOUT_CLASSIFICATION	expected illegalargumentexception seen
WITHOUT_CLASSIFICATION	exception expected test success
WITHOUT_CLASSIFICATION	expected test success
WITHOUT_CLASSIFICATION	create a new arg list with a different set of args but same types
WITHOUT_CLASSIFICATION	if the new encloser is null and the old one is a component then the enclosed fig has been moved on the diagram. this causes the model to be adapted as follows remove the elementresidence between the enclosed and the oldencloser. see org.argouml.ui.argodiagram changefigencloser org.tigris.gef.presentation.fignode org.tigris.gef.presentation.fignode org.tigris.gef.presentation.fignode
WITHOUT_CLASSIFICATION	not static
WITHOUT_CLASSIFICATION	the transition has a name text box. it contains ul li the event signature li the guard condition between li the action expression ul p the content of the text box is generated by its own notationprovider. see org.argouml.uml.diagram.ui.figedgemodelelement getnotationprovidertype
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.umlmutablegraphsupport isremovefromdiagramallowed collection
WITHOUT_CLASSIFICATION	test passed
WITHOUT_CLASSIFICATION	the source was one of the referenced state s path which has got a new name.
WITHOUT_CLASSIFICATION	not uml1.4
WITHOUT_CLASSIFICATION	update the text labels and listeners. see org.argouml.uml.diagram.ui.fignodemodelelement modelchanged java.beans.propertychangeevent
WITHOUT_CLASSIFICATION	non existent in uml1
WITHOUT_CLASSIFICATION	place the comment fig on the nicest spot on the diagram
WITHOUT_CLASSIFICATION	returns list
WITHOUT_CLASSIFICATION	todo we do not currently have any settings that can change on a per fig basis so we can just use the project diagram defaults settings new diagramsettings rendersettings
WITHOUT_CLASSIFICATION	deleting the stereotype should cascade to the tagdefinition then the taggedvalue
WITHOUT_CLASSIFICATION	must be called after setimplementation.
WITHOUT_CLASSIFICATION	enumerate fields
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.static structure.layout.classdiagramnode calculateweight
WITHOUT_CLASSIFICATION	enumerate constructors
WITHOUT_CLASSIFICATION	indicate that the test was validated
WITHOUT_CLASSIFICATION	todo look up class in truth table
WITHOUT_CLASSIFICATION	listen also to the association of which the link is an instantiation since we want to update the rendering when the association name changes. see org.argouml.uml.diagram.ui.figedgemodelelement updatelisteners java.lang.object java.lang.object
WITHOUT_CLASSIFICATION	check superclass. make sure this class does not extend or reference non argouml classes
WITHOUT_CLASSIFICATION	valid elements for a stereotype to contain
WITHOUT_CLASSIFICATION	enumerate methods enumerate method arguments
WITHOUT_CLASSIFICATION	nif runtruthtest model.getfacade .isainteraction o model.getfacade .interaction
WITHOUT_CLASSIFICATION	nif untruthtest model.getfacade .isamethod o model.getmetatypes .getmethod
WITHOUT_CLASSIFICATION	end class wizmename
WITHOUT_CLASSIFICATION	runtruthtest model.getfacade .isarelationship o model.getmetatypes .getrelationship
WITHOUT_CLASSIFICATION	nif runtruthtest model.getfacade .isastructuralfeature o model.getmetatypes .getstructuralfeature nif runtruthtest model.getfacade .isataggedvalue o model.getmetatypes .gettaggedvalue
WITHOUT_CLASSIFICATION	specifies valid elements for an operation to contain
WITHOUT_CLASSIFICATION	log.log level.fine getdata returning raster translatedraster
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.fignodemodelelement textedited org.tigris.gef.presentation.figtext
WITHOUT_CLASSIFICATION	call methods that exists for all objects and that always return something meaningful
WITHOUT_CLASSIFICATION	find the create method in the offical api
WITHOUT_CLASSIFICATION	now get the factory implementation method to be invoked
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.stereotypecontainer isstereotypevisible
WITHOUT_CLASSIFICATION	here it is another object sent to the test.
WITHOUT_CLASSIFICATION	rule for project root top level elements. todo as currently implemented it returns all top level elements in the model repository not just those in a given project. since we only support a single project at a time currently these are equivalent but this will need to be enhanced with additional bookkeeping in project when we support multiple open projects tfm. todo i changed it to get the roots from the project. it was showing the profiles that were loaded but were not applied to the current project maurelio1234. author tom morris tfmorris gmail.com
WITHOUT_CLASSIFICATION	listen for a removeassociationevent between the comment and the annotated element. when recieved delete the commentedge and this figedgenote. see org.argouml.uml.diagram.ui.figedgemodelelement modelchanged java.beans.propertychangeevent
WITHOUT_CLASSIFICATION	make sure we start off clean
WITHOUT_CLASSIFICATION	the association should have same namespace as from class
WITHOUT_CLASSIFICATION	only one end should be navigable
WITHOUT_CLASSIFICATION	see tudresden.ocl.parser.analysis.depthfirstadapter outaintegerliteral tudresden.ocl.parser.node.aintegerliteral
WITHOUT_CLASSIFICATION	usecaseinstance gone in uml 2.x unused by argouml
WITHOUT_CLASSIFICATION	set up reader to be first filter in chain
WITHOUT_CLASSIFICATION	set namespace so buildassocationrole works
WITHOUT_CLASSIFICATION	end class wiznavigable
WITHOUT_CLASSIFICATION	end class crfinalsubclassed
WITHOUT_CLASSIFICATION	correct exception was thrown.
WITHOUT_CLASSIFICATION	if we are drawing to an edge then only allow if the start is a comment see org.argouml.uml.diagram.ui.modecreategraphedge isconnectionvalid org.tigris.gef.presentation.fig org.tigris.gef.presentation.fig
WITHOUT_CLASSIFICATION	build an activity graph with a single action state the way the gui would
WITHOUT_CLASSIFICATION	end class crnameconflictac
WITHOUT_CLASSIFICATION	this is a private method in model.
WITHOUT_CLASSIFICATION	end class crmultipleagg
WITHOUT_CLASSIFICATION	handling methods that does not return
WITHOUT_CLASSIFICATION	handling the isinitiated method
WITHOUT_CLASSIFICATION	handling the initialise method
WITHOUT_CLASSIFICATION	handle methods which return opaque objects
WITHOUT_CLASSIFICATION	one of the expected errors just ignore
WITHOUT_CLASSIFICATION	we should not get here but just in case... we want a wide exception catcher to make sure our transaction always gets ended
WITHOUT_CLASSIFICATION	could not find model.
WITHOUT_CLASSIFICATION	handle uml 1.4 metamodel which is a mof 1.3 model
WITHOUT_CLASSIFICATION	uml 1.4
WITHOUT_CLASSIFICATION	see org.argouml.ui.explorer.relocatable isrelocationallowed java.lang.object
WITHOUT_CLASSIFICATION	xmi 2.1
WITHOUT_CLASSIFICATION	uml 2.x
WITHOUT_CLASSIFICATION	xmi 1.1
WITHOUT_CLASSIFICATION	the only thing we need to deal with is updating is the condition text. see org.argouml.uml.diagram.ui.figedgemodelelement modelchanged java.beans.propertychangeevent
WITHOUT_CLASSIFICATION	only remap package if we did not remap specific class
WITHOUT_CLASSIFICATION	a few of our factories are slightly different than as declared in the uml 1.4 metamodel so we remap them here. metamodel argouml
WITHOUT_CLASSIFICATION	packages to be remapped
WITHOUT_CLASSIFICATION	subsystem has been removed from uml 2.x
WITHOUT_CLASSIFICATION	try the actions
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.figedgemodelelement getnamefig
WITHOUT_CLASSIFICATION	because uml 1.4 2.1 metamodels are organized differently we need to traverse the hierarchy looking for our owning package.
WITHOUT_CLASSIFICATION	specific classes to be remapped remap.put
WITHOUT_CLASSIFICATION	see tudresden.ocl.parser.analysis.depthfirstadapter outarealliteral tudresden.ocl.parser.node.arealliteral
WITHOUT_CLASSIFICATION	go the other way to lookup an element by path
WITHOUT_CLASSIFICATION	see org.argouml.uml.reveng.importcommon isminimisefigschecked
WITHOUT_CLASSIFICATION	see org.argouml.uml.reveng.importsettingsinternal isdescendselected
WITHOUT_CLASSIFICATION	see org.argouml.uml.reveng.settingstypes.booleanselection getdefaultvalue
WITHOUT_CLASSIFICATION	see org.argouml.uml.reveng.importcommon isdescendselected
WITHOUT_CLASSIFICATION	activitygraphs
WITHOUT_CLASSIFICATION	instance in uml 1.4 and classifier are abstract and not tested
WITHOUT_CLASSIFICATION	see org.argouml.application.api.progressmonitor updatesubtask java.lang.string
WITHOUT_CLASSIFICATION	extend include usecaseinstance extensionpoint not implemented
WITHOUT_CLASSIFICATION	we return a new list with the options instead of the options themself because we do not want the user to be able to change the options. see org.argouml.uml.reveng.settingstypes.uniqueselection getoptions
WITHOUT_CLASSIFICATION	reuse time event
WITHOUT_CLASSIFICATION	state is concrete in uml 1.3 but becomes abstract in uml 1.4 so we never allow it to be created and do not test creation
WITHOUT_CLASSIFICATION	new initprofilesubsystem .init
WITHOUT_CLASSIFICATION	this should work now that they both have names
WITHOUT_CLASSIFICATION	if method not supported ignore failure
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.sourcepathcontroller setsourcepath org.argouml.uml.ui.sourcepathtablemodel
WITHOUT_CLASSIFICATION	fine!
WITHOUT_CLASSIFICATION	translate clip graphic to match region of interest
WITHOUT_CLASSIFICATION	sequence diagrams are not shown as children of the collaboration that they show but as children of the classifier operation the collaboration represents. statediagrams and activitydiagrams are shown as children of the statemachine or activitygraph they belong to.
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlcombobox2 umlcombobox2 umlcomboboxmodel2 action boolean
WITHOUT_CLASSIFICATION	commonbehaviorfactory datatypesfactory extensionmechanismsfactory modelmanagementfactory
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umluserinterfacecontainer formatcollection java.util.iterator
WITHOUT_CLASSIFICATION	set up all parameters. some methods are invoked with primitives or collections so we need to create them accordingly
WITHOUT_CLASSIFICATION	the following should fail
WITHOUT_CLASSIFICATION	and leave things unchanged
WITHOUT_CLASSIFICATION	constructor.
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umluserinterfacecontainer getmodelelement
WITHOUT_CLASSIFICATION	constructor. param me an object
WITHOUT_CLASSIFICATION	reuse signal event
WITHOUT_CLASSIFICATION	reuse call event
WITHOUT_CLASSIFICATION	try creating a timeevent
WITHOUT_CLASSIFICATION	try changing the triggertype to changeevent
WITHOUT_CLASSIFICATION	nested class
WITHOUT_CLASSIFICATION	no need to check any further if we fail the 1st part.
WITHOUT_CLASSIFICATION	start testing stuff
WITHOUT_CLASSIFICATION	set the storage id for our repository so that mofids will be unique they are composed as storageid serialnumber . note the storage manager only looks for a few property names such as the storagefactoryclassname. everything else needs to be prefixed with mdrstorageproperty. which gets deleted from the property name before it and its associated value are copied to an internal property table separate from the system property table.
WITHOUT_CLASSIFICATION	try some errors
WITHOUT_CLASSIFICATION	if we cannot find a model return the outermost containing model element
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fignode getportfig java.lang.object
WITHOUT_CLASSIFICATION	see org.argouml.application.api.commandlineinterface docommand java.lang.string
WITHOUT_CLASSIFICATION	notation allows to add or modify things not remove. hence this does nothing
WITHOUT_CLASSIFICATION	end class crcircularinheritance
WITHOUT_CLASSIFICATION	the expected exception is thrown.
WITHOUT_CLASSIFICATION	both diagram types shall show sequence numbers when requested
WITHOUT_CLASSIFICATION	but the collaboration diagram refuses to leave them out
WITHOUT_CLASSIFICATION	see org.argouml.uml.util.namespace.namespace popnamespaceelement
WITHOUT_CLASSIFICATION	if the message has a name but no action then show the name
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlcomboboxmodel2 setselecteditem java.lang.object
WITHOUT_CLASSIFICATION	if a message has a name and a named operation then show the operation
WITHOUT_CLASSIFICATION	todo should there really be here?
WITHOUT_CLASSIFICATION	if a message has a name and a named operation and an empty script then show the operation
WITHOUT_CLASSIFICATION	if a message has a name and a named operation and a named script with parameters then show the script
WITHOUT_CLASSIFICATION	todo why is there a space before the here and not in case of the operation name?
WITHOUT_CLASSIFICATION	the action still has the argument from above.
WITHOUT_CLASSIFICATION	this is not a very useful transition
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getvisibilitykind
WITHOUT_CLASSIFICATION	mixed case
WITHOUT_CLASSIFICATION	see org.argouml.uml.util.namespace.namespace isempty
WITHOUT_CLASSIFICATION	a complex internal transition
WITHOUT_CLASSIFICATION	these are not entry exit do activities!
WITHOUT_CLASSIFICATION	long list of internals
WITHOUT_CLASSIFICATION	or should the 1 be 0 ?
WITHOUT_CLASSIFICATION	deleting it all
WITHOUT_CLASSIFICATION	if there is no script then the language should not be maintained.
WITHOUT_CLASSIFICATION	ret.setisleaf false ret.setisroot false
WITHOUT_CLASSIFICATION	success expected exception
WITHOUT_CLASSIFICATION	everything fine...
WITHOUT_CLASSIFICATION	create file
WITHOUT_CLASSIFICATION	this is the normal case.
WITHOUT_CLASSIFICATION	overridden purely to keep our superclass from removing the listener that we just added. see org.argouml.uml.diagram.ui.figedgemodelelement updatelisteners java.lang.object java.lang.object
WITHOUT_CLASSIFICATION	load a project which contains links to it
WITHOUT_CLASSIFICATION	test project readable files
WITHOUT_CLASSIFICATION	see org.argouml.model.modeleventpump addmodeleventlistener java.beans.propertychangelistener java.lang.object
WITHOUT_CLASSIFICATION	standard uml 1.4 profile
WITHOUT_CLASSIFICATION	create a default profile and record its contents
WITHOUT_CLASSIFICATION	see java.util.collection containsall java.util.collection
WITHOUT_CLASSIFICATION	write the profile out to a temp file
WITHOUT_CLASSIFICATION	read it back in to a new empty project
WITHOUT_CLASSIFICATION	setting up the dependent profile creation
WITHOUT_CLASSIFICATION	see org.argouml.model.collaborationshelper getallclassifierroles java.lang.object
WITHOUT_CLASSIFICATION	actual call that executes everything
WITHOUT_CLASSIFICATION	see org.argouml.model.commonbehaviorhelper getsource java.lang.object
WITHOUT_CLASSIFICATION	verifications
WITHOUT_CLASSIFICATION	returns the value of an element s property tagged value . this method makes sure that a collection of values is returned if and only if the property is multivalued upper multiplicity value greater 1 . see org.argouml.model.facade getvalueoftag java.lang.object java.lang.object
WITHOUT_CLASSIFICATION	see org.argouml.model.visibilitykind getpackage
WITHOUT_CLASSIFICATION	see org.argouml.model.pseudostatekind getjunction
WITHOUT_CLASSIFICATION	see org.argouml.model.directionkind getinparameter
WITHOUT_CLASSIFICATION	create profile model
WITHOUT_CLASSIFICATION	see org.argouml.model.pseudostatekind getshallowhistory
WITHOUT_CLASSIFICATION	see org.argouml.model.copyhelper copy java.lang.object java.lang.object make a copy of element in the given namespace. p this function is a dispatcher that calls the copyelement element namespace function from xxxfactory. p this function may fail and return null for any of the following reasons old li no copy function is known for element s type. li the copy function fails or throws. old param anelement is the element to copy. param ans the namespace return a copy of element or null. throws illegalargumentexception if element is null.
WITHOUT_CLASSIFICATION	save the profile into a xmi file
WITHOUT_CLASSIFICATION	called during teardown
WITHOUT_CLASSIFICATION	extend but only between two use cases. remember we draw from the extension port to the base port.
WITHOUT_CLASSIFICATION	remove leftovers from other tests
WITHOUT_CLASSIFICATION	there is a bug in the version of mdr 20050711 that we use that causes it to fail to delete aggregate elements which are single valued and where the aggregate end is listed second in the association defined in the metamodel. for the uml 1.4 metamodel this affects a statemachine s top statevertex and a transition s guard. see issue 4948 5227 tfm 20080713
WITHOUT_CLASSIFICATION	there seems to be cases where we do not erase the profile. let us make sure it is deleted.
WITHOUT_CLASSIFICATION	for a namespace pre 2 the operation allcontents results in a set containing all modelelements contained by the namespace. allcontents set modelelement allcontents self.contents where contents self.ownedelement union self.namespace contents pre p
WITHOUT_CLASSIFICATION	euluis using windows style initial path do not know if this fails in nixes.
WITHOUT_CLASSIFICATION	the following from the original nsuml implemenetation was attempting to implement wfr 1 from section 2.5.3.32 of the uml 1.4 spec but if there is an owner set no namespace is valid. the checks for this wfr if desired need to go in setowner and settype tfm
WITHOUT_CLASSIFICATION	ensure that model subsystem implementation does not remember the profiles by changing their names and directories
WITHOUT_CLASSIFICATION	but lookout it does not work both ways
WITHOUT_CLASSIFICATION	for a package pre 3 the operation allcontents results in a set containing the modelelements owned by or imported by the package or one of its ancestors. allcontents set modelelement allcontents self.contents union self.parent.allcontents select e e.elementownership.visibility public or e.elementownership.visibility protected where the required operations are defined as 1 the operation contents results in a set containing the modelelements owned by or imported by the package. contents set modelelement contents self.ownedelement union self.importedelement 2 the operation allimportedelements results in a set containing the modelelements imported by the package or one of its parents. allimportedelements set modelelement allimportedelements self.importedelement union self.parent.oclastype package .allimportedelements select re re.elementimport.visibility public or re.elementimport.visibility protected pre
WITHOUT_CLASSIFICATION	assertequals defaultoclevaluator.getinstance .evaluate vt mi x.ocliskindof classifier true
WITHOUT_CLASSIFICATION	on a headless system without display this will crash
WITHOUT_CLASSIFICATION	private jpanel propertypane
WITHOUT_CLASSIFICATION	contains instances of each modelelement used for testing so that we only use each modelelement once
WITHOUT_CLASSIFICATION	the next 3 restrictions for abstraction seem to be argo specific not something the uml spec requires tfm 20070215 there is no need for these because they arn t used by buildconnection b00 1 abstraction.class org.eclipse.uml2.uml.class.class org.eclipse.uml2.uml.class.class null abstraction.class org.eclipse.uml2.uml.package.class org.eclipse.uml2.uml.package.class null abstraction.class component.class interface.class null
WITHOUT_CLASSIFICATION	propertypane tabprops
WITHOUT_CLASSIFICATION	currently this is in this try block as it does not work propertypanel always has size 0 0
WITHOUT_CLASSIFICATION	make sure this test happens on the awt event thread
WITHOUT_CLASSIFICATION	jpanel docpane pane.gettab tabdocumentation.class
WITHOUT_CLASSIFICATION	the target list is empty re emptying it again should not generate any events
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getpseudostatekind
WITHOUT_CLASSIFICATION	new target is of type object refresh should not be called
WITHOUT_CLASSIFICATION	see org.tigris.swidgets.orientable setorientation orientation
WITHOUT_CLASSIFICATION	new target is a fig refresh should be called
WITHOUT_CLASSIFICATION	see java.util.list add int java.lang.object
WITHOUT_CLASSIFICATION	setting one target should generate one event
WITHOUT_CLASSIFICATION	new target is of type umlclassdiagram refresh should not be called
WITHOUT_CLASSIFICATION	todo we could check that the contents of the files differ.
WITHOUT_CLASSIFICATION	note if we switch to a persistent repository like the b tree repository we will want to keep the old extent s around
WITHOUT_CLASSIFICATION	new target is a modelelement refresh should not be called
WITHOUT_CLASSIFICATION	testing with subset of targets
WITHOUT_CLASSIFICATION	set same target again should not generate new events
WITHOUT_CLASSIFICATION	tabprops gets selected! so 2nd time right
WITHOUT_CLASSIFICATION	adding same targets list again should not generate new events
WITHOUT_CLASSIFICATION	adding same target again should not generate new events
WITHOUT_CLASSIFICATION	end class crinterfaceoperonly
WITHOUT_CLASSIFICATION	reverse order
WITHOUT_CLASSIFICATION	check for more literals separated
WITHOUT_CLASSIFICATION	now remove one target by setting subset
WITHOUT_CLASSIFICATION	if the destination is a datatype then reject
WITHOUT_CLASSIFICATION	ignore if the directory does not exist. this error will throw when running from the ant setup.
WITHOUT_CLASSIFICATION	note we have to do this due to leftovers from other tests being causing strange errors when running in eclipse.
WITHOUT_CLASSIFICATION	all tests should consider the threshold as inclusive value
WITHOUT_CLASSIFICATION	normally the extent should exist already but in the case of making an empty project we may not have an extent yet so create a default extent
WITHOUT_CLASSIFICATION	this test is a bit stupid but nevertheless...
WITHOUT_CLASSIFICATION	a a are offenders
WITHOUT_CLASSIFICATION	remove the first prefix because it may be an archive like magicdraw
WITHOUT_CLASSIFICATION	org.argouml.notation.providers fails because sub packages fail ? org.argouml.notation.providers.java org.argouml.notation.providers.uml org.argouml.notation fails because sub packages fail ? org.argouml.notation.ui
WITHOUT_CLASSIFICATION	everything ok
WITHOUT_CLASSIFICATION	same name same participants two offenders
WITHOUT_CLASSIFICATION	the user dropactions are ctrl shift action link ctrl action copy shift action move none action move
WITHOUT_CLASSIFICATION	same name different classes everything ok
WITHOUT_CLASSIFICATION	a a b b are offenders
WITHOUT_CLASSIFICATION	testcase drag something from another application into argouml and the explorer shows the drop icon instead of the nodrop.
WITHOUT_CLASSIFICATION	no offenders
WITHOUT_CLASSIFICATION	generalizations are not required to have unique names within a namespace
WITHOUT_CLASSIFICATION	and remember where we are about to draw the new ghost image
WITHOUT_CLASSIFICATION	all use cases and actors require associations hence all predicates evalulate to true
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.sourcepathcontroller getsourcepathsettings
WITHOUT_CLASSIFICATION	build association build association between actor and top use case.
WITHOUT_CLASSIFICATION	note this listener needs to always be active even if this tab is not visible
WITHOUT_CLASSIFICATION	see java.util.list set int java.lang.object
WITHOUT_CLASSIFICATION	see java.util.collection addall java.util.collection
WITHOUT_CLASSIFICATION	see java.util.collection toarray java.lang.object
WITHOUT_CLASSIFICATION	the graph should stay the same.
WITHOUT_CLASSIFICATION	build include it seems that the parameters for build include are just the other way round add an include we do not need to have associtions on one
WITHOUT_CLASSIFICATION	setup
WITHOUT_CLASSIFICATION	see java.util.list sublist int int
WITHOUT_CLASSIFICATION	real test
WITHOUT_CLASSIFICATION	see java.lang.object hashcode this is a rather bad hash solution but with the link equals object defined as below it is not possible to do better.
WITHOUT_CLASSIFICATION	some arbitrary bounds and settings unused in test
WITHOUT_CLASSIFICATION	make sure everything created gets deleted
WITHOUT_CLASSIFICATION	this needs to be a concrete metatype so we cannot use the general but abstract classifier. replace with its concrete subtypes.
WITHOUT_CLASSIFICATION	setup the project due to its use in sourcepathtablemodel ctor
WITHOUT_CLASSIFICATION	create a class model element
WITHOUT_CLASSIFICATION	the property value has changed so rebuild our view. see java.beans.propertychangelistener propertychange java.beans.propertychangeevent
WITHOUT_CLASSIFICATION	save the project
WITHOUT_CLASSIFICATION	return a package to use as the namespace.
WITHOUT_CLASSIFICATION	disable event delivery during model load
WITHOUT_CLASSIFICATION	restore original event policy not supported by mdr tfm mfactoryimpl.seteventpolicy oldeventpolicy
WITHOUT_CLASSIFICATION	make sure we always have a default extent. the old extent will get deleted as part of creating the new extent.
WITHOUT_CLASSIFICATION	assertnotnull actionsupplier.getvalue action.small icon
WITHOUT_CLASSIFICATION	cont.settarget elem
WITHOUT_CLASSIFICATION	testing with more than one since it failed with a manual test i made.
WITHOUT_CLASSIFICATION	assertnotnull actionclient.getvalue action.small icon
WITHOUT_CLASSIFICATION	the following will bring up a dialog box so cannot be run headless actionclient.actionperformed new actionevent this 0 foo
WITHOUT_CLASSIFICATION	refresh the table when a critique is enabled disabled see java.util.observer update java.util.observable java.lang.object
WITHOUT_CLASSIFICATION	create a new empty project
WITHOUT_CLASSIFICATION	inconclusive
WITHOUT_CLASSIFICATION	add the profile stereotype to the class
WITHOUT_CLASSIFICATION	add the profile to the project configuration
WITHOUT_CLASSIFICATION	use a transaction to avoid the performance penalty 3x of mdr s autocommit mode
WITHOUT_CLASSIFICATION	this works when running the test from within eclipse. apparently eclipse runs the tests using a class loader that has the tests folder among the url s.
WITHOUT_CLASSIFICATION	disable the buttons for now since no selection has been made yet
WITHOUT_CLASSIFICATION	create a class in the project model
WITHOUT_CLASSIFICATION	if we are setting a handler enable the about menu item by calling com.apple.eawt.application reflectively
WITHOUT_CLASSIFICATION	set the screen layout to what the user left it before or to reasonable defaults.
WITHOUT_CLASSIFICATION	autoscroll interface... the following code was borrowed from the book java swing by robert eckstein marc loy dave wood paperback 1221 pages 1 ed edition september 1998 o reilly associates isbn 156592455x the relevant chapter of which can be found at http www.oreilly.com catalog jswing chapter dnd.beta.pdf
WITHOUT_CLASSIFICATION	calcbounds
WITHOUT_CLASSIFICATION	for classifiers
WITHOUT_CLASSIFICATION	case 1 after ...
WITHOUT_CLASSIFICATION	initialize the model and profile subsystems to simulate a fresh argouml session
WITHOUT_CLASSIFICATION	see tudresden.ocl.parser.analysis.depthfirstadapter casealiteralcollection tudresden.ocl.parser.node.aliteralcollection
WITHOUT_CLASSIFICATION	we have the path provided from the build script.
WITHOUT_CLASSIFICATION	check the localized parts.
WITHOUT_CLASSIFICATION	wait for all model subsystem events to be delivered
WITHOUT_CLASSIFICATION	wait for all awt events to be dispatched and processed
WITHOUT_CLASSIFICATION	this is null as until the first stereotype declaration is seen. after that it is non null.
WITHOUT_CLASSIFICATION	newop.setownerscope op.getownerscope not needed in case of operation
WITHOUT_CLASSIFICATION	see tudresden.ocl.parser.analysis.depthfirstadapter casealetexpression tudresden.ocl.parser.node.aletexpression
WITHOUT_CLASSIFICATION	model.getextensionmechanismsfactory .buildtaggedvalue tagname new string true model.getfacade .getroot umlobject
WITHOUT_CLASSIFICATION	read xsltstream into a temporary file get url for temp file. openstream from url and wrap in streamsource
WITHOUT_CLASSIFICATION	this function only sets the color of the divider line since that is the only visible part and can be used to make the divider line invisible for the top region in a composite state. see org.tigris.gef.presentation.fig setlinecolor java.awt.color
WITHOUT_CLASSIFICATION	tree value isselected do not want a colored background isexpanded isleaf row not important for rendering hasfocus do not want a focus rectangle
WITHOUT_CLASSIFICATION	only work for associatins
WITHOUT_CLASSIFICATION	we need to find the stereotype with the name create and the base class behavioralfeature in the model. if there is none then we create one and put it there.
WITHOUT_CLASSIFICATION	see javax.management.notificationemitter removenotificationlistener javax.management.notificationlistener javax.management.notificationfilter java.lang.object
WITHOUT_CLASSIFICATION	if this composite state is not attached to a statemachine it is not the toplevel composite state.
WITHOUT_CLASSIFICATION	if this was an association then there will be relevant information to fetch out of the mode arguments. if it not an association then these will be passed forward harmlessly as null.
WITHOUT_CLASSIFICATION	find selected rows and make a list of the model elements that are selected
WITHOUT_CLASSIFICATION	always fire changes in the case something has changed in the composition of the taggedvalues collection.
WITHOUT_CLASSIFICATION	cmdpaste cmd new cmdpaste cmd.doit
WITHOUT_CLASSIFICATION	ignored highly unlikely and what would we do anyway? log it
WITHOUT_CLASSIFICATION	stereotypes applied to the target mostly control which tds but see below for other listeners too
WITHOUT_CLASSIFICATION	overridden to make it possible to include a statevertex in a composite state. see org.tigris.gef.presentation.fig setenclosingfig org.tigris.gef.presentation.fig
WITHOUT_CLASSIFICATION	todo add referencevalue for tagged values which have a non primitive type
WITHOUT_CLASSIFICATION	see tudresden.ocl.check.types.type navigatequalified java.lang.string tudresden.ocl.check.types.type
WITHOUT_CLASSIFICATION	add a decision but set the critic priority to 0 so isrelevant should still be false
WITHOUT_CLASSIFICATION	because the notation events get dispatched on the swing event thread we need to use invokeandwait to make sure that we do not return until they have been delivered
WITHOUT_CLASSIFICATION	parent is element but it has no attributes or associations to check checkelementcopy e1 e2
WITHOUT_CLASSIFICATION	extra careful now not to keep any references to the second argument.
WITHOUT_CLASSIFICATION	auto create a return message for a call message
WITHOUT_CLASSIFICATION	see tudresden.ocl.check.types.modelfacade getclassifier java.lang.string
WITHOUT_CLASSIFICATION	get the source of the return message
WITHOUT_CLASSIFICATION	get the dest of the return message
WITHOUT_CLASSIFICATION	see tudresden.ocl.parser.analysis.depthfirstadapter caseafeaturecallparameters tudresden.ocl.parser.node.afeaturecallparameters
WITHOUT_CLASSIFICATION	fig spf null fig dpf null fignode sfn null fignode dfn null
WITHOUT_CLASSIFICATION	see tudresden.ocl.parser.analysis.depthfirstadapter caseaadditiveexpressiontail tudresden.ocl.parser.node.aadditiveexpressiontail
WITHOUT_CLASSIFICATION	if the event originated from the window w glass pane consume the event
WITHOUT_CLASSIFICATION	see java.lang.throwable printstacktrace java.io.printwriter
WITHOUT_CLASSIFICATION	add gui internal stuff. gui internal stuff is panes tabs menu items that are part of the gui subsystem i.e. a class in the org.argouml.ui package. things that are not part of the gui like everything that has any knowledge about uml diagrams code generation reverse engineering creates and registers itself when that subsystem or module is loaded.
WITHOUT_CLASSIFICATION	see tudresden.ocl.parser.analysis.depthfirstadapter caseapostfixexpressiontail tudresden.ocl.parser.node.apostfixexpressiontail
WITHOUT_CLASSIFICATION	this is perfectly normal and happens among other things within the call to setdiagram below .
WITHOUT_CLASSIFICATION	iterate through the tabbed panels to determine whether they should be enabled.
WITHOUT_CLASSIFICATION	tabs.addtab translator.localize dialog.find.tab.name and location nameloctab
WITHOUT_CLASSIFICATION	tablemodel.settarget target table.setmodel tablemodel
WITHOUT_CLASSIFICATION	see tudresden.ocl.parser.analysis.depthfirstadapter outabooleanliteral tudresden.ocl.parser.node.abooleanliteral
WITHOUT_CLASSIFICATION	if the current shortcut has not been set then the actual shortcut value is the default one
WITHOUT_CLASSIFICATION	see javax.swing.plaf.metal.metaltheme getcontroltextfont
WITHOUT_CLASSIFICATION	if the user cancelled the operation we do not have to save anything
WITHOUT_CLASSIFICATION	generate and register the osxadapter passing the methods we wish to use as delegates for various com.apple.eawt.applicationlistener methods
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getcopyhelper
WITHOUT_CLASSIFICATION	todo no links in uml 2
WITHOUT_CLASSIFICATION	see tudresden.ocl.parser.analysis.depthfirstadapter caseaexpressionlistorrange tudresden.ocl.parser.node.aexpressionlistorrange
WITHOUT_CLASSIFICATION	log.log level.fine result.x result.y theta theta 180 math.pi dx dx dy dy
WITHOUT_CLASSIFICATION	the uml object wrong end of the edge
WITHOUT_CLASSIFICATION	tests if enter is pressed in the bbodfield so we need to set the target bounds. see java.awt.event.keylistener keytyped java.awt.event.keyevent
WITHOUT_CLASSIFICATION	we are going to add the ones still valid new ones in the right sequence
WITHOUT_CLASSIFICATION	this is safe because getname always returns a string of some type
WITHOUT_CLASSIFICATION	if the new edge implements the mouselistener interface it has to receive the mousereleased event
WITHOUT_CLASSIFICATION	user feedback
WITHOUT_CLASSIFICATION	graphfactory implementation
WITHOUT_CLASSIFICATION	adapted from selectionwbuttons from line 280 calls a helper method to avoid this edge disappearing if the new source and dest are the same node.
WITHOUT_CLASSIFICATION	give up if we are already on the graph. this is a bit inconistent with canaddnode above.
WITHOUT_CLASSIFICATION	see javax.swing.abstractaction.abstractaction java.lang.string
WITHOUT_CLASSIFICATION	link the new extend relationship in to the ends. remember we draw from the extension use case to the base use case.
WITHOUT_CLASSIFICATION	todo this is using the default platform character encoding specifying an encoding will produce more predictable results
WITHOUT_CLASSIFICATION	next line does give user.home back but this is not compliant with how the project.uri works and therefore open and save project as give different starting directories. string directory globals.getlastdirectory
WITHOUT_CLASSIFICATION	correct the activator value
WITHOUT_CLASSIFICATION	see java.awt.window dispose
WITHOUT_CLASSIFICATION	although we have historically written out the doctype the dtd does not actually exist and this line will get stripped by the .uml file persister !doctype profile system profile.dtd n
WITHOUT_CLASSIFICATION	check that the tag definition is returned by link umltagdefinitioncomboboxmodel getapplicabletagdefinitions object
WITHOUT_CLASSIFICATION	remember to change this if you change the number of mes with source path settings
WITHOUT_CLASSIFICATION	make sure there is the minimum gap above the message being drawn
WITHOUT_CLASSIFICATION	make sure there is the minimum gap below the message being drawn
WITHOUT_CLASSIFICATION	if we are not provided a namespace then get it from the diagram or the root
WITHOUT_CLASSIFICATION	link the previous next reference of the swimlanes according to the x order.
WITHOUT_CLASSIFICATION	catches a mouseevent and calls mysingleclick and mydoubleclick if a tab is clicked which is selected. see java.awt.event.mouselistener mouseclicked mouseevent
WITHOUT_CLASSIFICATION	make space for the clarifier for vertical symmetry margin between text and border
WITHOUT_CLASSIFICATION	fig accessors
WITHOUT_CLASSIFICATION	see org.tigris.gef.graph.graphlistener edgeremoved org.tigris.gef.graph.graphevent
WITHOUT_CLASSIFICATION	cannot have a connection between 2 interfaces get the other end type
WITHOUT_CLASSIFICATION	only work for associations
WITHOUT_CLASSIFICATION	use asize to build up the minimum size. start with the size of the name fig and build up.
WITHOUT_CLASSIFICATION	see javax.swing.event.menulistener menudeselected javax.swing.event.menuevent
WITHOUT_CLASSIFICATION	our angle theta is arctan opposite adjacent because y increases going down the screen positive angles are clockwise rather than counterclockwise
WITHOUT_CLASSIFICATION	if we are the dest and is a call action create the activation but do not add it until the height is set.
WITHOUT_CLASSIFICATION	if we are the destination of a create action create the entire activation
WITHOUT_CLASSIFICATION	if we are the target of a destroy action the figlifeline ends here and we add the activation
WITHOUT_CLASSIFICATION	if we are the source of a return action the activation ends here.
WITHOUT_CLASSIFICATION	see java.util.list remove int
WITHOUT_CLASSIFICATION	we do nothing. no call to the parent
WITHOUT_CLASSIFICATION	compares obj1 and obj2 sorting by user object type then name. diagrams are sorted first then packages then other types. sorts by name within type groups. nulls are sorted first for names. see java.util.comparator compare java.lang.object java.lang.object
WITHOUT_CLASSIFICATION	we do not recalculate activations just move them
WITHOUT_CLASSIFICATION	if is a classifier role it must return all the related messages.
WITHOUT_CLASSIFICATION	comments from anywhere in the model are allowed
WITHOUT_CLASSIFICATION	argument can be an instanceof a fig which we ignore
WITHOUT_CLASSIFICATION	all other types of elements must be in this namespace
WITHOUT_CLASSIFICATION	add all of the test items from the first list
WITHOUT_CLASSIFICATION	1 test that the properties were correctly initialized
WITHOUT_CLASSIFICATION	this is not the correct location to set the cursor. the commented out code illustrates the calculation of coordinates. see java.awt.dnd.dragsourcelistener dragover java.awt.dnd.dragsourcedragevent
WITHOUT_CLASSIFICATION	no problem if this is an association role.
WITHOUT_CLASSIFICATION	we initialize the coordinates.
WITHOUT_CLASSIFICATION	limit our retries in case its too hard to get free
WITHOUT_CLASSIFICATION	we do nothing
WITHOUT_CLASSIFICATION	do string compare of names of uml objects. comparison is case insensitive using a primary strength collator in the user s locale. see java.util.comparator compare java.lang.object java.lang.object
WITHOUT_CLASSIFICATION	manage if cursor x is less than lastx1
WITHOUT_CLASSIFICATION	manage if cursor x is more than lastx2
WITHOUT_CLASSIFICATION	manage changes of direction...
WITHOUT_CLASSIFICATION	alternatively we could reduce the height of the fig by the height of this one hidden compartment. but that would not be possible for the width so we better return to minimal dimensions overall.
WITHOUT_CLASSIFICATION	i have no direction yet
WITHOUT_CLASSIFICATION	see org.tigris.gef.base.pathconv applyoffsetamount java.awt.point java.awt.point int java.awt.point
WITHOUT_CLASSIFICATION	we move down or up the messages that are downward the broom
WITHOUT_CLASSIFICATION	we draw a cross
WITHOUT_CLASSIFICATION	we do not let the user move the messages horizontally.
WITHOUT_CLASSIFICATION	if the edge is near the bottom of the classifier roles we enlarge all the figclassifierroles in the diagram.
WITHOUT_CLASSIFICATION	we need the edge to be complete
WITHOUT_CLASSIFICATION	the initial x is the left side of the activation
WITHOUT_CLASSIFICATION	put the x at the right side of the activation if needed
WITHOUT_CLASSIFICATION	if the y coordinate is before the classifier role y we place the start in the corner of the fighead.
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig setboundsimpl int int int int override setbounds to keep shapes looking right.
WITHOUT_CLASSIFICATION	if the y coordinate is inside the head the x must be in the border of the headfig.
WITHOUT_CLASSIFICATION	use a different notation as messages on a collaboration diagram
WITHOUT_CLASSIFICATION	operations ...
WITHOUT_CLASSIFICATION	see org.tigris.gef.graph.graphlistener nodeadded org.tigris.gef.graph.graphevent
WITHOUT_CLASSIFICATION	todo add logging but this will never happen and is handled
WITHOUT_CLASSIFICATION	verify parameters were initialized correctly by the constructor
WITHOUT_CLASSIFICATION	if possible we determine this by checking the destination and source figs are the same. if this is not possible because the edge is not yet connected then we check the model.
WITHOUT_CLASSIFICATION	we update the activations...
WITHOUT_CLASSIFICATION	this call seems not very robust. yet to determine because.
WITHOUT_CLASSIFICATION	override setbounds to keep shapes looking right. the classifier and state figs are nicely centered vertically and stretched out over the full width to allow easy selection with the mouse. the fig can only be shrunk to half its original size so that it is not reducible to a few pixels only. see org.tigris.gef.presentation.fig setboundsimpl int int int int
WITHOUT_CLASSIFICATION	this constructor is needed for pgmlstackparser to load saved diagrams. it does nothing because pgmlstackparser will call setpoints later.
WITHOUT_CLASSIFICATION	todo support commentedges. todo support associations to self. see java.awt.event.actionlistener actionperformed java.awt.event.actionevent
WITHOUT_CLASSIFICATION	vertical resizing
WITHOUT_CLASSIFICATION	set up the target and its model element variant.
WITHOUT_CLASSIFICATION	return true if the given object is a valid edge in this graph. see org.tigris.gef.graph.mutablegraphmodel canaddedge java.lang.object
WITHOUT_CLASSIFICATION	this module will still register as enabled for uml1.4 but it will not actually do anything.
WITHOUT_CLASSIFICATION	return all ports on node or edge. see org.tigris.gef.graph.graphmodel getports java.lang.object
WITHOUT_CLASSIFICATION	get the region as the first region in the state. if there is no region in the statemachine then create one.
WITHOUT_CLASSIFICATION	return all edges going to given port. see org.tigris.gef.graph.graphmodel getinedges java.lang.object
WITHOUT_CLASSIFICATION	the vertex was dropped onto the diagram. get the region as the first region in the statemachine. if there is no region in the statemachine then create one.
WITHOUT_CLASSIFICATION	c.insets new insets 1 1 1 1
WITHOUT_CLASSIFICATION	create the layer
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.sourcepathcontroller getallmodelelementswithsourcepath
WITHOUT_CLASSIFICATION	create the renderer
WITHOUT_CLASSIFICATION	in this event we do nothing only stop drawing the broom.
WITHOUT_CLASSIFICATION	return true if the two given ports can be connected by a kind of edge to be determined by the ports. see org.tigris.gef.graph.mutablegraphmodel canconnect java.lang.object java.lang.object
WITHOUT_CLASSIFICATION	1. remember current message paths
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.figgroup addfig fig
WITHOUT_CLASSIFICATION	2. reposition and resize nodes
WITHOUT_CLASSIFICATION	3. now reposition messages based on their original position
WITHOUT_CLASSIFICATION	compute the initial center position of the cr
WITHOUT_CLASSIFICATION	the name of the meta type is the class name after the last . and before the next or end of class name.
WITHOUT_CLASSIFICATION	horizontal resizing
WITHOUT_CLASSIFICATION	compute the final center position of the cr
WITHOUT_CLASSIFICATION	create the graph model
WITHOUT_CLASSIFICATION	y position of the new cr should match existing crs y position
WITHOUT_CLASSIFICATION	init the sequence diagrams from the module
WITHOUT_CLASSIFICATION	debugging and looking at fig.headfig.figs 1 . currtext i can see that it is working but how to test it?
WITHOUT_CLASSIFICATION	operations that work on elements
WITHOUT_CLASSIFICATION	operations that work on classes of objects
WITHOUT_CLASSIFICATION	the box for the compartments is somewhere inside the outside bounds
WITHOUT_CLASSIFICATION	see org.tigris.gef.graph.mutablegraphmodel canconnect java.lang.object java.lang.object
WITHOUT_CLASSIFICATION	object getimportedpackage object element
WITHOUT_CLASSIFICATION	object getincludingcase object handle
WITHOUT_CLASSIFICATION	javadoc reviewed above this point tfm
WITHOUT_CLASSIFICATION	object getimportingnamespace object element
WITHOUT_CLASSIFICATION	object createstereotype
WITHOUT_CLASSIFICATION	adiagramelementproperty delegate methods
WITHOUT_CLASSIFICATION	see org.omg.uml.diagraminterchange.adiagramelementproperty add org.omg.uml.diagraminterchange.diagramelement org.omg.uml.diagraminterchange.property
WITHOUT_CLASSIFICATION	see org.omg.uml.diagraminterchange.adiagramelementproperty exists org.omg.uml.diagraminterchange.diagramelement org.omg.uml.diagraminterchange.property
WITHOUT_CLASSIFICATION	easy interface to properties
WITHOUT_CLASSIFICATION	just swap order of arguments to get to new form
WITHOUT_CLASSIFICATION	flow is not in uml 2.x do not implement
WITHOUT_CLASSIFICATION	additional support for tagged values
WITHOUT_CLASSIFICATION	see tudresden.ocl.parser.analysis.depthfirstadapter casealistexpressionlistorrangetail tudresden.ocl.parser.node.alistexpressionlistorrangetail
WITHOUT_CLASSIFICATION	here follows the interfaces that contain the enums of different kinds in the uml meta model.
WITHOUT_CLASSIFICATION	write out something for us to read back in
WITHOUT_CLASSIFICATION	now read it and check the results.
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig isselectable
WITHOUT_CLASSIFICATION	silently ignore anything specified by caller attempt to continue
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.proppanel shouldbeenabled java.lang.object
WITHOUT_CLASSIFICATION	create an empty file and try to read it
WITHOUT_CLASSIFICATION	if the user double clicks on any part of this fignode pass it down to one of the internal figs. this allows the user to initiate direct text editing. see java.awt.event.mouselistener mouseclicked java.awt.event.mouseevent
WITHOUT_CLASSIFICATION	depends on implementation
WITHOUT_CLASSIFICATION	overridden to set argo specific renderinghints to determine whether or not antialiasing should be turned on. see org.tigris.gef.base.editor paint java.awt.graphics
WITHOUT_CLASSIFICATION	verify that the equivalence test works
WITHOUT_CLASSIFICATION	maybe next test is going to change in future
WITHOUT_CLASSIFICATION	the netbeans saxparser sets line number and column number to 1.
WITHOUT_CLASSIFICATION	the xerces saxparser sets line number and column number to 1.
WITHOUT_CLASSIFICATION	updates the modelelement container if the fig is moved in or out another fig. if this fig does not have an enclosing fig anymore the namespace of the diagram will be the owning modelelement. if this fig is moved inside another fignodemodelelement the owner of that fignodemodelelement will be the owning modelelement. see org.tigris.gef.presentation.fignode setenclosingfig org.tigris.gef.presentation.fig
WITHOUT_CLASSIFICATION	not true in general but should be true for our test models
WITHOUT_CLASSIFICATION	necessary since gef contains some errors regarding the hit subject. see org.tigris.gef.presentation.fig hit rectangle
WITHOUT_CLASSIFICATION	if the region is changed to another region then we make sure that a delete event is not fired as a result. non nls 1
WITHOUT_CLASSIFICATION	need to arm the rerouting capability with mousedragged . p do not arm if the edtior s current mode is a figedge create mode because once a new edge has been created it is not deselected therefore on the next create an unwanted reroute is performed. see java.awt.event.mousemotionlistener mousedragged java.awt.event.mouseevent
WITHOUT_CLASSIFICATION	in uml a message could have an action. in uml2 it never does.
WITHOUT_CLASSIFICATION	no body found.
WITHOUT_CLASSIFICATION	oops we already have the body
WITHOUT_CLASSIFICATION	return handle.stringvalue
WITHOUT_CLASSIFICATION	public collection element getextendedelements object handle
WITHOUT_CLASSIFICATION	see javax.swing.text.document render runnable r
WITHOUT_CLASSIFICATION	perform recursive search of subtree rooted at node selecting all nodes which have a userobject matching one of our targets.
WITHOUT_CLASSIFICATION	gone from uml 2.x throw new notimplementedexception
WITHOUT_CLASSIFICATION	get all the relationships that this model element has. and filter everything that is not an import.
WITHOUT_CLASSIFICATION	cannot be done in the general case of federated repositories but at least get what we can find for the current resource set
WITHOUT_CLASSIFICATION	should be element not eobject really
WITHOUT_CLASSIFICATION	see org.argouml.kernel.delayedvchangelistener delayedvetoablechange java. beans.propertychangeevent
WITHOUT_CLASSIFICATION	classifier powertype
WITHOUT_CLASSIFICATION	todo signal receptions association not navigable in this direction
WITHOUT_CLASSIFICATION	usage differs from uml1
WITHOUT_CLASSIFICATION	transitions can have multiple triggers now
WITHOUT_CLASSIFICATION	gone in uml 2.x
WITHOUT_CLASSIFICATION	actionstate callstate and subactivitystate have been replaced in uml 2.0 by explicitly modeled actions
WITHOUT_CLASSIFICATION	this method is overridden in order to ignore change of the y coordinate during dragging. see org.tigris.gef.presentation.fignode supertranslate int int
WITHOUT_CLASSIFICATION	see propertychangelistener propertychange propertychangeevent
WITHOUT_CLASSIFICATION	we have already confirmed the connection is valid
WITHOUT_CLASSIFICATION	mdr classes may have a uml or uml prefix which should be removed.
WITHOUT_CLASSIFICATION	below for uml 1.4 compatibility
WITHOUT_CLASSIFICATION	todo double check tfm
WITHOUT_CLASSIFICATION	todo gone in uml 2
WITHOUT_CLASSIFICATION	todo changed for uml 2.x
WITHOUT_CLASSIFICATION	has subsystem stereotype
WITHOUT_CLASSIFICATION	action handle .get
WITHOUT_CLASSIFICATION	here we are actually violating the test independance since we keep the detailspane from test to test. the reason to do this is to make it possible to run the tests with less memory requirements. hopefully someone might eventually fix the detailspane so that it is garbage collected properly and this is no longer needed. see junit.framework.testcase setup
WITHOUT_CLASSIFICATION	not in uml2
WITHOUT_CLASSIFICATION	ok so that did not work out... just ignore any problems and do not set the name in the constraint body better had log it.
WITHOUT_CLASSIFICATION	even though this is not relevant for uml2 we have code calling this that expects it for uml1.4 and we must handle it gracefully.
WITHOUT_CLASSIFICATION	return redefinableelement handle .isroot todo one part of uml 2.1.1 spec says that this is as above but it appears to be gone tfm
WITHOUT_CLASSIFICATION	all of the applicationlistener methods are void return null regardless of what happens
WITHOUT_CLASSIFICATION	place in the middle of the line and ensure the line is dashed. add an arrow with an open arrow head. remember that for an extends relationship the arrow points to the base use case but because of the way we draw it that is still the destination end.
WITHOUT_CLASSIFICATION	lifeline.setrepresents prop
WITHOUT_CLASSIFICATION	an associationend is now a property owned by an association
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlcomboboxmodel addelement java.lang.object
WITHOUT_CLASSIFICATION	throw new notimplementedexception this is not a uml2 element non nls 1
WITHOUT_CLASSIFICATION	see java.awt.dnd.droptargetlistener drop java.awt.dnd.droptargetdropevent
WITHOUT_CLASSIFICATION	jmenuitem cutitem edit.add actioncut.getinstance setmnemonic cutitem cut setaccelerator cutitem ctrlx jmenuitem copyitem edit.add actioncopy.getinstance setmnemonic copyitem copy setaccelerator copyitem ctrlc jmenuitem pasteitem edit.add actionpaste.getinstance setmnemonic pasteitem paste setaccelerator pasteitem ctrlv edit.addseparator
WITHOUT_CLASSIFICATION	todo exception has been removed for uml 2.x just return signal for now tfm
WITHOUT_CLASSIFICATION	gone in uml 2.x just classifier now
WITHOUT_CLASSIFICATION	only association end has an aggregation option box
WITHOUT_CLASSIFICATION	todo not really the same thing but close
WITHOUT_CLASSIFICATION	delete collaborationinstancesets where this is the last participatinginstance
WITHOUT_CLASSIFICATION	the name of the meta type is the class name after the last . and before the impl or end of class name.
WITHOUT_CLASSIFICATION	todo gone in uml 2.x return place holder for now
WITHOUT_CLASSIFICATION	the source of the transition is a choice
WITHOUT_CLASSIFICATION	todo no separate syncstate in uml 2.1 tfm
WITHOUT_CLASSIFICATION	actionsequence.class
WITHOUT_CLASSIFICATION	comment out when we are ready to release undo redo jmenuitem undoitem edit.add projectactions.getinstance .getundoaction setmnemonic undoitem undo shortcutmgr.assignaccelerator undoitem shortcutmgr.action undo jmenuitem redoitem edit.add projectactions.getinstance .getredoaction setmnemonic redoitem redo shortcutmgr.assignaccelerator redoitem shortcutmgr.action redo edit.addseparator
WITHOUT_CLASSIFICATION	classifierinstate.class
WITHOUT_CLASSIFICATION	find the target in the project browser. we can only do anything if its a use case.
WITHOUT_CLASSIFICATION	argument.class
WITHOUT_CLASSIFICATION	the close window shortcut alt f4 actually cannot be registered as a shortcut because it closes the configuration dialog!
WITHOUT_CLASSIFICATION	attributelink.class
WITHOUT_CLASSIFICATION	access should be fast
WITHOUT_CLASSIFICATION	detach any edges such as comment edges already attached to the figassociation before the figassociation is removed. they will later be re attached to the new fignodeassociation
WITHOUT_CLASSIFICATION	iteration should be fast
WITHOUT_CLASSIFICATION	i.e. eventtype notification.remove
WITHOUT_CLASSIFICATION	begin andromda code
WITHOUT_CLASSIFICATION	implements commandstack
WITHOUT_CLASSIFICATION	not in uml 2.x or metatypes type.additem predicatemtype.create model.getmetatypes .getactivitygraph
WITHOUT_CLASSIFICATION	list.add opaqueexpression
WITHOUT_CLASSIFICATION	subtract the the offset of the click to take account of user having not initially clicked in the centre.
WITHOUT_CLASSIFICATION	literalspecification list.add literalnull when other ok
WITHOUT_CLASSIFICATION	if a default action was voided then we have to save it
WITHOUT_CLASSIFICATION	list.add literalinteger when other ok
WITHOUT_CLASSIFICATION	if the edge is from a circle to a circle e.g. between use cases we have our own implementation overriding gef. which attempts to keep the edges perpendicular if the edge is already close to perpendicular.
WITHOUT_CLASSIFICATION	list.add literalunlimitednatural when other ok
WITHOUT_CLASSIFICATION	list.add instancevalue
WITHOUT_CLASSIFICATION	return the node or edge that owns the given port. see org.tigris.gef.graph.basegraphmodel getowner java.lang.object
WITHOUT_CLASSIFICATION	todo else exception !
WITHOUT_CLASSIFICATION	delete messages which have this as sender or receiver
WITHOUT_CLASSIFICATION	cannot be changed
WITHOUT_CLASSIFICATION	as write in uml specification we have size bodies size langs we must have tabvalues.length 2 0
WITHOUT_CLASSIFICATION	literalspecification
WITHOUT_CLASSIFICATION	cannot be set
WITHOUT_CLASSIFICATION	see org.netbeans.lib.jmi.xmi.xmicontext getreference java.lang.string java.lang.string
WITHOUT_CLASSIFICATION	rewrite it after change setexpression ?
WITHOUT_CLASSIFICATION	suggest that actors may not connect see javadoc comment about this .
WITHOUT_CLASSIFICATION	a link is an assocation in uml2.x
WITHOUT_CLASSIFICATION	we need a method operation implementation to store the method body.
WITHOUT_CLASSIFICATION	the 4 arg version of this method depends on this ordering. do not change it!
WITHOUT_CLASSIFICATION	maybe this operation already has a method that fits our purpose? in this case try to reuse it instead of creating a new implementation.
WITHOUT_CLASSIFICATION	checkstyle off ignore too many parameters since api is fixed by mdr
WITHOUT_CLASSIFICATION	check if we have to create a new implementation.
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig setbounds int int int int
WITHOUT_CLASSIFICATION	create a new implementation.
WITHOUT_CLASSIFICATION	this will contain the figs that we do not need anymore
WITHOUT_CLASSIFICATION	and set the specification to the current operation.
WITHOUT_CLASSIFICATION	add it to the operation s methods.
WITHOUT_CLASSIFICATION	look if there is already a java implementation
WITHOUT_CLASSIFICATION	job done.
WITHOUT_CLASSIFICATION	todo get default output directory from user settings project p projectmanager.getmanager .getcurrentproject p.getprojectsettings .setgenerationoutputdir path
WITHOUT_CLASSIFICATION	it seems there was no implementation of our current target language so we just add one.
WITHOUT_CLASSIFICATION	compare path of two elements in reverse order inner to outer using a primary strength text collator. this will collate e e together but not eliminate non identical strings which collate in the same place. return equivalent of list1.compareto list2
WITHOUT_CLASSIFICATION	we cannot set the body of this model element type.
WITHOUT_CLASSIFICATION	removed from uml 2.x
WITHOUT_CLASSIFICATION	also parse 1 or 0 n etc.
WITHOUT_CLASSIFICATION	warning this has containment side effects! eclipse uml2 will move the property from the classifier to the association when the navigability is changed.
WITHOUT_CLASSIFICATION	param item the todo item param reason the reason todo use it! return code true code if the argument was a component of this list code false code otherwise throws unresolvableexception unable to resolve
WITHOUT_CLASSIFICATION	the machine state has got a new name
WITHOUT_CLASSIFICATION	where there is more than one supplier or client take the first element in each case. there really ought to be a check that there are some here for safety.
WITHOUT_CLASSIFICATION	for other xmi files with further namespaces
WITHOUT_CLASSIFICATION	eclipse namespaces
WITHOUT_CLASSIFICATION	for the .uml files in the eclipse jar files we need this
WITHOUT_CLASSIFICATION	todo verify this. iiuc then this triggers the compountstatefig to draw itself correctly. hence there was a reason to wait this long to make the state concurrent.
WITHOUT_CLASSIFICATION	notation events are likely to because gef swing operations so we dispatch them on the swing event thread as a convenience so that the receiving notationchanged methods do not need to deal with it
WITHOUT_CLASSIFICATION	we clear the save required flag on the swing event thread in the hopes that it gets done after any other background work listener updates that is being done there
WITHOUT_CLASSIFICATION	not needed currently for uml 2
WITHOUT_CLASSIFICATION	make the result inmediately visible in case of apply
WITHOUT_CLASSIFICATION	create a proxy object around this handler that can be reflectively added as an apple applicationlistener
WITHOUT_CLASSIFICATION	there are various details panes all of which could hold different tabs pages according to users settings. place each pane in the required border area.
WITHOUT_CLASSIFICATION	final object scope
WITHOUT_CLASSIFICATION	remove the old project first. it is wasteful to create a temp empty project but too much of argouml depends on having a current project
WITHOUT_CLASSIFICATION	targetlistener methods implemented so notified when selected diagram changes. used to update the window title.
WITHOUT_CLASSIFICATION	mvw indeed. the intention of the constructor parameter is to prove that there is a valid uml object to bind the notation to. so the next statement should fail on a null parameter and on anything that is not an object of which we can retrieve the multiplicity.
WITHOUT_CLASSIFICATION	prptodo createproperty label.todo pane positions tabtodo.class prpproperties createproperty label.properties pane positions tabprops.class prpdocumentation createproperty label.documentation pane positions tabdocumentation.class prpstyle createproperty label.style pane positions tabstyle.class prpsource createproperty label.source pane positions tabsrc.class prpconstraints createproperty label.constraints pane positions tabconstraints.class prptaggedvalues createproperty label.tagged values pane positions tabtaggedvalues.class property propertylist new property prptodo prpproperties prpdocumentation prpstyle prpsource prpconstraints prptaggedvalues arrays.sort propertylist top.add new jscrollpane new propertytable propertylist panecolumnheader positioncolumnheader borderlayout.center
WITHOUT_CLASSIFICATION	initialize the module loader. at least the plug ins that provide profiles need to be initialized before the project is loaded because some of these profile may have been set as default profiles and need to be applied to the project as soon as it has been created or loaded. the first instance of a project is needed during the gui initialization.
WITHOUT_CLASSIFICATION	create an anonymous class as a kind of adaptor for the cognitive system to provide proper translation i18n.
WITHOUT_CLASSIFICATION	in uml2 we model a method as a behavior initially opaquebehavior
WITHOUT_CLASSIFICATION	extent ignored for euml2 implementation required for netbeans mdr
WITHOUT_CLASSIFICATION	add listener to get notified when active diagram changes
WITHOUT_CLASSIFICATION	we need to verify that ns is a package if not find its parent package! otherwise this causes an exception when creating a sequence diagram for a classifierrole.
WITHOUT_CLASSIFICATION	also apply subprofiles
WITHOUT_CLASSIFICATION	this needs to iterate to fill entire output raster if implemented return image.copydata outraster
WITHOUT_CLASSIFICATION	now let us check if the new line is already present in the old list of internal transitions if it is then mark the old one to be retained i.e. do not create a new one if it is not continue with parsing
WITHOUT_CLASSIFICATION	we only need to add the classloader once and if and only if there is at least a profile in the jar
WITHOUT_CLASSIFICATION	commontaggedvaluetypes.add org.eclipse.uml2.uml.resource.umlresource.
WITHOUT_CLASSIFICATION	remove base class by destroying the extension
WITHOUT_CLASSIFICATION	consider the property multiplicity
WITHOUT_CLASSIFICATION	no state with the given name is found so we have to reject the complete user s input
WITHOUT_CLASSIFICATION	or getdefaultvaluefor prop ?
WITHOUT_CLASSIFICATION	search all attributes found to those expected. if any do not match then turn off the found flag so that we search for the next matching tag.
WITHOUT_CLASSIFICATION	too bad we choose to take the first value
WITHOUT_CLASSIFICATION	ready to set the value finally
WITHOUT_CLASSIFICATION	todo isstatic in uml 2.x
WITHOUT_CLASSIFICATION	in case of a tagged value the type should not be set here
WITHOUT_CLASSIFICATION	also unapply subprofiles
WITHOUT_CLASSIFICATION	also define subprofiles
WITHOUT_CLASSIFICATION	associationrole.class classifierrole.class
WITHOUT_CLASSIFICATION	4.5.2.13 constraint
WITHOUT_CLASSIFICATION	because we are listening for stereotypes being added and removed but we are really interested in their owned tag definitions the default implementation will not work for us
WITHOUT_CLASSIFICATION	link.class instance.class transition.class statevertex.class
WITHOUT_CLASSIFICATION	message.class classifierrole.class
WITHOUT_CLASSIFICATION	end class startcritics
WITHOUT_CLASSIFICATION	note for uml2 the aggregation ends are swapped
WITHOUT_CLASSIFICATION	in uml2 subsystem is a component with subsystem stereotype so this must occur after the metatypes.getcomponent case
WITHOUT_CLASSIFICATION	initialized in static initializer block below
WITHOUT_CLASSIFICATION	this double for loop may be optimised as follows use arrays in stead of a set for bases have the second loop start from the element after base1 ... but i chose not to do this since the gain is small and this is only used for a lazily filled combo. btw this is also used by notation.
WITHOUT_CLASSIFICATION	see org.tigris.gef.graph.graphfactory makeedge
WITHOUT_CLASSIFICATION	specifies valid elements for a region to contain
WITHOUT_CLASSIFICATION	this class represents all diagrams within argouml. it is based upon the gef diagram. p it adds a namespace and the capability to delete itself when its namespace is deleted. p todo mvw i am not sure of the following p the namespace of the diagram is e.g. used when creating new elements that are shown on the diagram they will have their namespace set according this. it is not necessarily equal to the owner . p mvw i doubt all following the namespace of the diagram is e.g. used to register a listener to the uml model to be notified if this element is removed which will imply that this diagram has to be deleted too. p hence the namespace of e.g. a collaboration diagram should be the represented classifier or in case of a represented operation the classifier that owns this operation. and the namespace of the statechart diagram should be the namespace of its statemachine.
WITHOUT_CLASSIFICATION	constructor for a link figclass during file load. p parent link org.argouml.uml.diagram.ui.fignodemodelelement will have created the main box link getbigport and its name link getnamefig and stereotype link getstereotypefig . this constructor creates a box for the attributes and operations. p the properties of all these graphic elements are adjusted appropriately. the main boxes are all filled and have outlines. todo which is wrong since the bigport is filled too. param element model element to be represented by this fig. param bounds rectangle describing bounds param settings rendering settings
WITHOUT_CLASSIFICATION	valid elements for a profile to contain
WITHOUT_CLASSIFICATION	see org.tigris.gef.base.selection draghandle int int int int org.tigris.gef.presentation.handle
WITHOUT_CLASSIFICATION	makes sure that the edges stick to the outline of the fig. see org.tigris.gef.presentation.fig getgravitypoints
WITHOUT_CLASSIFICATION	test case for the above code draw a class. create a stereotype for it by clicking on the prop panel tool and name it. remove the class from the diagram. drag the class from the explorer on the diagram. select the stereotype in the explorer and change its name in the prop panel to something longer. the longer name does not make the class fig wider unless the above code is added.
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig damage
WITHOUT_CLASSIFICATION	if the array has not been flagged to indicate otherwise swap elements the elemnts and add again.
WITHOUT_CLASSIFICATION	valid elements for an action to contain
WITHOUT_CLASSIFICATION	trying to get a built in standard profile from eclipse uml2
WITHOUT_CLASSIFICATION	removed from uml 2
WITHOUT_CLASSIFICATION	start interception ui interactions
WITHOUT_CLASSIFICATION	perhaps something like the following would workd. if not then traverse up the component hierarchy to a multeditorpane rectangle drawingarea globals.cureditor .getjcomponent .getvisiblerect
WITHOUT_CLASSIFICATION	only interested in the ownedelement property. either something has been added to the namespace for this model or removed. in the latter case the something will be in the old value of the property which is the collection of owned elements and the new value will be the element import describing the model element and the model from which it was removed
WITHOUT_CLASSIFICATION	roll back transaction to remove any partial results read
WITHOUT_CLASSIFICATION	methods that implement the mutablegraphmodel interface
WITHOUT_CLASSIFICATION	if we can find a nested sax exception it will have information on the line number etc.
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig setlayer org.tigris.gef.base.layer
WITHOUT_CLASSIFICATION	ignore if the extent never got created or has been deleted
WITHOUT_CLASSIFICATION	pce propertychangeevent rxdevent.getsource asserttrue wrong event name pce.getpropertyname .equals diagramappearance.key default shadow width.getkey string value string pce.getoldvalue int i integer.parseint value asserttrue wrong old event value i 4 asserttrue wrong new event value string pce.getnewvalue .equals 2
WITHOUT_CLASSIFICATION	note gef s gif writer uses jeff poskanzer s gif encoder but that saves a copy of the entire image in an internal buffer before starting work defeating the whole purpose of our incremental rendering.
WITHOUT_CLASSIFICATION	inputsource xformedinput chainedtransform transformfiles pis
WITHOUT_CLASSIFICATION	todo the next text was copied to adapt. sets the target. if the old target is an uml element it also removes the model from the element listener list of the target. if the new target is an uml element the model is added as element listener to the new target. p this function is called when the user changes the target. hence this shall not result in any uml model changes. p this function looks a lot like the one in umlcomboboxmodel2. p as a possible future extension we could allow listening to other model elements. param thenewtarget the new target
WITHOUT_CLASSIFICATION	see org.argouml.model.xmireader getxmiuuidtoobjectmap
WITHOUT_CLASSIFICATION	this comment was included in a previous version before 1 2005 of the test which had this assertion commented out interaction should not be removed when removing classifierrole... maybe if the last message is removed from the interaction but even then it is doubtfull since it will probably lead to backward compatibility problems in save formats. but my reading of the uml 1.4 specification is that an interaction without at least one message is definitely illegal so mdr is doing the right thing by removing it in this case where we only have a single message which then gets deleted. tfm
WITHOUT_CLASSIFICATION	set up source for style sheet
WITHOUT_CLASSIFICATION	in uml2.x there is no metaclass named method but we use the method association of behavioralfeature
WITHOUT_CLASSIFICATION	if action comes in with no modifiers it is a pure keyboard event e.g. spacebar so do it. anything else is probably a mouse event so ignore it. mouse events are dealt with by mousepressed instead see bottom of page .
WITHOUT_CLASSIFICATION	create filter for each style sheet and chain to previous filter reader
WITHOUT_CLASSIFICATION	jcontentpane.add getjchbbold gridbagconstraints2 jcontentpane.add getjchbitalic gridbagconstraints3
WITHOUT_CLASSIFICATION	create transformer and do transformation
WITHOUT_CLASSIFICATION	set up for next iteration
WITHOUT_CLASSIFICATION	todo the following fails due to the xmi writing saving all top level model elements and because even if there was no empty project by creating a class the undo mechanism in the project manager will force the creation of an empty project. assertequals 1 profilemodels.size
WITHOUT_CLASSIFICATION	create set up temporary output file
WITHOUT_CLASSIFICATION	we presume the stream is encoded using the default char encoding
WITHOUT_CLASSIFICATION	delete the old extent first
WITHOUT_CLASSIFICATION	log.log level.warning unable to find extent extent
WITHOUT_CLASSIFICATION	connect to the repository
WITHOUT_CLASSIFICATION	find and add all subdirectories
WITHOUT_CLASSIFICATION	create an extent and read in our metamodel m2 model
WITHOUT_CLASSIFICATION	create and start event pump first so it is available for all others
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getactivitygraphshelper
WITHOUT_CLASSIFICATION	the default 16 puts the icons too close together
WITHOUT_CLASSIFICATION	if the name is too long or multi line e.g. for comments then we reduce to the first line or 80 chars.
WITHOUT_CLASSIFICATION	if we have got a streaming input copy it to make sure we will be able to rewind it if necessary
WITHOUT_CLASSIFICATION	to rupdate the diagram set the stimulus name again todo explain that this really works also in the mdr case. linus is a sceptic.
WITHOUT_CLASSIFICATION	if a uml 1.3 file attempt to upgrade it to uml 1.4
WITHOUT_CLASSIFICATION	save project at slightly lower priority to keep ui responsive
WITHOUT_CLASSIFICATION	roll back transaction from first attempt start new one
WITHOUT_CLASSIFICATION	clear the associated id maps reset starting collection
WITHOUT_CLASSIFICATION	datatypes is next so it is available for kinds modelmanagement extensions
WITHOUT_CLASSIFICATION	initialize remaining factories and helpers but defer heavyweight ones until needed
WITHOUT_CLASSIFICATION	end class crdisambigstatename
WITHOUT_CLASSIFICATION	create a default extent for the user uml model. this will get replaced if a new model is read in from an xmi file.
WITHOUT_CLASSIFICATION	see javax.swing.event.treeselectionlistener valuechanged javax.swing.event.treeselectionevent
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getcommonbehaviorhelper
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getcorehelper
WITHOUT_CLASSIFICATION	as long as they are not both null or a really rare identical string pointer
WITHOUT_CLASSIFICATION	saveposition prptodo tabtodo.class saveposition prpproperties tabprops.class saveposition prpdocumentation tabdocumentation.class saveposition prpstyle tabstyle.class saveposition prpsource tabsrc.class saveposition prpconstraints tabconstraints.class saveposition prptaggedvalues tabtaggedvalues.class
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getextensionmechanismsfactory
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getmodelmanagementhelper
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getumlfactory
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fignode hitport int int
WITHOUT_CLASSIFICATION	elements created after file load will not have index entries
WITHOUT_CLASSIFICATION	private constructor for common work needed by both public constructors.
WITHOUT_CLASSIFICATION	see javax.swing.plaf.metal.metaltheme getprimary3
WITHOUT_CLASSIFICATION	see org.argouml.model.extensionmechanismshelper getallpossiblestereotypes java.util.collection java.lang.object
WITHOUT_CLASSIFICATION	end class crinvalidsynch
WITHOUT_CLASSIFICATION	see org.argouml.model.extensionmechanismshelper getcommontaggedvaluetypes
WITHOUT_CLASSIFICATION	only reset the text if the two are not the same i.e the fig has moved rather than we have just edited the text when settargetbbox will have made them the same . note that stylebounds could be null so we do the test this way round.
WITHOUT_CLASSIFICATION	there is nothing to do in uml1.4
WITHOUT_CLASSIFICATION	loadposition prptodo tabtodo.class loadposition prpproperties tabprops.class loadposition prpdocumentation tabdocumentation.class loadposition prpstyle tabstyle.class loadposition prpsource tabsrc.class loadposition prpconstraints tabconstraints.class loadposition prptaggedvalues tabtaggedvalues.class
WITHOUT_CLASSIFICATION	forbid instantiation
WITHOUT_CLASSIFICATION	loop through all the ends comparing the name against those already seen ignoring any with no name . no problem if there are no connections defined we will fall through immediately.
WITHOUT_CLASSIFICATION	if this is not overridden it will revert to the old behavior all internal subclasses have been updated but this if for compatibility of non argouml extensions.
WITHOUT_CLASSIFICATION	see org.argouml.model.metatypes getabstraction
WITHOUT_CLASSIFICATION	delete stimulii which have this as their dispatchaction
WITHOUT_CLASSIFICATION	delete messages which have this as their action
WITHOUT_CLASSIFICATION	override paint so we can set a flag the first time we are called and notify any waiting threads that the splash screen has been painted. see java.awt.component paint java.awt.graphics
WITHOUT_CLASSIFICATION	delete linkends
WITHOUT_CLASSIFICATION	delete attributelinks where this is the value
WITHOUT_CLASSIFICATION	ask to be notified of any changes to tagdefinitions so that we can track new ones name changes etc
WITHOUT_CLASSIFICATION	binary link
WITHOUT_CLASSIFICATION	delete all sendactions which have this as signal
WITHOUT_CLASSIFICATION	and a change event for that end
WITHOUT_CLASSIFICATION	delete all signalevents which have this as the signal
WITHOUT_CLASSIFICATION	these 3 steps are only needed for the 2 cases indicated with a x below.
WITHOUT_CLASSIFICATION	see org.argouml.model.umlhelper getsource java.lang.object
WITHOUT_CLASSIFICATION	see org.argouml.model.umlhelper getdestination java.lang.object
WITHOUT_CLASSIFICATION	text was stored in name in uml 1.3
WITHOUT_CLASSIFICATION	delete interactioninstancesets where this is the last participatingstimulus
WITHOUT_CLASSIFICATION	to be able to remove dep s later
WITHOUT_CLASSIFICATION	updates the button if the current row changes see javax.swing.event.tablemodellistener tablechanged javax.swing.event.tablemodelevent
WITHOUT_CLASSIFICATION	this does not support i18n or multiple states but it is just a default
WITHOUT_CLASSIFICATION	partitions are composite elements and will get deleted implicitly partition contents do not need to be deleted or checked
WITHOUT_CLASSIFICATION	see org.netbeans.api.xmi.xmireferenceprovider getreference javax.jmi.reflect.refobject
WITHOUT_CLASSIFICATION	well formedness rule 4.12.3.1 compositestate 4 there have to be at least two composite substates in a concurrent composite state. if this is broken by deletion of substate then we delete the other remaining substates.
WITHOUT_CLASSIFICATION	only add all if there are some to add.
WITHOUT_CLASSIFICATION	probably redundant just in case
WITHOUT_CLASSIFICATION	helper interfaces and methods.
WITHOUT_CLASSIFICATION	see javax.swing.tree.treenode isleaf
WITHOUT_CLASSIFICATION	checkstyle on
WITHOUT_CLASSIFICATION	shorthand notation for convenience
WITHOUT_CLASSIFICATION	quick exit if it is a transaction event we get a lot of them and they are all ignored
WITHOUT_CLASSIFICATION	interactioninstancesets will get deleted automatically because they are associated by composition
WITHOUT_CLASSIFICATION	if this is the only message contained in the interaction we delete the interaction
WITHOUT_CLASSIFICATION	specifies valid elements for an actor to contain
WITHOUT_CLASSIFICATION	object from a different file register with superclass so it can resolve all references
WITHOUT_CLASSIFICATION	if the model url has a suffix of .zip or .jar get the suffix without it and store it in the urlmap
WITHOUT_CLASSIFICATION	several tries to construct a url that really exists.
WITHOUT_CLASSIFICATION	if systemid is publicid previously mapped from a systemid try to use the systemid.
WITHOUT_CLASSIFICATION	try to find suffix in module list.
WITHOUT_CLASSIFICATION	search the classpath
WITHOUT_CLASSIFICATION	give up and let superclass deal with it.
WITHOUT_CLASSIFICATION	we have got a profile read pending handle it ourselves now
WITHOUT_CLASSIFICATION	otherwise if it is not something we have already read just punt to the super class.
WITHOUT_CLASSIFICATION	unfortunately the mdr super implementation throws debugexception with just the message from the causing exception rather than nesting the exception itself so we do not have all the information we would like
WITHOUT_CLASSIFICATION	specifies valid elements for an callstate to contain
WITHOUT_CLASSIFICATION	only add mof elements not primitive datatypes
WITHOUT_CLASSIFICATION	for transition use indirection through target statevertex
WITHOUT_CLASSIFICATION	look for an existing reference matching our mofid
WITHOUT_CLASSIFICATION	todo we do not have any settings that can change per fig currently so we can just use the default settings settings new diagramsettings rendersettings
WITHOUT_CLASSIFICATION	get all uml metaclasses
WITHOUT_CLASSIFICATION	see org.tigris.gef.ui.istatusbar showstatus java.lang.string
WITHOUT_CLASSIFICATION	object args typename elemname misc.name.element import imported 0 1 return translator .localize misc.name.element import args
WITHOUT_CLASSIFICATION	although this only handles one level of package it is ok for uml 1.4 because of clustering get the right uml package in the extent
WITHOUT_CLASSIFICATION	return the metatype proxy
WITHOUT_CLASSIFICATION	we must find out if the activator itself does not have message as it is activator
WITHOUT_CLASSIFICATION	an activator cannot also be a predecessor of a message
WITHOUT_CLASSIFICATION	uml 1.4.2 spec section 4.5.3.20 5 a generalizableelement may only be a child of generalizableelement of the same kind.
WITHOUT_CLASSIFICATION	an association can only have a single unnamed classifierrole so
WITHOUT_CLASSIFICATION	eliminate classifiers which already have an unnamed role
WITHOUT_CLASSIFICATION	initialize basic parameters that are different from decision.unspec
WITHOUT_CLASSIFICATION	wfr 2.10.3.3 4
WITHOUT_CLASSIFICATION	no initialization currently
WITHOUT_CLASSIFICATION	if we are unnamed eliminate all classifiers which are already the base of some role
WITHOUT_CLASSIFICATION	context instanceof collaboration context instanceof model
WITHOUT_CLASSIFICATION	see org.netbeans.lib.jmi.xmi.xmiheaderprovider writeheader java.io.writer
WITHOUT_CLASSIFICATION	see java.beans.propertychangelistener propertychange propertychangeevent
WITHOUT_CLASSIFICATION	note the xmi.header xmi.header is provided for us
WITHOUT_CLASSIFICATION	not implemented in mdr
WITHOUT_CLASSIFICATION	if the user selects an action that is already selected in sticky mode double clicked then we turn off sticky mode and make sure no action is selected.
WITHOUT_CLASSIFICATION	see org.argouml.model.abstractmodeleventpump addmodeleventlistener java.beans.propertychangelistener java.lang.object
WITHOUT_CLASSIFICATION	calling connect will add the edge to the graphmodel and any layerpersectives on that graphmodel will get a edgeadded event and will add an appropriate figedge determined by the graphedgerenderer .
WITHOUT_CLASSIFICATION	see org.argouml.model.abstractmodeleventpump removemodeleventlistener java.beans.propertychangelistener java.lang.object
WITHOUT_CLASSIFICATION	see org.argouml.model.abstractmodeleventpump addclassmodeleventlistener java.beans.propertychangelistener java.lang.object java.lang.string
WITHOUT_CLASSIFICATION	clean up index entries
WITHOUT_CLASSIFICATION	see javax.swing.text.document gettext int int
WITHOUT_CLASSIFICATION	see java.beans.propertychangelistener propertychange java.beans. propertychangeevent
WITHOUT_CLASSIFICATION	create a change event for the corresponding property
WITHOUT_CLASSIFICATION	create an event for the other end of the association
WITHOUT_CLASSIFICATION	no longer abstract to allow subclasses to remove so we provide a null default implementation
WITHOUT_CLASSIFICATION	return all edges going from given port. see org.tigris.gef.graph.graphmodel getoutedges java.lang.object
WITHOUT_CLASSIFICATION	see javax.swing.text.document getdefaultrootelement
WITHOUT_CLASSIFICATION	create a change event for the associated property
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	see javax.swing.filechooser.filefilter accept java.io.file
WITHOUT_CLASSIFICATION	cut down on debugging noise
WITHOUT_CLASSIFICATION	see javax.swing.listcellrenderer getlistcellrenderercomponent javax.swing.jlist java.lang.object int boolean boolean
WITHOUT_CLASSIFICATION	unregister deleted instances after all events have been delivered
WITHOUT_CLASSIFICATION	if we do not have a fig for this uml object we will need to add one. we set the bounds but they will be reset later.
WITHOUT_CLASSIFICATION	any given listener is only called once even if it is registered for multiple relevant matches
WITHOUT_CLASSIFICATION	this will include all subtypes registered
WITHOUT_CLASSIFICATION	for debugging you probably want either this or the logging for every event which is fired not both
WITHOUT_CLASSIFICATION	this enforces the following well formedness rule. p well formedness rule 4.12.3.1 compositestate 4 there have to be at least two composite substates in a concurrent composite state. p if this is broken by deletion of substate then we change the parent composite substate to be not concurrent.
WITHOUT_CLASSIFICATION	log.isdebugenabled
WITHOUT_CLASSIFICATION	todo need named tags and constraints compartments here addfig tagsfig addfig constraintsfig
WITHOUT_CLASSIFICATION	fetch the key before going in synchronized mode
WITHOUT_CLASSIFICATION	log.log level.fine class name has subtypes names.get name
WITHOUT_CLASSIFICATION	temporary start private static final color color array color.red color.blue color.cyan color.yellow color.green private int nextcolor 0 temporary end
WITHOUT_CLASSIFICATION	convert classname to refobject
WITHOUT_CLASSIFICATION	see javax.swing.event.caretlistener caretupdate javax.swing.event.caretevent
WITHOUT_CLASSIFICATION	if we do not have a mofclass see if we can get one from the instance
WITHOUT_CLASSIFICATION	if we still do not have a mofclass something is wrong
WITHOUT_CLASSIFICATION	throw new illegalargumentexception property attribute does not exist in metamodel
WITHOUT_CLASSIFICATION	if there is not a 3rd column then this represents a connection of elements of the same type.
WITHOUT_CLASSIFICATION	save the model current
WITHOUT_CLASSIFICATION	if the operation reception is abstract then the text will be set to italics.
WITHOUT_CLASSIFICATION	see org.argouml.model.changeablekind getaddonly
WITHOUT_CLASSIFICATION	lookup primary key creating new entry if needed
WITHOUT_CLASSIFICATION	see javax.swing.text.document getlength
WITHOUT_CLASSIFICATION	uml 2.x only
WITHOUT_CLASSIFICATION	see java.beans.vetoablechangelistener vetoablechange java.beans. propertychangeevent
WITHOUT_CLASSIFICATION	create a new tagdefinition if none found
WITHOUT_CLASSIFICATION	clear target so that multiple copies have no effect other than inefficiency
WITHOUT_CLASSIFICATION	todo add tags constraints addmenu.add targetmanager.getinstance .getaddattributeaction addmenu.add targetmanager.getinstance .getaddoperationaction
WITHOUT_CLASSIFICATION	delete all taggedvalues with this type
WITHOUT_CLASSIFICATION	todo check the name for validity.
WITHOUT_CLASSIFICATION	the effect will get deleted automatically by mdr unlike the guard.
WITHOUT_CLASSIFICATION	the following is specifically for realizations
WITHOUT_CLASSIFICATION	see abstractaction actionperformed actionevent
WITHOUT_CLASSIFICATION	the next 3 restrictions for abstraction seem to be argo specific not something the uml spec requires tfm 20070215
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umluserinterfacecontainer formatelement java.lang.object
WITHOUT_CLASSIFICATION	a list of valid connections between elements the connection type first and then the elements to be connected
WITHOUT_CLASSIFICATION	see java.awt.event.actionlistener actionperformed actionevent
WITHOUT_CLASSIFICATION	todo constraints todo required tags
WITHOUT_CLASSIFICATION	specifies valid elements for a model to contain
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.figedge setdestfignode org.tigris.gef.presentation.fignode
WITHOUT_CLASSIFICATION	specifies valid elements for a package to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a classifier to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an interface to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a signal to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a use case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a node to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a datatype to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a operation to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an event to contain
WITHOUT_CLASSIFICATION	the operation specificationpath results in a set containing all surrounding namespaces that are not instances of package. specificationpath set namespace specificationpath self.allsurroundingnamespaces select n n.ocliskindof subsystem or n.ocliskindof class
WITHOUT_CLASSIFICATION	update the text labels. see org.argouml.uml.diagram.ui.fignodemodelelement modelchanged java.beans.propertychangeevent
WITHOUT_CLASSIFICATION	specifies valid elements for an state to contain
WITHOUT_CLASSIFICATION	since this is a complex polygon there is no easy way to resize it.
WITHOUT_CLASSIFICATION	specifies valid elements for an simplestate to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an subactivitystate to contain
WITHOUT_CLASSIFICATION	the last one needs extra space below it
WITHOUT_CLASSIFICATION	specifies valid elements for an actionstate to contain
WITHOUT_CLASSIFICATION	remove the commentedge. if there are more then one comment edges between the 2 objects then delete them all.
WITHOUT_CLASSIFICATION	supports implementation of some special elements not supported by buildnode
WITHOUT_CLASSIFICATION	note although wfr 3 in section 2.11.3.5 usecase of the uml 1.4 spec says a usecase cannot contain any classifiers the ocl is actually self.contents isempty which would seem to imply it cannot contain any elements tfm 20060416
WITHOUT_CLASSIFICATION	the list of namespaces to return
WITHOUT_CLASSIFICATION	if our map has any entries for this type it is a connection type
WITHOUT_CLASSIFICATION	4.5.2.27 modelelement
WITHOUT_CLASSIFICATION	4.5.2.37 structuralfeature
WITHOUT_CLASSIFICATION	see if there is a pair in this list that match the given model elements
WITHOUT_CLASSIFICATION	if the base was not changed then only set the name
WITHOUT_CLASSIFICATION	find the passed in container in validcontainmentmap
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.fignodemodelelement updatelisteners java.lang.object
WITHOUT_CLASSIFICATION	begin a transaction we will do a bunch of reads first to collect a set of elements to delete then delete them all
WITHOUT_CLASSIFICATION	4.5.2.14 dependency
WITHOUT_CLASSIFICATION	no else here to make sure classifier with its double inheritance goes ok
WITHOUT_CLASSIFICATION	no else here to make sure associationclass goes ok
WITHOUT_CLASSIFICATION	4.5.2.7 behavioralfeature
WITHOUT_CLASSIFICATION	no else to handle multiple inheritance of linkobject
WITHOUT_CLASSIFICATION	if we get this with the repository locked it means our root model element was already deleted. nothing to do...
WITHOUT_CLASSIFICATION	our wrapped version of the same error
WITHOUT_CLASSIFICATION	the attribute targetscope of an associationend in uml1.x is no longer supported in uml2.x
WITHOUT_CLASSIFICATION	end our transaction
WITHOUT_CLASSIFICATION	additional operations in 4.5.3.26
WITHOUT_CLASSIFICATION	if there are no owned elements then return empty list
WITHOUT_CLASSIFICATION	we do not care about the value just want to see if it throws
WITHOUT_CLASSIFICATION	recurse into ourself for each parent
WITHOUT_CLASSIFICATION	if test fails this element should not be in the result set
WITHOUT_CLASSIFICATION	the following should always be true
WITHOUT_CLASSIFICATION	default implementation is to do nothing
WITHOUT_CLASSIFICATION	if we were handed a classifier to start this must be a classifier
WITHOUT_CLASSIFICATION	add the given node to the graph if valid. see org.tigris.gef.graph.mutablegraphmodel addnode java.lang.object
WITHOUT_CLASSIFICATION	we have to follow the arrows..
WITHOUT_CLASSIFICATION	ns instanceof usecase see comment below
WITHOUT_CLASSIFICATION	made following changes from ocl in uml 1.4 section 2.9.3.16 collaborationinstance collaborationinstanceset stimuli stimulus
WITHOUT_CLASSIFICATION	see java.awt.event.focuslistener focuslost java.awt.event.focusevent
WITHOUT_CLASSIFICATION	get classifiers in namespace
WITHOUT_CLASSIFICATION	a profile is a special package having the profile stereotype which can only contain the following types
WITHOUT_CLASSIFICATION	the figs for the two end nodes
WITHOUT_CLASSIFICATION	modelelement instanceof statemachine
WITHOUT_CLASSIFICATION	a profile is a special package having the profile stereotype
WITHOUT_CLASSIFICATION	only build a namepace if needed with
WITHOUT_CLASSIFICATION	methods that implement the graphmodel itself
WITHOUT_CLASSIFICATION	check whether model element is contained in given namespace container.
WITHOUT_CLASSIFICATION	return struc.getowner .getnamespace .getownedelement .contains struc.gettype
WITHOUT_CLASSIFICATION	d.supplier.oclastype generalizableelement . allparents.oclastype namespace .ownedelement select e e. elementownership.visibility public includes r.participant or
WITHOUT_CLASSIFICATION	d.supplier.oclastype package .allimportedelements select e e. elementimport.visibility public includes r.participant
WITHOUT_CLASSIFICATION	although usage permission are dependencies they need to be include separately because of the way lookup works
WITHOUT_CLASSIFICATION	get the namespace hierarchy for each element
WITHOUT_CLASSIFICATION	traverse the lists looking for the last innermost match
WITHOUT_CLASSIFICATION	uml 1.4 wfr 2.5.3.1 3
WITHOUT_CLASSIFICATION	if we made something aggregate make sure the other ends conform to uml 1.4 wfr 2.5.3.1 2 no more than one aggregate end
WITHOUT_CLASSIFICATION	there actually do not appear to be any restrictions on the namespace for a generalization. the uml 1.4 wfr 2.5.3.20 3 refers to generalizableelements not generalizations tfm
WITHOUT_CLASSIFICATION	all text was stored in name field in uml 1.3
WITHOUT_CLASSIFICATION	returns nothing
WITHOUT_CLASSIFICATION	boolean string integer long float double etc
WITHOUT_CLASSIFICATION	specifies valid elements for a enumeration to contain
WITHOUT_CLASSIFICATION	this method is cpu intensive and therefore needs to be as efficient as possible.
WITHOUT_CLASSIFICATION	additional operations in 4.5.3.8
WITHOUT_CLASSIFICATION	remove any elements not in requested namespace
WITHOUT_CLASSIFICATION	select those features which are behavioralfeatures
WITHOUT_CLASSIFICATION	should these also be deleted?
WITHOUT_CLASSIFICATION	this is silly but for backward compatibility
WITHOUT_CLASSIFICATION	todo this is the 2nd part of this method
WITHOUT_CLASSIFICATION	cmd.setobjects run.getparams .get 0
WITHOUT_CLASSIFICATION	wellformednessrules and preconditions
WITHOUT_CLASSIFICATION	uml 1.4 wfr 2.5.3.1 3 no aggregation for n ary associations
WITHOUT_CLASSIFICATION	equal
WITHOUT_CLASSIFICATION	greater
WITHOUT_CLASSIFICATION	less than
WITHOUT_CLASSIFICATION	binary association
WITHOUT_CLASSIFICATION	delete linkends which have this as their associationend
WITHOUT_CLASSIFICATION	delete attributelinks where this is the attribute
WITHOUT_CLASSIFICATION	delete createactions which have this as their instantiation
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.actionsetmultiplicity setselecteditem java.lang.object java.lang.object
WITHOUT_CLASSIFICATION	see org.argouml.model.activitygraphshelper findclassifierbyname java.lang.object java.lang.string
WITHOUT_CLASSIFICATION	methods that implement the vetoablechangelistener interface
WITHOUT_CLASSIFICATION	delete dependencies where this is the only supplier
WITHOUT_CLASSIFICATION	delete callactions which have this as their operation
WITHOUT_CLASSIFICATION	if we drop out there were no clashes
WITHOUT_CLASSIFICATION	delete callevents which have this as their operation
WITHOUT_CLASSIFICATION	nothing more to do.
WITHOUT_CLASSIFICATION	see java.util.enumeration nextelement
WITHOUT_CLASSIFICATION	for consistency with attribute and operation give it a default name and location
WITHOUT_CLASSIFICATION	copy all the features
WITHOUT_CLASSIFICATION	see java.util.enumeration hasmoreelements
WITHOUT_CLASSIFICATION	used by the copy functions. do not call this function directly. todo template parameters default type todo constraining elements todo flows dependencies comments bindings contexts ??? todo contents residences ??? param source the source me param target the target me
WITHOUT_CLASSIFICATION	nothing more to do do not copy owned elements.
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.figgroup hitfig java.awt.rectangle
WITHOUT_CLASSIFICATION	copy raised signals
WITHOUT_CLASSIFICATION	set the name so that superclasses can find the newly created element in the model if necessary.
WITHOUT_CLASSIFICATION	search for our current target language.
WITHOUT_CLASSIFICATION	note that if we are copying this element then we must also be allowed to copy other necessary objects.
WITHOUT_CLASSIFICATION	do not explicitly check if element is null
WITHOUT_CLASSIFICATION	unfortunately the fig and it is associated commentedge will not be fully initialized yet here if we are being loaded from a pgml file. the remainder of the initialization will happen when set dest source fignode are called from pgmlstackparser.attachedges
WITHOUT_CLASSIFICATION	return 1..1 multiplicity for empty string
WITHOUT_CLASSIFICATION	convert to 0.. instead of ..
WITHOUT_CLASSIFICATION	put all the bits together suppressing bounds calculations until we are all done for efficiency.
WITHOUT_CLASSIFICATION	according wfr in case of activitygraph only.
WITHOUT_CLASSIFICATION	delete extends where this is the base
WITHOUT_CLASSIFICATION	delete includes where this is the addition
WITHOUT_CLASSIFICATION	test multipe items registered for single key set
WITHOUT_CLASSIFICATION	and its enumerationliterals
WITHOUT_CLASSIFICATION	remove with null item should remove all entries for key
WITHOUT_CLASSIFICATION	if we get here then we did not get the default diagram.
WITHOUT_CLASSIFICATION	need to copy the lists since we will be moving the elements one by one
WITHOUT_CLASSIFICATION	deleting source here would probably delete the parameters...
WITHOUT_CLASSIFICATION	advance currenty to where the start of the body box is remembering that it overlaps the next box by 1 pixel. calculate the size of the body box and update the y pointer past it if it is displayed.
WITHOUT_CLASSIFICATION	only set the name if it differs from the text.
WITHOUT_CLASSIFICATION	get the assocations and connections. no problem there is a separate critic if this is not a binary association or is an association role.
WITHOUT_CLASSIFICATION	need to copy the lists since we will be moving the elements
WITHOUT_CLASSIFICATION	this is not necessarily the current diagram!
WITHOUT_CLASSIFICATION	remove the old fig from the diagram so we can draw the new one in its place
WITHOUT_CLASSIFICATION	create a new figtext instance based on the given mouse down event and the state of the parent editor.
WITHOUT_CLASSIFICATION	p.movetotrash source
WITHOUT_CLASSIFICATION	if there are no subkeys register using our special value to indicate that this is a primary key only registration
WITHOUT_CLASSIFICATION	made following change from ocl in uml 1.4 section 2.9.3.22 collaborationinstance collaborationinstanceset
WITHOUT_CLASSIFICATION	see org.argouml.model.umlhelper deletecollection java.util.collection
WITHOUT_CLASSIFICATION	if there is a 3rd column then this represents a connection of between 2 different types of element.
WITHOUT_CLASSIFICATION	see javax.management.notificationbroadcaster removenotificationlistener javax.management.notificationlistener
WITHOUT_CLASSIFICATION	elements which will be deleted when their container is deleted do not get added to the list of elements to be deleted but we still want to traverse them looking for other elements to be deleted
WITHOUT_CLASSIFICATION	technically this is legal but a structuralfeature should probably only ever have an owner instead of a namespace. tfm
WITHOUT_CLASSIFICATION	enumerationliterals should get deleted implicitly since they are associated by composition
WITHOUT_CLASSIFICATION	see javax.swing.plaf.metal.metaltheme getsecondary3
WITHOUT_CLASSIFICATION	uml2 only
WITHOUT_CLASSIFICATION	list.add literalreal uml 2.4 end literalspecification
WITHOUT_CLASSIFICATION	have we handled uml2 here?
WITHOUT_CLASSIFICATION	hypotheses no time expression only invariants
WITHOUT_CLASSIFICATION	see javax.swing.abstractaction.abstractaction
WITHOUT_CLASSIFICATION	todo gone in uml 2.1 it is now an instancespecification with an association as its classifier
WITHOUT_CLASSIFICATION	d.supplier.oclastype namespace .ownedelement select e e.elementownership.visibility public includes r.participant or
WITHOUT_CLASSIFICATION	uml1.4 only
WITHOUT_CLASSIFICATION	now resize all sub figs including not displayed figs. start by the name. we override the getminimumsize if it is less than our view 21 pixels hardcoded! . add in the shared extra plus in this case the correction.
WITHOUT_CLASSIFICATION	this does not work in uml2 both owner and property needed!
WITHOUT_CLASSIFICATION	set up the property panels for uml elements
WITHOUT_CLASSIFICATION	todo in uml 2.0 classifierrole associationrole and associationendrole have been replaced by the internal structure of the collaboration
WITHOUT_CLASSIFICATION	todo restructured in uml 2
WITHOUT_CLASSIFICATION	build up an array list of the heights of each label component pair. heights of zero indicate a proportional height.
WITHOUT_CLASSIFICATION	delete stimuli which have this as a sender or receiver
WITHOUT_CLASSIFICATION	make sure the component width is not any greater than its maximum allowed width
WITHOUT_CLASSIFICATION	for a iterator call we should provide a the variables b the expression to be evaluated on each step c the lambda evaluator to evaluate it
WITHOUT_CLASSIFICATION	todo unimplemented return property handle .gets
WITHOUT_CLASSIFICATION	for a transition use indirection through source statevertex
WITHOUT_CLASSIFICATION	the figpoly is located at the right of the name text. the namefig size is increased so that it fits its text and the figpoly next to the text all within the boundaries of the namefig.
WITHOUT_CLASSIFICATION	self.allconnections forall r self.namespace.allcontents includes r.participant
WITHOUT_CLASSIFICATION	removed from uml 2.x and deprecated in model api so we will not implement it throw new notimplementedexception we do not throw an exception because argouml still uses this
WITHOUT_CLASSIFICATION	them warning when changing the implementation of this method be warned that the sequence of the if then else tree does matter. them most notably do not move the setnamespace method any level up in the tree. p
WITHOUT_CLASSIFICATION	see javax.swing.defaultlistmodel contains java.lang.object
WITHOUT_CLASSIFICATION	see javax.swing.abstractaction.abstractaction java.lang.string javax.swing.icon
WITHOUT_CLASSIFICATION	end class crnonaggdatatype
WITHOUT_CLASSIFICATION	do not test changed element if it was deleted
WITHOUT_CLASSIFICATION	see org.tigris.gef.base.selectionbuttons paint java.awt.graphics
WITHOUT_CLASSIFICATION	fire all of the status events
WITHOUT_CLASSIFICATION	todo if a namespace with sub classdiagrams is deleted then confirmstr translator.localize optionpane.remove from model will remove subdiagram doask true
WITHOUT_CLASSIFICATION	simply use name as it is
WITHOUT_CLASSIFICATION	restricting types for tagged values
WITHOUT_CLASSIFICATION	classifier is way too much in uml 2.x
WITHOUT_CLASSIFICATION	if a preferred height is not given or is the same as the minimum height then fix the height of this row.
WITHOUT_CLASSIFICATION	the minimum set of standard types
WITHOUT_CLASSIFICATION	keep them sorted
WITHOUT_CLASSIFICATION	we assume profile is contained in a single extent
WITHOUT_CLASSIFICATION	we actually are computing max x max y not width height
WITHOUT_CLASSIFICATION	see javax.swing.event.documentlistener removeupdate javax.swing.event. documentevent
WITHOUT_CLASSIFICATION	make a copy of the modelelements
WITHOUT_CLASSIFICATION	see junit.framework.testcase runtest
WITHOUT_CLASSIFICATION	if the list does not exist add the code generation and good practices profiles as default
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlcomboboxmodel2 isvalidelement java.lang.object
WITHOUT_CLASSIFICATION	the selected operation
WITHOUT_CLASSIFICATION	see javax.swing.plaf.metal.metaltheme getmenutextfont
WITHOUT_CLASSIFICATION	action to save a diagram as a gif image in a supplied outputstream. todo this requires java 6 in its current state so do not use. author tom morris tfmorris gmail.com
WITHOUT_CLASSIFICATION	see tudresden.ocl.parser.analysis.depthfirstadapter casearelationalexpressiontail tudresden.ocl.parser.node.arelationalexpressiontail
WITHOUT_CLASSIFICATION	so we found a classifier that is not a classifierinstate. and at least one state has been selected. well let us correct that
WITHOUT_CLASSIFICATION	todo we just need to get someone to re render a single line of text which represents the element here but I am not sure how to do that. tfm todo bob replies we should not be interested in this event here. the figfeature or its notation should be listen for change and the figfeature should be update from that.
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlcomboboxmodel removeothermodeleventlisteners java.lang.object
WITHOUT_CLASSIFICATION	builds an initialized stereotype with no namespace. a stereotype must have a namespace so this method is unsafe. use buildstereotype string object . param text is the name of the stereotype return an initialized stereotype.
WITHOUT_CLASSIFICATION	do not use a custom icon the titles of buttons default button title
WITHOUT_CLASSIFICATION	base is already set to this assoc...
WITHOUT_CLASSIFICATION	or self.allconnections forall r self.namespace.allcontents excludes r.participant implies self.namespace.clientdependency exists d d.oclistypeof permission and d.stereotype.name access and
WITHOUT_CLASSIFICATION	see tudresden.ocl.parser.analysis.depthfirstadapter caseaifexpression tudresden.ocl.parser.node.aifexpression
WITHOUT_CLASSIFICATION	just in case the existing selected element is from elsewhere make sure it is in the list
WITHOUT_CLASSIFICATION	set properties of the stereotype box. initially not set to be displayed but this will be changed when we try to render it if we find we have a stereotype.
WITHOUT_CLASSIFICATION	select the current type in the combobox
WITHOUT_CLASSIFICATION	the selected value may be to clear the represented classifier.
WITHOUT_CLASSIFICATION	get the implementations of this operations and look for an opaquebehavior.
WITHOUT_CLASSIFICATION	init profiles defined in jar files
WITHOUT_CLASSIFICATION	return a list of namespaces enclosing this element. the list is ordered outer to inner. i.e. it starts at the root model.
WITHOUT_CLASSIFICATION	if it has no language then we assume it is not an instance of opaqueexpression so we leave it null and handle elsewhere
WITHOUT_CLASSIFICATION	build the field
WITHOUT_CLASSIFICATION	create a body that reacts to double clicks and jumps to a diagram.
WITHOUT_CLASSIFICATION	add field s to panel
WITHOUT_CLASSIFICATION	click on the already selected value must not call setvalue
WITHOUT_CLASSIFICATION	a.allconnections exists r r.type.ocliskindof actor and
WITHOUT_CLASSIFICATION	the 2 radios have only one information.
WITHOUT_CLASSIFICATION	update the model and then notify
WITHOUT_CLASSIFICATION	we silently ignore requests which conflict with uml 1.4 wfr 2.5.3.1 3 no aggregation for n ary associations
WITHOUT_CLASSIFICATION	when call by contructor no one is selected
WITHOUT_CLASSIFICATION	private boolean mustrefresh
WITHOUT_CLASSIFICATION	create an instance of the svg generator
WITHOUT_CLASSIFICATION	mustrefresh true
WITHOUT_CLASSIFICATION	this should not happen.
WITHOUT_CLASSIFICATION	see java.awt.event.keylistener keytyped java.awt.event.keyevent
WITHOUT_CLASSIFICATION	the following test can because trouble with links because links are accepted as directories even if they link files. links could also result in infinite loops. for this reason we do not do this traversing recursively.
WITHOUT_CLASSIFICATION	we need to to this otherwise there is no notification and diagram is not change
WITHOUT_CLASSIFICATION	scopekind visibilitykind pseudostatekind etc does not include boolean though despite what uml 1.4 spec says
WITHOUT_CLASSIFICATION	needed for notification
WITHOUT_CLASSIFICATION	because we map both ends of an association we will see many names twice log.log level.fine duplicate property name found 0 1 new object typename propertyname
WITHOUT_CLASSIFICATION	this is an expensive method that we should ensure is called rarely. hence info level to track easily.
WITHOUT_CLASSIFICATION	determine if metatype is a valid element for container
WITHOUT_CLASSIFICATION	language has changed
WITHOUT_CLASSIFICATION	translator.localize button.move down
WITHOUT_CLASSIFICATION	not in uml1.4
WITHOUT_CLASSIFICATION	fill the list with items
WITHOUT_CLASSIFICATION	specifies valid elements for an objectflowstate to contain
WITHOUT_CLASSIFICATION	commit our transaction
WITHOUT_CLASSIFICATION	used by the copy functions. do not call this function directly. param source the stereotype to copy from. param target the object becoming a copy.
WITHOUT_CLASSIFICATION	in uml2 the target is already the expression opaque...
WITHOUT_CLASSIFICATION	see org.argouml.model.directionkind getinoutparameter
WITHOUT_CLASSIFICATION	see java.util.list lastindexof java.lang.object
WITHOUT_CLASSIFICATION	arbitrary settings not used used for testing
WITHOUT_CLASSIFICATION	add the diagram as a listener to the namespace so that when the namespace is removed the diagram is deleted also.
WITHOUT_CLASSIFICATION	specifies valid elements for an associationrole to contain
WITHOUT_CLASSIFICATION	add new listeners
WITHOUT_CLASSIFICATION	see javax.swing.event.documentlistener insertupdate javax.swing.event. documentevent
WITHOUT_CLASSIFICATION	simulates uml2 getting the aggregation from the opposite end
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	see org.argouml.model.corehelper clearstereotypes java.lang.object
WITHOUT_CLASSIFICATION	see observable notifyobservers
WITHOUT_CLASSIFICATION	see org.argouml.model.visibilitykind getpublic
WITHOUT_CLASSIFICATION	see org.argouml.model.extensionmechanismsfactory createtaggedvalue
WITHOUT_CLASSIFICATION	build all other elements using existing buildnode
WITHOUT_CLASSIFICATION	this calls the getters to fetch actions even though the action variables are defined is instances of this class. this is because any number of action getters could have been overridden in a descendant and it is the action from that overridden method that should be returned in the array.
WITHOUT_CLASSIFICATION	see org.tigris.gef.graph.graphfactory makenode
WITHOUT_CLASSIFICATION	verify isrelevant returns true
WITHOUT_CLASSIFICATION	let us create a class with the given name otherwise the user will not understand why we refuse his input!
WITHOUT_CLASSIFICATION	see java.util.collection iterator
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getmessagesort
WITHOUT_CLASSIFICATION	mmodelelement
WITHOUT_CLASSIFICATION	todo all of the following can be broken if we have multiple targets selected
WITHOUT_CLASSIFICATION	if not it is a control and must be labeled...
WITHOUT_CLASSIFICATION	see org.argouml.model.visibilitykind getprivate
WITHOUT_CLASSIFICATION	see org.argouml.model.scopekind getinstance
WITHOUT_CLASSIFICATION	see org.argouml.model.pseudostatekind getjoin
WITHOUT_CLASSIFICATION	see org.argouml.model.pseudostatekind getinitial
WITHOUT_CLASSIFICATION	destroy it
WITHOUT_CLASSIFICATION	disable the button since no row will be selected now
WITHOUT_CLASSIFICATION	title because already done for optional
WITHOUT_CLASSIFICATION	we got passed an unmodifiable list. copy it and sort the result
WITHOUT_CLASSIFICATION	nothing to do we get all events automatically
WITHOUT_CLASSIFICATION	force the parent to redraw
WITHOUT_CLASSIFICATION	test if the given namespace is a valid namespace to add the diagram to. todo this method was created to facilitate the merge of this class with actionadddiagram. param ns the namespace to check return returns code true code if valid.
WITHOUT_CLASSIFICATION	see org.argouml.model.abstractmodeleventpump removeclassmodeleventlistener java.beans.propertychangelistener java.lang.object java.lang.string
WITHOUT_CLASSIFICATION	do not set buildingmodel false here otherwise the action for selection is performed.
WITHOUT_CLASSIFICATION	makes sure we can select none
WITHOUT_CLASSIFICATION	see org.argouml.model.modeleventpump flushmodelevents
WITHOUT_CLASSIFICATION	todo for large lists this is doing a linear search of literally thousands of elements
WITHOUT_CLASSIFICATION	see org.argouml.model.extensionmechanismshelper getstereotypes java.lang.object
WITHOUT_CLASSIFICATION	todo here too?
WITHOUT_CLASSIFICATION	see abstracttestactionadddiagram getvalidnamespaceclasses
WITHOUT_CLASSIFICATION	check against is needed for backward compatibility. do not remove without checking subclasses and warning downstream developers tfm 20081211
WITHOUT_CLASSIFICATION	see org.argouml.model.concurrencykind getsequential
WITHOUT_CLASSIFICATION	start of interval
WITHOUT_CLASSIFICATION	see org.argouml.model.modeleventpump removemodeleventlistener java.beans.propertychangelistener java.lang.object
WITHOUT_CLASSIFICATION	end of interval
WITHOUT_CLASSIFICATION	in middle of interval
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	see org.argouml.model.umlhelper move java.lang.object
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	see javax.swing.listmodel getelementat int
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.critics.critic addsupporteddecision org.argouml.cognitive.decision
WITHOUT_CLASSIFICATION	catch callers attempting to use one without other
WITHOUT_CLASSIFICATION	see org.argouml.model.umlhelper move java.lang.object org.argouml.model.umlhelper.direction
WITHOUT_CLASSIFICATION	see javax.swing.comboboxmodel setselecteditem java.lang.object
WITHOUT_CLASSIFICATION	see javax.swing.comboboxmodel getselecteditem
WITHOUT_CLASSIFICATION	see javax.swing.abstractlistmodel firecontentschanged object int int
WITHOUT_CLASSIFICATION	see javax.swing.abstractlistmodel fireintervalremoved object int int
WITHOUT_CLASSIFICATION	see javax.swing.plaf.metal.metaltheme getwindowtitlefont
WITHOUT_CLASSIFICATION	end andromda code
WITHOUT_CLASSIFICATION	see org.argouml.model.changeablekind getfrozen
WITHOUT_CLASSIFICATION	if we have found the module model log it and place it in the map so we do not have to find it if we need it again.
WITHOUT_CLASSIFICATION	see org.argouml.model.usecaseshelper getallusecases java.lang.object
WITHOUT_CLASSIFICATION	see javax.swing.plaf.metal.metaltheme getusertextfont
WITHOUT_CLASSIFICATION	although not represented in the ocl or our java the english text of wfr 4 of section 2.10.3.4 in the uml 1.4 spec is more restrictive 4 a collaboration may only contain classifierroles and associationroles the generalizations and the constraints between them and actions used in the collaboration s interactions.
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.umldiagram propertychange java.beans.propertychangeevent
WITHOUT_CLASSIFICATION	just returns the descr param. see org.argouml.cognitive.poster expand java.lang.string listset
WITHOUT_CLASSIFICATION	see javax.swing.text.document remove int int
WITHOUT_CLASSIFICATION	returns a list
WITHOUT_CLASSIFICATION	do nothing by design.
WITHOUT_CLASSIFICATION	find the bases of the connected classifierroles so that we can see what associations are between them. if there are bases then the associations between those bases form the possible bases. otherwise the bases are formed by all associations in the namespace of the collaboration
WITHOUT_CLASSIFICATION	see javax.swing.plaf.metal.metaltheme getsecondary1
WITHOUT_CLASSIFICATION	a list of the path item attributes for this container. the list is populated during parsing them processed at endelement private list hashtable string string pathitemattrs new arraylist hashtable string string
WITHOUT_CLASSIFICATION	see org.argouml.model.abstractmodeleventpump addmodeleventlistener java.beans.propertychangelistener java.lang.object java.lang.string
WITHOUT_CLASSIFICATION	because we get the metatype class stripped of its reflective proxies we need to jump through a hoop or two to find it in the metamodel then work from there to get its proxy.
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui. abstracttestactionadddiagram getvalidnamespaceclasses
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlcheckbox buildmodel
WITHOUT_CLASSIFICATION	copy the current in the previous
WITHOUT_CLASSIFICATION	sanity check the returned path item placement strategy should match the one in the uml. if it does not it could be that the uml was created with an older argo version and the new argo version use a different placement strategy. if they do not match just use the default.
WITHOUT_CLASSIFICATION	super new labelledlayout
WITHOUT_CLASSIFICATION	get the list opaqueexpression literalstring ...
WITHOUT_CLASSIFICATION	by default the first value of the combobox is selected.
WITHOUT_CLASSIFICATION	get current initialvalue
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.critics.critic critique java.lang.object org.argouml.cognitive.designer
WITHOUT_CLASSIFICATION	see org.argouml.model.statemachineshelper getsource java.lang.object
WITHOUT_CLASSIFICATION	default 0 opaqueexpression set to 1 for test
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.poster expand java.lang.string listset
WITHOUT_CLASSIFICATION	create the body and language field
WITHOUT_CLASSIFICATION	create other panel element
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.poster getsupportedgoals
WITHOUT_CLASSIFICATION	create panel containing the previous field
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.critics.critic isactive
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.critics.critic isenabled
WITHOUT_CLASSIFICATION	compare the type of the parameters. if any of the types is null then we have a match.
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.poster getsupporteddecisions
WITHOUT_CLASSIFICATION	there are no composite states so this will work
WITHOUT_CLASSIFICATION	does not do anything. see org.argouml.cognitive.poster fixit org.argouml.cognitive.todoitem java.lang.object
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.poster unsnooze
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.poster snooze
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.poster fixit org.argouml.cognitive.todoitem java.lang.object
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.poster supports org.argouml.cognitive.goal
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlmodelelementlistmodel2 settarget java.lang.object
WITHOUT_CLASSIFICATION	now we are sure dm is a statevertex.
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	get all classifiers in all top level packages of all profiles
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.abstracttestactionadddiagram getnamespace
WITHOUT_CLASSIFICATION	copy the next value in the current
WITHOUT_CLASSIFICATION	see junit.framework.testcase teardown
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlcomboboxmodel isvalidelement java.lang.object
WITHOUT_CLASSIFICATION	the selected value may be to clear the represented operation.
WITHOUT_CLASSIFICATION	ignored we just skipped inserting it in our document
WITHOUT_CLASSIFICATION	allow null
WITHOUT_CLASSIFICATION	see org.argouml.application.events.argogeneratoreventlistener generatorremoved org.argouml.application.events.argogeneratorevent
WITHOUT_CLASSIFICATION	make sure it is parseable as an number
WITHOUT_CLASSIFICATION	we do not want to show some nasty gray background color now do we?
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.todolistlistener todoitemschanged org.argouml.cognitive.todolistevent
WITHOUT_CLASSIFICATION	next statement is necessary to update the textfield if the selection is equal to what was allready selected
WITHOUT_CLASSIFICATION	see java.util.list listiterator int
WITHOUT_CLASSIFICATION	see javax.swing.comboboxeditor geteditorcomponent
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.todolistlistener todoitemsadded org.argouml.cognitive.todolistevent
WITHOUT_CLASSIFICATION	see javax.swing.comboboxeditor removeactionlistener java.awt.event.actionlistener
WITHOUT_CLASSIFICATION	see javax.swing.comboboxeditor selectall
WITHOUT_CLASSIFICATION	see javax.swing.comboboxeditor getitem
WITHOUT_CLASSIFICATION	copy the current in the next
WITHOUT_CLASSIFICATION	temporary until simplelistmodel is used for all
WITHOUT_CLASSIFICATION	create popup tool if we have a single row
WITHOUT_CLASSIFICATION	create add and remove buttons if needed first
WITHOUT_CLASSIFICATION	pushing this to the end of the awt thread seems to be the only way to get this to update correctly
WITHOUT_CLASSIFICATION	class to display graphics for a uml link in a diagram. p the underlined association name is shown next to the middle of the path. todo show more notation as described in the standard a rolename may be shown at each end of the link. an association name may be shown near the path. if present it is underlined to indicate an instance. links do not have instance names they take their identity from the instances that they relate. multiplicity is not shown for links because they are instances. other association adornments aggregation composition navigation may be shown on the link ends.
WITHOUT_CLASSIFICATION	button action
WITHOUT_CLASSIFICATION	todo gennavigableclasses?
WITHOUT_CLASSIFICATION	see org.argouml.notation.notationname getconfigurationvalue
WITHOUT_CLASSIFICATION	utility function to add a listener for an array of property names and remember the registration. param element element to listen for changes on param property array of property names strings to listen for changes of see org.argouml.model.modeleventpump addmodeleventlistener propertychangelistener object string
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlmodelelementlistmodel buildmodellist
WITHOUT_CLASSIFICATION	utility function to remove an element listener and adapt the remembered list of registration. param element element to listen for changes on see org.argouml.model.modeleventpump addmodeleventlistener propertychangelistener object string
WITHOUT_CLASSIFICATION	get features owned by those classifiers
WITHOUT_CLASSIFICATION	now we construct the zig zag inheritance line getunderlyingfig
WITHOUT_CLASSIFICATION	the 5 main component 2 label a panel for langage a panel with button a textarea
WITHOUT_CLASSIFICATION	translator.localize button.delete
WITHOUT_CLASSIFICATION	copy previous element
WITHOUT_CLASSIFICATION	for a classifier pre 10 the operation allcontents returns a set containing all modelelements contained in the classifier together with the contents inherited from its parents. allcontents set modelelement allcontents self.contents union self.parent.allcontents select e e.elementownership.visibility public or e.elementownership.visibility protected where parent is defined for generalizableelement as 1 the operation parent returns a set containing all direct parents parent set generalizableelement parent self.generalization.parent pre p
WITHOUT_CLASSIFICATION	copy next element
WITHOUT_CLASSIFICATION	see org.argouml.notation.providers.notationprovider updatelistener java.beans.propertychangelistener java.lang.object java.beans.propertychangeevent
WITHOUT_CLASSIFICATION	translator.localize button.move up
WITHOUT_CLASSIFICATION	copy in memory the current
WITHOUT_CLASSIFICATION	copy the previous value in the current
WITHOUT_CLASSIFICATION	self associations are special cases. no need to let the maze runner find the way.
WITHOUT_CLASSIFICATION	the 2 component a textfield and a list
WITHOUT_CLASSIFICATION	extract the icon that is used by the tree control for the current look and feel
WITHOUT_CLASSIFICATION	add a new entry in the list and select it. translator.localize button.add
WITHOUT_CLASSIFICATION	todo make use of the constants defined in the todoitem class!
WITHOUT_CLASSIFICATION	handle itemuid in container contents
WITHOUT_CLASSIFICATION	profile section dealing with profiles in different states
WITHOUT_CLASSIFICATION	copy the todo items after the model and diagrams so that any model elements or figs that the todo items refer to will exist before creating critics.
WITHOUT_CLASSIFICATION	for java notation we also need to listen to leaf changes since they are shown as final on the diagram.
WITHOUT_CLASSIFICATION	no text? remove attr!
WITHOUT_CLASSIFICATION	get the list of valid model item pairs for the given connection type
WITHOUT_CLASSIFICATION	let us make it a bit more difficult by setting the target
WITHOUT_CLASSIFICATION	allow listening to other elements
WITHOUT_CLASSIFICATION	we need to set the namespace owner of the new attribute before parsing
WITHOUT_CLASSIFICATION	try with statediagram
WITHOUT_CLASSIFICATION	if anything goes wrong return the stack trace as a string so that we get some useful feedback.
WITHOUT_CLASSIFICATION	is this item a copy? see java.lang.object equals java.lang.object
WITHOUT_CLASSIFICATION	once one criticism is found exit
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getscopekind
WITHOUT_CLASSIFICATION	create new menu item if it does not exist for this class.
WITHOUT_CLASSIFICATION	for a collaboration pre 1 the operation allcontents results in the set of all modelelements contained in the collaboration together with those contained in the parents except those that have been specialized. allcontents set modelelement allcontents self.contents union self.parent.allcontents reject e self.contents.name include e.name parent here is the generalizableelement definition pre
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getxmireader
WITHOUT_CLASSIFICATION	see java.util.collection clear
WITHOUT_CLASSIFICATION	issue resolutions
WITHOUT_CLASSIFICATION	default parameter name
WITHOUT_CLASSIFICATION	the critiquing thread should wait if disabled.
WITHOUT_CLASSIFICATION	see java.awt.event.actionlistener actionperformed java.awt.event. actionevent
WITHOUT_CLASSIFICATION	if menus do not containt menu item necessary for this class create it
WITHOUT_CLASSIFICATION	see javax.swing.jcomponent paintcomponent java.awt.graphics
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getorderingkind
WITHOUT_CLASSIFICATION	constructor and singeton methods
WITHOUT_CLASSIFICATION	used by the copy functions. do not call this function directly. todo generalizations specializations? param source the source generalizable element param target the target generalizable element
WITHOUT_CLASSIFICATION	why?
WITHOUT_CLASSIFICATION	see java.awt.event.mouselistener mouseexited java.awt.event.mouseevent
WITHOUT_CLASSIFICATION	getautocritique
WITHOUT_CLASSIFICATION	delete dependencies where this is the only client
WITHOUT_CLASSIFICATION	do not clear everything here breaks loading!
WITHOUT_CLASSIFICATION	v71
WITHOUT_CLASSIFICATION	do not let a transient error kill the thread
WITHOUT_CLASSIFICATION	decision model listener
WITHOUT_CLASSIFICATION	end class childgendmelements
WITHOUT_CLASSIFICATION	todo all the todos in the docopyfoo methods below are inherited from the nsuml implementation and do not reflect new issues. one additional thing which does need to be dealt with is the copying of any attributes which have been added since this code was implemented for uml 1.3.
WITHOUT_CLASSIFICATION	see org.argouml.uml.notation.notationprovider getparsinghelp
WITHOUT_CLASSIFICATION	used by the copy functions. do not call this function directly. todo actions? instances? collaborations etc? param source the source classifier param target the target classifier
WITHOUT_CLASSIFICATION	todo this should be the name of the designer that created the todoitem not the current username!
WITHOUT_CLASSIFICATION	log.log level.fine predicate returned true creating todoitem
WITHOUT_CLASSIFICATION	corrective automations wizards
WITHOUT_CLASSIFICATION	check param types only some connections are legal uml connections
WITHOUT_CLASSIFICATION	in this case either the container was not set or it was not contained in a statemachine.
WITHOUT_CLASSIFICATION	we will put the association in the namespace of whichever end is not navigable and is writeable. if they both are we will use the namepace of c1.
WITHOUT_CLASSIFICATION	critiquing
WITHOUT_CLASSIFICATION	mstatevertex
WITHOUT_CLASSIFICATION	see org.argouml.application.events.argonotationeventlistener notationremoved org.argouml.application.events.argonotationevent
WITHOUT_CLASSIFICATION	if wizclass is not a subclass of wizard print a warning
WITHOUT_CLASSIFICATION	return getcriticname
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getdirectionkind
WITHOUT_CLASSIFICATION	end interface poster
WITHOUT_CLASSIFICATION	use this for fast fail instead. sacrificed for complete fail. d00mst throw new unresolvableexception unable to create itemuid for class obj.getclass
WITHOUT_CLASSIFICATION	todo values
WITHOUT_CLASSIFICATION	delete extends which have this as their only extensionpoint
WITHOUT_CLASSIFICATION	end class goal
WITHOUT_CLASSIFICATION	check if we are using a supported java version
WITHOUT_CLASSIFICATION	implements java.io.serialization
WITHOUT_CLASSIFICATION	see org.argouml.application.events.argonotationeventlistener notationproviderremoved org.argouml.application.events.argonotationevent
WITHOUT_CLASSIFICATION	end class curdecisioncm
WITHOUT_CLASSIFICATION	as soon as we have created a notation and have registered it listener force an event to go to the listener so it draws for the first time.
WITHOUT_CLASSIFICATION	end class standardcm
WITHOUT_CLASSIFICATION	see org.argouml.persistence.saxparserbase handlestartelement org.argouml.persistence.xmlelement
WITHOUT_CLASSIFICATION	end class compositecm
WITHOUT_CLASSIFICATION	end class enabledcm
WITHOUT_CLASSIFICATION	end class notsnoozedcm
WITHOUT_CLASSIFICATION	end class andcm
WITHOUT_CLASSIFICATION	end class designgoalscm
WITHOUT_CLASSIFICATION	end class orcm
WITHOUT_CLASSIFICATION	see java.awt.event.windowlistener windowclosing java.awt.event.windowevent
WITHOUT_CLASSIFICATION	register our last chance exception handler
WITHOUT_CLASSIFICATION	see java.awt.component getlocale
WITHOUT_CLASSIFICATION	get the splash screen up as early as possible
WITHOUT_CLASSIFICATION	we have to do this to set the laf for the splash screen
WITHOUT_CLASSIFICATION	main initialization happens here
WITHOUT_CLASSIFICATION	tooltipmanager.sharedinstance .setinitialdelay 500
WITHOUT_CLASSIFICATION	force the configuration to load
WITHOUT_CLASSIFICATION	synchronize the startup directory
WITHOUT_CLASSIFICATION	then print out some version info for debuggers...
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getmetatypes
WITHOUT_CLASSIFICATION	set the i18n locale
WITHOUT_CLASSIFICATION	see javax.swing.tree.treemodel getroot
WITHOUT_CLASSIFICATION	set properties for application behaviour
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getusecasesfactory
WITHOUT_CLASSIFICATION	now let us print it
WITHOUT_CLASSIFICATION	nothing else to do ?
WITHOUT_CLASSIFICATION	we must have a project open before continuing. create if necessary
WITHOUT_CLASSIFICATION	perform one command.
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getchangeablekind
WITHOUT_CLASSIFICATION	now create a new object.
WITHOUT_CLASSIFICATION	set the namespace to that of the base as first choice or that of the addition as second choice.
WITHOUT_CLASSIFICATION	initlogging
WITHOUT_CLASSIFICATION	make the projectbrowser
WITHOUT_CLASSIFICATION	end class main
WITHOUT_CLASSIFICATION	end class postload
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getstatemachineshelper
WITHOUT_CLASSIFICATION	we do not care if optional modules are not found.
WITHOUT_CLASSIFICATION	end class loadmodules
WITHOUT_CLASSIFICATION	see org.argouml.persistence.abstractfilepersister getdesc
WITHOUT_CLASSIFICATION	all tabs are added at the end except a tabtodotarget
WITHOUT_CLASSIFICATION	end interface guisettingstabinterface
WITHOUT_CLASSIFICATION	editor editor globals.cureditor graphmodel gm editor.getgraphmodel layerdiagram lay layerdiagram editor.getlayermanager .getactivelayer
WITHOUT_CLASSIFICATION	skip pos we know it is not a valid char from above
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getumlhelper
WITHOUT_CLASSIFICATION	store in the user configuration and let gef know also.
WITHOUT_CLASSIFICATION	use the configuration if it exists otherwise use what gef thinks.
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getstatemachinesfactory
WITHOUT_CLASSIFICATION	param pc see org.argouml.profile.profilemanager applyconfiguration org.argouml.kernel.profileconfiguration
WITHOUT_CLASSIFICATION	failed to clone
WITHOUT_CLASSIFICATION	see if two copies look like copies of eachother
WITHOUT_CLASSIFICATION	remark the code in projectsettings.init currently presumes that nobody is using this event.
WITHOUT_CLASSIFICATION	calculate the higher and lower figs
WITHOUT_CLASSIFICATION	note this is package scope to force callers to use resourceloaderwrapper
WITHOUT_CLASSIFICATION	see java.util.observable notifyobservers java.lang.object
WITHOUT_CLASSIFICATION	end class resourceloader
WITHOUT_CLASSIFICATION	the validity checking thread should wait if disabled.
WITHOUT_CLASSIFICATION	if element has been deleted it is no longer valid
WITHOUT_CLASSIFICATION	history.thehistory.additemresolution item no longer valid todoitem item .resolve no longer valid notifyobservers removeelement item
WITHOUT_CLASSIFICATION	notifications and updates
WITHOUT_CLASSIFICATION	see org.argouml.profile.internal.ocl.oclexpressionevaluator evaluate java.util.hashmap org.argouml.profile.internal.ocl.modelinterpreter java.lang.string
WITHOUT_CLASSIFICATION	skip any identical items already on the list
WITHOUT_CLASSIFICATION	cat.debug checking for inhibitors rc
WITHOUT_CLASSIFICATION	history.thehistory.additemresolution item reason
WITHOUT_CLASSIFICATION	see org.argouml.profile.internal.ocl.uml14.bag count java.lang.object
WITHOUT_CLASSIFICATION	returns the target of this tab. see org.argouml.ui.tabtarget gettarget
WITHOUT_CLASSIFICATION	enable buttons when selection made. see java.awt.event.actionlistener actionperformed java.awt.event.actionevent
WITHOUT_CLASSIFICATION	here we located the new classifier with its operation.
WITHOUT_CLASSIFICATION	end class argojmenu
WITHOUT_CLASSIFICATION	eventlistenerlist.add is synchronized so we do not need to synchronize ourselves
WITHOUT_CLASSIFICATION	refresh the text of the tab. see org.argouml.ui.tabtarget refresh
WITHOUT_CLASSIFICATION	end interface clarifier
WITHOUT_CLASSIFICATION	set the checkbox on or off according to the selected value of the action. if no selected value is found then this defaults to true.
WITHOUT_CLASSIFICATION	extra care to be taken since alloffenders can be reset while this method is running.
WITHOUT_CLASSIFICATION	cached expansions
WITHOUT_CLASSIFICATION	set the icon for this poster
WITHOUT_CLASSIFICATION	eventlistenerlist.remove is synchronized so we do not need to synchronize ourselves
WITHOUT_CLASSIFICATION	mvw
WITHOUT_CLASSIFICATION	todo add double click listener
WITHOUT_CLASSIFICATION	event related stuff
WITHOUT_CLASSIFICATION	end class crnwayagg.java
WITHOUT_CLASSIFICATION	end class checkmanager
WITHOUT_CLASSIFICATION	now let us search
WITHOUT_CLASSIFICATION	end class tabchecklist
WITHOUT_CLASSIFICATION	we found it!
WITHOUT_CLASSIFICATION	enter the class to speed up the next search.
WITHOUT_CLASSIFICATION	this is explained by wfr 2 of a structuralfeature the type of a structuralfeature must be a class datatype or interface. see org.argouml.uml.ui.umlcomboboxmodel isvalidelement object
WITHOUT_CLASSIFICATION	see org.argouml.ui.guisettingstabinterface gettabkey
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlcomboboxmodel2 propertychange java.beans.propertychangeevent
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlmodelelementlistmodel2 addothermodeleventlisteners java.lang.object
WITHOUT_CLASSIFICATION	static accessors
WITHOUT_CLASSIFICATION	instance varables
WITHOUT_CLASSIFICATION	see java.util.list addall int java.util.collection
WITHOUT_CLASSIFICATION	report a progress to the progressmonitor window. see org.argouml.persistence.progresslistener progress org.argouml.persistence.progressevent
WITHOUT_CLASSIFICATION	by default double the snooze interval each time
WITHOUT_CLASSIFICATION	end class snoozeorder
WITHOUT_CLASSIFICATION	wizard actions
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlmodelelementlistmodel2 buildpopup javax.swing.jpopupmenu int
WITHOUT_CLASSIFICATION	this changes the complete structure of the table so we need to set the column widths again.
WITHOUT_CLASSIFICATION	todo do all following steps todo resolve item from todolist
WITHOUT_CLASSIFICATION	end class actionopencritics
WITHOUT_CLASSIFICATION	set initial sorting on critic headline
WITHOUT_CLASSIFICATION	critics table
WITHOUT_CLASSIFICATION	critic details panel
WITHOUT_CLASSIFICATION	tablemodel implemetation
WITHOUT_CLASSIFICATION	no maximum set so it will stretch...
WITHOUT_CLASSIFICATION	and for advanced mode
WITHOUT_CLASSIFICATION	this check is needed otherwise the setbase below gives an exception.
WITHOUT_CLASSIFICATION	set tablesp s preferred height to 0 so that details height is used in pack
WITHOUT_CLASSIFICATION	c.gridy 0 c.gridx 0 jlabel prilabel new jlabel priority gb.setconstraints prilabel c mainpanel.add prilabel
WITHOUT_CLASSIFICATION	c.gridy 0 c.gridx 2 jlabel lowlabel new jlabel low gb.setconstraints lowlabel c mainpanel.add lowlabel
WITHOUT_CLASSIFICATION	c.gridy 0 c.gridx 3 jlabel twolabel new jlabel ad gb.setconstraints twolabel c mainpanel.add twolabel
WITHOUT_CLASSIFICATION	c.gridy 0 c.gridx 5 jlabel fourlabel new jlabel asd gb.setconstraints fourlabel c mainpanel.add fourlabel
WITHOUT_CLASSIFICATION	c.gridy 0 c.gridx 6 jlabel highlabel new jlabel high gb.setconstraints highlabel c mainpanel.add highlabel
WITHOUT_CLASSIFICATION	see java.util.list get int
WITHOUT_CLASSIFICATION	see org.argouml.ui.explorer.treemodelumleventlistener modelelementremoved java.lang.object
WITHOUT_CLASSIFICATION	treemodel implementation todo specific stuff
WITHOUT_CLASSIFICATION	class variables
WITHOUT_CLASSIFICATION	general icons for poster
WITHOUT_CLASSIFICATION	specialised icons for designer
WITHOUT_CLASSIFICATION	end class todotreerenderer
WITHOUT_CLASSIFICATION	public static decision decisionuncategorized new decision uncategorized 1
WITHOUT_CLASSIFICATION	end class todobydecision
WITHOUT_CLASSIFICATION	see org.argouml.ui.explorer.perspectivemanagerlistener removeperspective java.lang.object
WITHOUT_CLASSIFICATION	if the control is a panel add it
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig classnameandbounds
WITHOUT_CLASSIFICATION	c.gridx 1 c.gridy 3 c.gridheight gridbagconstraints.remainder spacerpanel spacer2 new spacerpanel gb.setconstraints spacer2 c mainpanel.add spacer2
WITHOUT_CLASSIFICATION	if we do not set it to null first then we get a mdr debugexception
WITHOUT_CLASSIFICATION	end class wizsteptextfield
WITHOUT_CLASSIFICATION	end class wizdescription
WITHOUT_CLASSIFICATION	end class wizstepcue
WITHOUT_CLASSIFICATION	stop start creating more critics
WITHOUT_CLASSIFICATION	end class actiongotocritique
WITHOUT_CLASSIFICATION	end class actionautocritique
WITHOUT_CLASSIFICATION	stop start cleaning up invalid todoitems.
WITHOUT_CLASSIFICATION	reuse opaque... just set it is attributes
WITHOUT_CLASSIFICATION	see javax.management.notificationbroadcaster addnotificationlistener javax.management.notificationlistener javax.management.notificationfilter java.lang.object
WITHOUT_CLASSIFICATION	end class actionopengoals
WITHOUT_CLASSIFICATION	? inform
WITHOUT_CLASSIFICATION	if visibility is already changed for this class respect it.
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlmodelelementlistmodel2 isvalidelement java.lang.object
WITHOUT_CLASSIFICATION	see targetlistener targetremoved targetevent
WITHOUT_CLASSIFICATION	update our model with our saved target
WITHOUT_CLASSIFICATION	stop updating model when we are not visible
WITHOUT_CLASSIFICATION	instead of making a new list decrement index return when found and index 0
WITHOUT_CLASSIFICATION	see java.util.collection add java.lang.object
WITHOUT_CLASSIFICATION	the target of description will always be set directly by tabtodo
WITHOUT_CLASSIFICATION	p new umlvaluespecificationpanel model propertyname
WITHOUT_CLASSIFICATION	end class wizstepconfirm
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlcombobox doit actionevent
WITHOUT_CLASSIFICATION	next line coming from projectbrowser
WITHOUT_CLASSIFICATION	itemlistener implementation
WITHOUT_CLASSIFICATION	treeselectionlistener implementation
WITHOUT_CLASSIFICATION	prepare for typing in rationale field when window is opened. see java.awt.component setvisible boolean
WITHOUT_CLASSIFICATION	it would be better if we did not need the container to get the target. this constructor can have zero parameters as soon as we improve targetchanged.
WITHOUT_CLASSIFICATION	only interrupt for one todoitem
WITHOUT_CLASSIFICATION	end class actionopendecisions
WITHOUT_CLASSIFICATION	blinks?
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlcomboboxmodel getselectedmodelelement
WITHOUT_CLASSIFICATION	add the perspectives to a list for the combobox
WITHOUT_CLASSIFICATION	decslide.setpaintlabels true
WITHOUT_CLASSIFICATION	firetreenodeschanged this path childindices children
WITHOUT_CLASSIFICATION	mutators hold write lock will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	todo this looks o n 2
WITHOUT_CLASSIFICATION	todo make a new history item
WITHOUT_CLASSIFICATION	cat.debug bad decision
WITHOUT_CLASSIFICATION	cat.debug bad goal
WITHOUT_CLASSIFICATION	end class dismisstodoitemdialog
WITHOUT_CLASSIFICATION	our comparator will throw an invalidelementexception if the old list contains deleted elements eg after a new project is loaded so remove all the old contents first
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	todolistlistener implementation
WITHOUT_CLASSIFICATION	image.setmargin new insets 0 0 0 0
WITHOUT_CLASSIFICATION	the text was frozen
WITHOUT_CLASSIFICATION	otherwise parent must be an offending design material
WITHOUT_CLASSIFICATION	see javax.swing.abstractlistmodel fireintervaladded object int int
WITHOUT_CLASSIFICATION	end class wizstep
WITHOUT_CLASSIFICATION	see javax.swing.listmodel getsize
WITHOUT_CLASSIFICATION	do not allow instantiation
WITHOUT_CLASSIFICATION	n.b. a node which is an association is either a n ary association or the class part of an associationclass
WITHOUT_CLASSIFICATION	documentlistener implementation
WITHOUT_CLASSIFICATION	if the child component is resizable then we do not know it is actual size yet. it will be calculated later as a proportion of the available left over space. for now this is flagged as zero.
WITHOUT_CLASSIFICATION	targetlistener implementation
WITHOUT_CLASSIFICATION	end class configurationfactory
WITHOUT_CLASSIFICATION	log.log level.info configuration saved to 0 n url
WITHOUT_CLASSIFICATION	the text was frozen false
WITHOUT_CLASSIFICATION	check for the older properties file and copy it over if possible
WITHOUT_CLASSIFICATION	only allow one load
WITHOUT_CLASSIFICATION	add the first point twice
WITHOUT_CLASSIFICATION	initialize band buffer bounds
WITHOUT_CLASSIFICATION	log.log level.fine getdata rectangle clip
WITHOUT_CLASSIFICATION	create a new graphics context so we start with fresh transforms
WITHOUT_CLASSIFICATION	get all classifiers in our model todo we need the property panels to have some reference to the project they belong to instead of using deprecated functionality
WITHOUT_CLASSIFICATION	fill with our background color
WITHOUT_CLASSIFICATION	ask gef to print a band of the diagram translated clipped
WITHOUT_CLASSIFICATION	do not try to test this if we are removing the element
WITHOUT_CLASSIFICATION	make sure it is not caching anything that should be written
WITHOUT_CLASSIFICATION	assert !initialized guitestactionopenproject fails over this...
WITHOUT_CLASSIFICATION	retain the original one
WITHOUT_CLASSIFICATION	internal initialization method. handles initialization which is common to both public methods.
WITHOUT_CLASSIFICATION	this is needed for the junit tests. otherwise a assert initialized would suffice.
WITHOUT_CLASSIFICATION	flag the command as to whether it is first in a chain
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlcomboboxmodel isvalidelement object
WITHOUT_CLASSIFICATION	end class delayedchangenotify
WITHOUT_CLASSIFICATION	end class crconflictingcomposites
WITHOUT_CLASSIFICATION	default diagram settings
WITHOUT_CLASSIFICATION	default notation settings
WITHOUT_CLASSIFICATION	generation preferences
WITHOUT_CLASSIFICATION	the next one defaults to true to stay compatible with older argouml versions that did not have this setting
WITHOUT_CLASSIFICATION	the next ones defaults to true to stay compatible with older argouml versions that did not have this setting
WITHOUT_CLASSIFICATION	see javax.swing.comboboxeditor setitem java.lang.object
WITHOUT_CLASSIFICATION	always put the model at the top
WITHOUT_CLASSIFICATION	otherwise add the diagram at the start
WITHOUT_CLASSIFICATION	see if two copies look like copies of each other
WITHOUT_CLASSIFICATION	register with the save action with other subsystems so that any changes in those subsystems will enable the save button menu item etc.
WITHOUT_CLASSIFICATION	not needed in uml 1.x
WITHOUT_CLASSIFICATION	end interface delayedvchangelistener
WITHOUT_CLASSIFICATION	then any new buttons
WITHOUT_CLASSIFICATION	a profile initially has no applied profiles we go bottom up
WITHOUT_CLASSIFICATION	skip leading underscores
WITHOUT_CLASSIFICATION	see javax.swing.comboboxeditor addactionlistener java.awt.event.actionlistener
WITHOUT_CLASSIFICATION	todo should just be the directory to write.
WITHOUT_CLASSIFICATION	the preferences with project scope
WITHOUT_CLASSIFICATION	the argouml version with which this project was last saved
WITHOUT_CLASSIFICATION	if diagram added successfully add the member too
WITHOUT_CLASSIFICATION	adding a todo member removes any existing one.
WITHOUT_CLASSIFICATION	got past the veto add the member
WITHOUT_CLASSIFICATION	send indeterminate new value instead of making copy of vector
WITHOUT_CLASSIFICATION	hence a diagram name was saved in the project that we are loading. so we use this name to retrieve any matching diagram.
WITHOUT_CLASSIFICATION	use the first diagram.
WITHOUT_CLASSIFICATION	if there was no diagram at all then use the first uml model.
WITHOUT_CLASSIFICATION	we do not need this hashmap anymore so free up the memory
WITHOUT_CLASSIFICATION	can not delete the model
WITHOUT_CLASSIFICATION	can not delete the profile
WITHOUT_CLASSIFICATION	see java.lang.object finalize
WITHOUT_CLASSIFICATION	note no longer a separate type in uml 2.1
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	make the topmost diagram that is not the one being deleted current.
WITHOUT_CLASSIFICATION	trash related methods
WITHOUT_CLASSIFICATION	fire an event some anyone who cares about diagrams being removed can listen for it
WITHOUT_CLASSIFICATION	there is just one profileconfiguration in a project and there is no other way to add another one
WITHOUT_CLASSIFICATION	tab for the settings dialog that makes it possible to select the modules that are to be enabled. todo header for the table. author linus tolke
WITHOUT_CLASSIFICATION	see java.util.collection retainall java.util.collection
WITHOUT_CLASSIFICATION	access methods for modules that need to query about the status of other modules.
WITHOUT_CLASSIFICATION	access methods for the gui that the user uses to enable and disable modules.
WITHOUT_CLASSIFICATION	access methods for the program infrastructure
WITHOUT_CLASSIFICATION	todo huntformodulesfromjavawebstart
WITHOUT_CLASSIFICATION	we expect all extensions to have a manifest even though we can operate without one if necessary.
WITHOUT_CLASSIFICATION	this can throw an exception if the target has been deleted. we do not want to try locking the repository because this is called from the event delivery thread and could because a deadlock. instead catch the exception and leave the model empty.
WITHOUT_CLASSIFICATION	look for our specification
WITHOUT_CLASSIFICATION	add this to search list for i18n properties done for both modules localized property file sets
WITHOUT_CLASSIFICATION	we havn t found it. add it.
WITHOUT_CLASSIFICATION	see targetlistener targetset targetevent
WITHOUT_CLASSIFICATION	called after the notation default property gets changed. see java.beans.propertychangelistener propertychange java.beans.propertychangeevent
WITHOUT_CLASSIFICATION	the following check should have been satisfied before we instantiated the module but double check again
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getaggregationkind
WITHOUT_CLASSIFICATION	if it did not have a loadable module class and it does not look like a localized property set warn the user that something funny is in their extension directory
WITHOUT_CLASSIFICATION	since there is no way to compare the objects as equal we have to search through the list at this point.
WITHOUT_CLASSIFICATION	remark there is also a java like notation which is also part of argouml core distribution.
WITHOUT_CLASSIFICATION	this notation is not available!
WITHOUT_CLASSIFICATION	nsuml does this ? model.getfacade .setguard trans g
WITHOUT_CLASSIFICATION	this is needed for the case when the default notation is not loaded at this point.
WITHOUT_CLASSIFICATION	build the final string
WITHOUT_CLASSIFICATION	static workers for dealing with notation names.
WITHOUT_CLASSIFICATION	see org.tigris.gef.base.diagram initialize java.lang.object
WITHOUT_CLASSIFICATION	no valid field for above notationlanguage. it is valid if not null.
WITHOUT_CLASSIFICATION	we also show stereotypes
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fignode isdragconnectable
WITHOUT_CLASSIFICATION	we also show the type of which e.g. the name may change
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig getenclosedfigs
WITHOUT_CLASSIFICATION	and when the operation is replaced
WITHOUT_CLASSIFICATION	we are not interested in the name.
WITHOUT_CLASSIFICATION	and the parameter names and values
WITHOUT_CLASSIFICATION	and the arguments
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getcommonbehaviorfactory
WITHOUT_CLASSIFICATION	we also show parameters
WITHOUT_CLASSIFICATION	we also show types of parameters
WITHOUT_CLASSIFICATION	we also show tagged values the for derived
WITHOUT_CLASSIFICATION	register for events from all modelelements that change the name and body text i.e. when the callaction is replaced
WITHOUT_CLASSIFICATION	and when the owner is replaced unlikely for operations and when the operation changes name
WITHOUT_CLASSIFICATION	listen to the modelelement itself
WITHOUT_CLASSIFICATION	removed stereotype
WITHOUT_CLASSIFICATION	see org.tigris.gef.base.selectionbuttons paintbuttons graphics
WITHOUT_CLASSIFICATION	register for events from all modelelements that change the text i.e. when the transition is replaced
WITHOUT_CLASSIFICATION	new stereotype
WITHOUT_CLASSIFICATION	register for the doactivity etc.
WITHOUT_CLASSIFICATION	register for internal transitions
WITHOUT_CLASSIFICATION	see java.lang.object hashcode this will result in rather bad performance but at least we will not violate the contract together with link equals object .
WITHOUT_CLASSIFICATION	return parsing.java.help.attribute
WITHOUT_CLASSIFICATION	return parsing.help.fig association end name
WITHOUT_CLASSIFICATION	todo initial value
WITHOUT_CLASSIFICATION	skip spaces
WITHOUT_CLASSIFICATION	the name itself
WITHOUT_CLASSIFICATION	check the name for validity
WITHOUT_CLASSIFICATION	pick out return type
WITHOUT_CLASSIFICATION	handle multiplicity here since we need the type actually the api of generator is buggy since to generate multiplicity correctly we need the attribute too
WITHOUT_CLASSIFICATION	name and params
WITHOUT_CLASSIFICATION	check for more attributes separated
WITHOUT_CLASSIFICATION	remove bases that are not there anymore
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getdatatypesfactory
WITHOUT_CLASSIFICATION	notation.findnotation java
WITHOUT_CLASSIFICATION	initialize the notationutilityuml
WITHOUT_CLASSIFICATION	copy cannot iterate modify live collection while iterating it
WITHOUT_CLASSIFICATION	when nothing is generated omit the space.
WITHOUT_CLASSIFICATION	loop through all base classes building a comma separated list
WITHOUT_CLASSIFICATION	no non whitechars in text? remove attr!
WITHOUT_CLASSIFICATION	if the 1st attribute is static then the new ones too.
WITHOUT_CLASSIFICATION	handle visibility
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getdatatypeshelper
WITHOUT_CLASSIFICATION	fix for loading bad projects
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getactivitygraphsfactory
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getcollaborationsfactory
WITHOUT_CLASSIFICATION	the element was deleted while we were processing it
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getcorefactory
WITHOUT_CLASSIFICATION	no instantiations
WITHOUT_CLASSIFICATION	no text? remove op!
WITHOUT_CLASSIFICATION	no non whitechars in text? remove op!
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getcollaborationshelper
WITHOUT_CLASSIFICATION	check for more operations separated
WITHOUT_CLASSIFICATION	end while loop
WITHOUT_CLASSIFICATION	see javax.swing.tree.treemodel addtreemodellistener javax.swing.event.treemodellistener
WITHOUT_CLASSIFICATION	do not create a stereotype for signal on a reception but create any other parsed stereotypes as needed
WITHOUT_CLASSIFICATION	let us concatenate it to the resulting string genstr
WITHOUT_CLASSIFICATION	the parameters
WITHOUT_CLASSIFICATION	see org.argouml.ui.clarifier setfig org.tigris.gef.presentation.fig
WITHOUT_CLASSIFICATION	the returnparameters
WITHOUT_CLASSIFICATION	the model element was deleted while we were working on it
WITHOUT_CLASSIFICATION	see javax.swing.tree.treemodel getchildcount java.lang.object
WITHOUT_CLASSIFICATION	else we remove only the extra
WITHOUT_CLASSIFICATION	see org.argouml.uml.util.namespace.namespaceelement getnamespaceelement
WITHOUT_CLASSIFICATION	the query state
WITHOUT_CLASSIFICATION	remove last
WITHOUT_CLASSIFICATION	see org.argouml.uml.util.namespace.namespace setdefaultscopetoken java.lang.string
WITHOUT_CLASSIFICATION	end of block
WITHOUT_CLASSIFICATION	a string of the form name
WITHOUT_CLASSIFICATION	see java.util.collection removeall java.util.collection
WITHOUT_CLASSIFICATION	this is a message uml object
WITHOUT_CLASSIFICATION	supported format predecessors number action the 3 parts of the string to generate
WITHOUT_CLASSIFICATION	see java.util.collection contains java.lang.object
WITHOUT_CLASSIFICATION	this may return null
WITHOUT_CLASSIFICATION	activatorintno is now guaranteed not null
WITHOUT_CLASSIFICATION	list string args null
WITHOUT_CLASSIFICATION	get the ordered list of immediate successors
WITHOUT_CLASSIFICATION	the condition or iteration expression recurrence
WITHOUT_CLASSIFICATION	see java.awt.event.componentlistener componentresized java.awt.event.componentevent
WITHOUT_CLASSIFICATION	now apply the changes to the model
WITHOUT_CLASSIFICATION	see java.awt.event.windowlistener windowactivated java.awt.event.windowevent
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getfacade
WITHOUT_CLASSIFICATION	disconnect the message from the call graph make copies of returned live collections since we are modifying
WITHOUT_CLASSIFICATION	find the preceding message if any on either end of the association.
WITHOUT_CLASSIFICATION	connect the message at a new spot
WITHOUT_CLASSIFICATION	case 3 4
WITHOUT_CLASSIFICATION	mclassifierrole
WITHOUT_CLASSIFICATION	if no variable name was given then retain the one in the model.
WITHOUT_CLASSIFICATION	if no function name was given then retain the one in the model.
WITHOUT_CLASSIFICATION	store the guard i.e. condition or iteration expression in the recurrence field of the action
WITHOUT_CLASSIFICATION	if there was no action yet create a callaction
WITHOUT_CLASSIFICATION	things are strange if there are more than one candidate root it has no obvious interpretation in terms of a call tree.
WITHOUT_CLASSIFICATION	we can do nothing if we do not have both the use case and extension point.
WITHOUT_CLASSIFICATION	parse the string to creat a new extension point.
WITHOUT_CLASSIFICATION	build a new extension point
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getdiagraminterchangemodel
WITHOUT_CLASSIFICATION	the empty string. return null
WITHOUT_CLASSIFICATION	handle derived
WITHOUT_CLASSIFICATION	this case is a bit different because of the parameters. if the event already exists the parameters are ignored.
WITHOUT_CLASSIFICATION	if we are given the null string return immediately so that the extensionpoint is removed.
WITHOUT_CLASSIFICATION	a string of the form name location . discard the middle token
WITHOUT_CLASSIFICATION	read past the colon.
WITHOUT_CLASSIFICATION	the string to build
WITHOUT_CLASSIFICATION	get the fields we want
WITHOUT_CLASSIFICATION	see org.tigris.gef.util.predicate predicate java.lang.object
WITHOUT_CLASSIFICATION	put in the name field if it is there
WITHOUT_CLASSIFICATION	put in the location field if it is there
WITHOUT_CLASSIFICATION	first we decode the string
WITHOUT_CLASSIFICATION	and 3rd we adapt the model
WITHOUT_CLASSIFICATION	same class other operation
WITHOUT_CLASSIFICATION	other class
WITHOUT_CLASSIFICATION	we found the classifier now go find the operation
WITHOUT_CLASSIFICATION	see org.argouml.uml.util.namespace.namespace peeknamespaceelement
WITHOUT_CLASSIFICATION	the text was frozen true
WITHOUT_CLASSIFICATION	should we be getting this from the gui? bt 11 aug 2002
WITHOUT_CLASSIFICATION	no type defined yet
WITHOUT_CLASSIFICATION	see org.argouml.uml.util.namespace.namespace iterator
WITHOUT_CLASSIFICATION	this automatically pulls in a tagdefinition from the profile
WITHOUT_CLASSIFICATION	the tv existed but maybe it was not true
WITHOUT_CLASSIFICATION	todo for uml2 check if the type of the tv is string.
WITHOUT_CLASSIFICATION	generate all the existing internal transitions so that we can compare them as text with the newly entered ones.
WITHOUT_CLASSIFICATION	allow concatenation order and separator to be localized
WITHOUT_CLASSIFICATION	it can still be null if the uml element did not have a multiplicity defined.
WITHOUT_CLASSIFICATION	see org.tigris.gef.graph.mutablegraphmodel connect java.lang.object java.lang.object java.lang.class
WITHOUT_CLASSIFICATION	let us not be picky about the brackets just remove them
WITHOUT_CLASSIFICATION	get the classifier
WITHOUT_CLASSIFICATION	the state of a classifierinstate is removed so let us reduce it to a classifier.
WITHOUT_CLASSIFICATION	strings
WITHOUT_CLASSIFICATION	see org.argouml.uml.util.namespace.namespace getbasenamespace
WITHOUT_CLASSIFICATION	remove the states that did not match.
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getextensionmechanismshelper
WITHOUT_CLASSIFICATION	the model is changed our job is done
WITHOUT_CLASSIFICATION	no state named s is found so we have to reject the user s input
WITHOUT_CLASSIFICATION	finally do the adaptations
WITHOUT_CLASSIFICATION	then c is a normal classifier uml states
WITHOUT_CLASSIFICATION	let us create a new classifierinstate with the correct links
WITHOUT_CLASSIFICATION	see org.tigris.swidgets.dialog namebuttons
WITHOUT_CLASSIFICATION	this updates the diagram hence as last statement
WITHOUT_CLASSIFICATION	see org.tigris.gef.graph.mutablegraphmodel canaddedge java.lang.object
WITHOUT_CLASSIFICATION	if no classifier has been set then entering a state is not useful so the user s input has to be rejected.
WITHOUT_CLASSIFICATION	todo if the next line trows an exception then what do we do with the remainder of the parsed to be parsed lines?
WITHOUT_CLASSIFICATION	add this new one and mark it to be retained
WITHOUT_CLASSIFICATION	wfr transitions omg uml 1.3
WITHOUT_CLASSIFICATION	process the final list of internal transitions and hook it to the state
WITHOUT_CLASSIFICATION	do not forget to remove old internals!
WITHOUT_CLASSIFICATION	make next accesses to this instance predictable
WITHOUT_CLASSIFICATION	and hook in the new ones
WITHOUT_CLASSIFICATION	container state composite state
WITHOUT_CLASSIFICATION	the actionexpression
WITHOUT_CLASSIFICATION	no good trigger
WITHOUT_CLASSIFICATION	let us look for a timeevent changeevent callevent or signalevent
WITHOUT_CLASSIFICATION	operation paramlist
WITHOUT_CLASSIFICATION	the part after the is for when there is nothing between the
WITHOUT_CLASSIFICATION	it is safe to give a null to the next function since a statemachine is always composed by a model anyhow.
WITHOUT_CLASSIFICATION	else the empty s will do
WITHOUT_CLASSIFICATION	return the ith element from a collection. param collection collection to get element from param index index of the element to be returned return the object
WITHOUT_CLASSIFICATION	case 1 and 2
WITHOUT_CLASSIFICATION	do not set the name.
WITHOUT_CLASSIFICATION	when ...
WITHOUT_CLASSIFICATION	see org.tigris.gef.graph.graphmodel getoutedges java.lang.object
WITHOUT_CLASSIFICATION	signalname
WITHOUT_CLASSIFICATION	and hook it to the transition immediately so that an exception can not because it to remain dangling
WITHOUT_CLASSIFICATION	yes there are more
WITHOUT_CLASSIFICATION	parameter etc.
WITHOUT_CLASSIFICATION	in is the default
WITHOUT_CLASSIFICATION	in
WITHOUT_CLASSIFICATION	return nothing
WITHOUT_CLASSIFICATION	see javax.swing.event.menulistener menuselected javax.swing.event.menuevent
WITHOUT_CLASSIFICATION	and parse the parameter list
WITHOUT_CLASSIFICATION	case 2
WITHOUT_CLASSIFICATION	just change the time expression
WITHOUT_CLASSIFICATION	we have an event without expression
WITHOUT_CLASSIFICATION	it is a time event now but was of another type before!
WITHOUT_CLASSIFICATION	just change the changeexpression
WITHOUT_CLASSIFICATION	create a new expression
WITHOUT_CLASSIFICATION	we can distinguish between 4 cases 1. a trigger is given. none exists yet. 2. the trigger was present and it is the same type or a different type and its text is changed or the same. 3. a trigger is not given. none exists yet. 4. the name of the trigger was present but is removed. the reaction in these cases should be 1. find the referred trigger issue 5988 or create a new one and hook it to the transition. 2. rename the trigger. 3. nop. 4. unhook and erase the existing trigger.
WITHOUT_CLASSIFICATION	the parsed text describes a change event but the model contains another type!
WITHOUT_CLASSIFICATION	just change the name and linked operation
WITHOUT_CLASSIFICATION	todo change the linked operation.
WITHOUT_CLASSIFICATION	just change the name and linked signal
WITHOUT_CLASSIFICATION	see org.argouml.profile.internal.ocl.modelinterpreter invokefeature java.util.map java.lang.object java.lang.string java.lang.string java.lang.object
WITHOUT_CLASSIFICATION	case 3 and 4
WITHOUT_CLASSIFICATION	case 4 erase it
WITHOUT_CLASSIFICATION	do not check if the parameters match.
WITHOUT_CLASSIFICATION	case 1
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlcomboboxmodel2 buildmodellist
WITHOUT_CLASSIFICATION	no text. we may remove the literal.
WITHOUT_CLASSIFICATION	no non white chars in text? remove literal!
WITHOUT_CLASSIFICATION	heuristic algorithm do not show stereotypes if there is no name.
WITHOUT_CLASSIFICATION	see javax.swing.jcomponent setvisible boolean
WITHOUT_CLASSIFICATION	strip any trailing semi colons
WITHOUT_CLASSIFICATION	construct bases string comma separated
WITHOUT_CLASSIFICATION	see javax.swing.tree.treemodel getchild java.lang.object int
WITHOUT_CLASSIFICATION	great! the class already existed just use it.
WITHOUT_CLASSIFICATION	if no base was typed then only set the name
WITHOUT_CLASSIFICATION	only set the name if the base was found
WITHOUT_CLASSIFICATION	get the associationrole name
WITHOUT_CLASSIFICATION	only instantiate when we need it.
WITHOUT_CLASSIFICATION	if the base is already set to this assoc then do not set it again. this check is needed otherwise the setbase below gives an exception.
WITHOUT_CLASSIFICATION	2002 07 31 jaap branderhorst from here made visibility etc. configurable
WITHOUT_CLASSIFICATION	get the base association name
WITHOUT_CLASSIFICATION	see org.argouml.ui.explorer.weakexplorernode subsumes java.lang.object
WITHOUT_CLASSIFICATION	and not association classes
WITHOUT_CLASSIFICATION	end of oclevaluator
WITHOUT_CLASSIFICATION	see org.argouml.kernel.abstractprojectmember gettype
WITHOUT_CLASSIFICATION	look for associations
WITHOUT_CLASSIFICATION	mparameter
WITHOUT_CLASSIFICATION	see org.tigris.gef.graph.graphlistener edgeadded org.tigris.gef.graph.graphevent
WITHOUT_CLASSIFICATION	the ocl toolkit does not like void return types
WITHOUT_CLASSIFICATION	event handlers mouselistener and mousemotionlistener implementation
WITHOUT_CLASSIFICATION	mclassifiers cannot be bag
WITHOUT_CLASSIFICATION	first search for appropriate attributes
WITHOUT_CLASSIFICATION	see org.argouml.ui.explorer.rules.abstractperspectiverule getrulename
WITHOUT_CLASSIFICATION	moperation
WITHOUT_CLASSIFICATION	... and not incompletely imported
WITHOUT_CLASSIFICATION	query checking added 05 21 01 sz9
WITHOUT_CLASSIFICATION	end class oclexpander
WITHOUT_CLASSIFICATION	skip first parameter return type
WITHOUT_CLASSIFICATION	only look at classes...
WITHOUT_CLASSIFICATION	abstract classes are hardly ever singletons
WITHOUT_CLASSIFICATION	if there is an attribute which is not static no problem
WITHOUT_CLASSIFICATION	check for singleton stereotype uninitialised instance variables and outgoing associations as per javadoc above.
WITHOUT_CLASSIFICATION	found no such attribute
WITHOUT_CLASSIFICATION	we only look at singletons
WITHOUT_CLASSIFICATION	end class crsingletonviolatedonlyprivateconstructors
WITHOUT_CLASSIFICATION	note for historical reasons true hide so we need to invert the sense of this
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlcomboboxmodel2 getselectedmodelelement
WITHOUT_CLASSIFICATION	end class cremptypackage
WITHOUT_CLASSIFICATION	expressions are datatypes not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	at this stage during loading the diagrams are not created yet so we have to store this name for later use.
WITHOUT_CLASSIFICATION	pw.close
WITHOUT_CLASSIFICATION	project.setfile file
WITHOUT_CLASSIFICATION	for andromda profiles
WITHOUT_CLASSIFICATION	give the parser a map of model elements keyed by their uuid. this is used to allocate figs to their owner using the href attribute in pgml.
WITHOUT_CLASSIFICATION	create it here opaqueexpression which is the first choice note that if we edit the initial value in the diagram double clic it was replaced by an opaqueexpression
WITHOUT_CLASSIFICATION	if we get a 2nd error just ignore it
WITHOUT_CLASSIFICATION	see org.argouml.kernel.abstractprojectmember getzipfileextension
WITHOUT_CLASSIFICATION	should never happen something is really wrong
WITHOUT_CLASSIFICATION	main parsing methods
WITHOUT_CLASSIFICATION	see java.io.inputstream close
WITHOUT_CLASSIFICATION	see java.io.inputstream read
WITHOUT_CLASSIFICATION	boolean upgraderequired !checkversion fileversion releaseversion
WITHOUT_CLASSIFICATION	upgrade is in the way for uml2 projects so we turn it off in that case
WITHOUT_CLASSIFICATION	load .argo project descriptor
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.todoitem select
WITHOUT_CLASSIFICATION	load the rest
WITHOUT_CLASSIFICATION	there are 2 possibilities either 1 we follow the traditional notation philosophy and set the tagged value to false or 2 we restore to the pristine situation and delete the taggedvalue whatever the value was . i chose the latter mvw .
WITHOUT_CLASSIFICATION	first read the .argo file from zip
WITHOUT_CLASSIFICATION	keep reading till we hit the argo tag
WITHOUT_CLASSIFICATION	get the version from the tag.
WITHOUT_CLASSIFICATION	skip 1 lines
WITHOUT_CLASSIFICATION	loop round loading the diagrams
WITHOUT_CLASSIFICATION	private eventlistenerlist listenerlist new eventlistenerlist
WITHOUT_CLASSIFICATION	keep reading till we get the left bracket of an opening tag
WITHOUT_CLASSIFICATION	compare each following character to see that it matches the tag we want
WITHOUT_CLASSIFICATION	we also want to match with the right bracket of the tag or some other terminator
WITHOUT_CLASSIFICATION	read the name of the child tag and then reset read position back to that child tag.
WITHOUT_CLASSIFICATION	skip any whitespace till we should be on an equals sign.
WITHOUT_CLASSIFICATION	skip any whitespace till we should be on a quote symbol.
WITHOUT_CLASSIFICATION	see org.argouml.uml.cognitive.critics.wizmename doaction int
WITHOUT_CLASSIFICATION	no other uses of string in pgmlhandler
WITHOUT_CLASSIFICATION	handle other uses of private contents
WITHOUT_CLASSIFICATION	if any of the values are null ignore the element.
WITHOUT_CLASSIFICATION	class to display graphics for a uml objectflowstate in a diagram. p the fig of this modelelement may either represent the following umlelements p 1 an objectflowstate with a classifier as type or p 2 an objectflowstate with a classifierinstate as type. p in both cases 1 and 2 the fig shows the underlined name of the classifier and in the latter case 2 it shows also the names of the states of the classifierinstate. p in the examples in the uml standard this is written like pre purchaseorder approved pre i.e. in 2 lines. the first line is underlined to indicate that it is an instance object . p the fact that the first line is underlined and the 2nd not is the reason to implement them in 2 separate figs. p todo allow stereotypes to be shown. author mvw
WITHOUT_CLASSIFICATION	for a match to be found it has to have the same owner and the same long class name.
WITHOUT_CLASSIFICATION	create a new diagram wide settings block which is backed by the project wide defaults that we were passed
WITHOUT_CLASSIFICATION	ignore non private elements within fignode groups
WITHOUT_CLASSIFICATION	discard class name x y w h
WITHOUT_CLASSIFICATION	the owner should always have already been set in the constructor
WITHOUT_CLASSIFICATION	happens when is comes from a zip file
WITHOUT_CLASSIFICATION	continue with null stream readdiagram ... will take care of it
WITHOUT_CLASSIFICATION	todo localize these
WITHOUT_CLASSIFICATION	this would be solution 1 model.getextensionmechanismshelper .setdatavalues taggedvalue new string false
WITHOUT_CLASSIFICATION	if there is no dot then this must be a top level fig and can be assumed to be a fignode.
WITHOUT_CLASSIFICATION	fignodemodelelements should match here
WITHOUT_CLASSIFICATION	figedgemodelelements should match here they have no bounds
WITHOUT_CLASSIFICATION	model is not used in current implementation
WITHOUT_CLASSIFICATION	try catch only the jarfile instantiation so we do not accidentally mask anything in argojarclassloader or processjarfile.
WITHOUT_CLASSIFICATION	fall back to gef s handling if we could not find an appropriate constructor
WITHOUT_CLASSIFICATION	mywriter
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.critics.critic todoitem object designer
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.critics.critic predicate java.lang.object org.argouml.cognitive.designer
WITHOUT_CLASSIFICATION	write out header section
WITHOUT_CLASSIFICATION	note we assume members are ordered correctly already
WITHOUT_CLASSIFICATION	let us initialize the progressmgr
WITHOUT_CLASSIFICATION	run through any stylesheet upgrades
WITHOUT_CLASSIFICATION	see org.argouml.uml.cognitive.critics.wizmename makepanel int
WITHOUT_CLASSIFICATION	do not use systemid here or it will get opened in preference to inputstream.
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.abstractactionaddmodelelement getdialogtitle
WITHOUT_CLASSIFICATION	uml 2.x files could also contain a profile model. try again with uml profile as main tag.
WITHOUT_CLASSIFICATION	log.log level.fine finding children for o.getclass
WITHOUT_CLASSIFICATION	let us update the progress
WITHOUT_CLASSIFICATION	if we are trying to load a file from a future version complain and refuse.
WITHOUT_CLASSIFICATION	see org.argouml.uml.cognitive.critics.umlwizard getnumsteps
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.abstractactionaddmodelelement getselected
WITHOUT_CLASSIFICATION	to be really sure let us add the operation that is linked to the action in the model too if it is not listed yet. we need this incase an operation is moved out of the package or maybe with imported xmi...
WITHOUT_CLASSIFICATION	no more we can do here on failure
WITHOUT_CLASSIFICATION	buffer containing characters which have been decoded from the bytes in inbb.
WITHOUT_CLASSIFICATION	regex pattern for xml declaration and optionally doctype backslashes are doubled up one for java one for regex
WITHOUT_CLASSIFICATION	convert from bytes back to characters
WITHOUT_CLASSIFICATION	rewind our character buffer
WITHOUT_CLASSIFICATION	remove anything that matches our pattern
WITHOUT_CLASSIFICATION	see org.argouml.ui.explorer.treemodelumleventlistener modelelementadded java.lang.object
WITHOUT_CLASSIFICATION	remove null characters at the end
WITHOUT_CLASSIFICATION	reencode the remaining characters as bytes again
WITHOUT_CLASSIFICATION	and write them to our output stream
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlcomboboxmodel2 isvalidelement object
WITHOUT_CLASSIFICATION	skip the ?xml... first line
WITHOUT_CLASSIFICATION	this is expected to be safe do not add a try block here
WITHOUT_CLASSIFICATION	cat.debug added todoitem headline
WITHOUT_CLASSIFICATION	see org.argouml.ui.explorer.perspectivemanagerlistener addperspective java.lang.object
WITHOUT_CLASSIFICATION	see org.xml.sax.contenthandler startelement java.lang.string java.lang.string java.lang.string org.xml.sax.attributes
WITHOUT_CLASSIFICATION	see org.xml.sax.contenthandler endelement java.lang.string java.lang.string java.lang.string
WITHOUT_CLASSIFICATION	see org.xml.sax.contenthandler characters char int int
WITHOUT_CLASSIFICATION	test creating modelelements from a given notation and then re generate the notation string again and check if they are equal. some of these tests are not very usefulll since they may fail on white space differences. todo white space should best be ignored.
WITHOUT_CLASSIFICATION	these strings match the xml element names in the argo.tee exactly.
WITHOUT_CLASSIFICATION	the following is deprecated but can never be removed to preserve backward compatibility with old project files
WITHOUT_CLASSIFICATION	protected methods
WITHOUT_CLASSIFICATION	empty constructor
WITHOUT_CLASSIFICATION	abstract methods
WITHOUT_CLASSIFICATION	non abstract methods
WITHOUT_CLASSIFICATION	e.g org.argouml.uml.generator.ui.classgenerationdialog poseidon.jar
WITHOUT_CLASSIFICATION	end class saxparserbase
WITHOUT_CLASSIFICATION	stop ui interception
WITHOUT_CLASSIFICATION	see org.tigris.gef.graph.graphmodel getports java.lang.object
WITHOUT_CLASSIFICATION	retain the previous project file even when the save operation crashes in the middle. also create a backup file after saving.
WITHOUT_CLASSIFICATION	jaap branderhorst 2002 23 09 added next lines to link parameters and operations to the figs that represent them
WITHOUT_CLASSIFICATION	possibly use the following instead memberfilepersister persister new diagrammemberfilepersister
WITHOUT_CLASSIFICATION	class methods
WITHOUT_CLASSIFICATION	end class xmltokentablebase
WITHOUT_CLASSIFICATION	these are the file formats i know about
WITHOUT_CLASSIFICATION	make sure this setting exists in the configuration file to facilitate changing
WITHOUT_CLASSIFICATION	see javax.swing.event.menulistener menucanceled javax.swing.event.menuevent
WITHOUT_CLASSIFICATION	is row at top of screen?
WITHOUT_CLASSIFICATION	see javax.swing.filechooser.filefilter getdescription
WITHOUT_CLASSIFICATION	if the current property occurs a second time in the given list of properties then skip it
WITHOUT_CLASSIFICATION	filefilter api
WITHOUT_CLASSIFICATION	see org.tigris.gef.graph.graphmodel getinedges java.lang.object
WITHOUT_CLASSIFICATION	this check for files without extension...
WITHOUT_CLASSIFICATION	end class xmlelement
WITHOUT_CLASSIFICATION	for andromda
WITHOUT_CLASSIFICATION	get the contents of the directory
WITHOUT_CLASSIFICATION	thin bar to show current used
WITHOUT_CLASSIFICATION	if this file is a directory
WITHOUT_CLASSIFICATION	make sure the contents match what we expect
WITHOUT_CLASSIFICATION	load profile name
WITHOUT_CLASSIFICATION	changing the sequence only
WITHOUT_CLASSIFICATION	yes scroll up one row
WITHOUT_CLASSIFICATION	get a list of uml metaclass names from the xmi document. p though some of the dom methods such as getattributes may return null values under other conditions in the context of this test and assuming a valid xmi file none should occur. p hence there is no special checking for those abnormal cases allowing the test to fail simply with a nullpointerexception with this comment indicating that either the input data is incorrect or the test needs to be improved.
WITHOUT_CLASSIFICATION	testing works ok.
WITHOUT_CLASSIFICATION	if there is only one package in the model we should suppose it is the profile model if there is more than one we take the ones marked as profile
WITHOUT_CLASSIFICATION	now we have to see if any state in any statemachine of classifier is named name . if so then we only have to link the state to c.
WITHOUT_CLASSIFICATION	load profile dependencies
WITHOUT_CLASSIFICATION	set up the property panels for critics
WITHOUT_CLASSIFICATION	we have our own uml2 profile but it is not used. instead by the following line the build in eclipse uml2 standard profile and primitive types implementation are used.
WITHOUT_CLASSIFICATION	missing wfrs
WITHOUT_CLASSIFICATION	association class 4.5.3.2 1
WITHOUT_CLASSIFICATION	testing does not fire.
WITHOUT_CLASSIFICATION	4.5.3.2 2
WITHOUT_CLASSIFICATION	behavioral feature 4.5.3.5 2
WITHOUT_CLASSIFICATION	todo partly overlaps croppendvsattr.
WITHOUT_CLASSIFICATION	see org.argouml.uml.cognitive.critics.cruml getcriticizedmetatypes
WITHOUT_CLASSIFICATION	tested with fabricated xmi ok.
WITHOUT_CLASSIFICATION	4.5.3.20 4
WITHOUT_CLASSIFICATION	see tudresden.ocl.parser.analysis.depthfirstadapter casealogicalexpressiontail tudresden.ocl.parser.node.alogicalexpressiontail
WITHOUT_CLASSIFICATION	usecase 4.11.3.5 2
WITHOUT_CLASSIFICATION	classifier 4.5.3.8 5
WITHOUT_CLASSIFICATION	generalizableelement 4.5.3.20 1
WITHOUT_CLASSIFICATION	datatype 4.5.3.12 1
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.state.ui.figstate getinitialheight
WITHOUT_CLASSIFICATION	actor 4.11.3.1 1
WITHOUT_CLASSIFICATION	namespace 4.5.3.26 2
WITHOUT_CLASSIFICATION	usecase 4.11.3.5 1
WITHOUT_CLASSIFICATION	see org.argouml.uml.cognitive.critics.abstractcrunconventionalname computesuggestion java.lang.string
WITHOUT_CLASSIFICATION	actor 4.11.3.1 2
WITHOUT_CLASSIFICATION	tested ok except in some cases depending on the sequence of the eps. probably the implementation of forall x y ... does not cover all combinations.
WITHOUT_CLASSIFICATION	usecase 4.11.3.5 4
WITHOUT_CLASSIFICATION	usecase 4.11.3.5 3
WITHOUT_CLASSIFICATION	if there are more than one suitable operation then we pick the first one.
WITHOUT_CLASSIFICATION	actionstate 4.13.3.2 3 issue 715
WITHOUT_CLASSIFICATION	no default type for uml2
WITHOUT_CLASSIFICATION	the uml profile is always present and default
WITHOUT_CLASSIFICATION	register the built in profiles
WITHOUT_CLASSIFICATION	if an exception is raised file is unusable
WITHOUT_CLASSIFICATION	this profile could have not been loaded when the default profile configuration was loaded at first so we need to do it again
WITHOUT_CLASSIFICATION	nothing to delete if we could not get the packages
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlplaintextdocument getproperty
WITHOUT_CLASSIFICATION	if we found an old style name update it to the new package name
WITHOUT_CLASSIFICATION	clean up our model and the extent that we read profile in to
WITHOUT_CLASSIFICATION	make sure the names did not change again
WITHOUT_CLASSIFICATION	if element is an associationend use the namespace of containing association
WITHOUT_CLASSIFICATION	if one side is null compare with the equality operator
WITHOUT_CLASSIFICATION	xxx hypotheses for afeaturecall fwd op val head
WITHOUT_CLASSIFICATION	xxx hypothesis no time expression inv
WITHOUT_CLASSIFICATION	see tudresden.ocl.parser.analysis.depthfirstadapter caseaconstraint tudresden.ocl.parser.node.aconstraint
WITHOUT_CLASSIFICATION	see tudresden.ocl.parser.analysis.depthfirstadapter caseaclassifiercontext tudresden.ocl.parser.node.aclassifiercontext
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlcheckbox2 buildmodel
WITHOUT_CLASSIFICATION	these operations are ok for lists too
WITHOUT_CLASSIFICATION	log.log level.fine ocl feature call subject type feature parameters
WITHOUT_CLASSIFICATION	xxx this should be done in collectionsmodelinterpreter but it cannot trigger another invokefeature...
WITHOUT_CLASSIFICATION	logger. private static final logger log logger.getlogger defaultoclevaluator.class.getname
WITHOUT_CLASSIFICATION	log.log level.fine ocl ocl
WITHOUT_CLASSIFICATION	although operation and signal are peers in the uml type hierarchy they share the attributes isroot isleaf isabstract and specification. concurrency is not shared and is specific to operation.
WITHOUT_CLASSIFICATION	if test is ok this element should not be in the result set
WITHOUT_CLASSIFICATION	these operations are ok for bags too
WITHOUT_CLASSIFICATION	4.5.2.1 abstraction
WITHOUT_CLASSIFICATION	4.5.2.3 association
WITHOUT_CLASSIFICATION	additional operation 4.5.3.1 1
WITHOUT_CLASSIFICATION	4.5.2.5 associationend
WITHOUT_CLASSIFICATION	additional operation 4.5.3.3 1
WITHOUT_CLASSIFICATION	4.5.2.6 attribute
WITHOUT_CLASSIFICATION	4.5.2.8 binding
WITHOUT_CLASSIFICATION	4.5.2.9 class
WITHOUT_CLASSIFICATION	4.5.2.10 classifier
WITHOUT_CLASSIFICATION	todo specifiedend??
WITHOUT_CLASSIFICATION	4.5.2.11 comment
WITHOUT_CLASSIFICATION	the show types defaults to true to stay compatible with older argouml versions that did not have this setting
WITHOUT_CLASSIFICATION	4.5.2.12 component
WITHOUT_CLASSIFICATION	additional operation in 4.5.3.9
WITHOUT_CLASSIFICATION	no scroll down one row
WITHOUT_CLASSIFICATION	4.5.2.18 elementownership
WITHOUT_CLASSIFICATION	4.5.2.19 enumeration
WITHOUT_CLASSIFICATION	4.5.2.20 enumerationliteral
WITHOUT_CLASSIFICATION	4.5.2.21 feature
WITHOUT_CLASSIFICATION	end class crtoomanytransitions
WITHOUT_CLASSIFICATION	additional operation in 4.5.3.20
WITHOUT_CLASSIFICATION	4.5.2.23 generalizable element
WITHOUT_CLASSIFICATION	4.5.2.26 method
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.critics.critic getwizardclass org.argouml.cognitive.todoitem
WITHOUT_CLASSIFICATION	avoiding null names
WITHOUT_CLASSIFICATION	as extended by 4.6.2.2
WITHOUT_CLASSIFICATION	additional operations in 4.5.3.25
WITHOUT_CLASSIFICATION	4.5.2.29 node
WITHOUT_CLASSIFICATION	4.5.2.30 operation
WITHOUT_CLASSIFICATION	the method
WITHOUT_CLASSIFICATION	4.5.2.31 parameter
WITHOUT_CLASSIFICATION	4.5.2.35 programminglanguagedatatype
WITHOUT_CLASSIFICATION	set the icon
WITHOUT_CLASSIFICATION	see java.lang.object equals java.lang.object
WITHOUT_CLASSIFICATION	now we are sure dm is a state.
WITHOUT_CLASSIFICATION	if location is null here the position of the new fignode is set after in org.tigris.gef.base.modeplace.mousepressed mouseevent e
WITHOUT_CLASSIFICATION	generates a string representation for the provided attribute. the string representation will be of the form visibility name multiplicity type expression initial value property string depending on settings in notation visibility multiplicity type expression initial value and properties are shown not shown.
WITHOUT_CLASSIFICATION	4.5.2.38 templateargument
WITHOUT_CLASSIFICATION	4.5.2.39 templateparameter
WITHOUT_CLASSIFICATION	end class crtoomanyoper
WITHOUT_CLASSIFICATION	4.11.3.5 usecase
WITHOUT_CLASSIFICATION	4.5.3.2 associationclass
WITHOUT_CLASSIFICATION	the operation allconnections results in the set of all associationends of the associationclass including all connections defined by its parent transitive closure .
WITHOUT_CLASSIFICATION	if curhandle.index is 0 or 2 the adjacent region is the previous region but if it is 5 or 7 the adjacent region is the next region. curhandle.index show which corner of the bound we are dragging.
WITHOUT_CLASSIFICATION	4.6.2.3 stereotype
WITHOUT_CLASSIFICATION	stereotypeconstraint ?
WITHOUT_CLASSIFICATION	4.6.2.4 tagdefinition
WITHOUT_CLASSIFICATION	4.6.2.5 taggedvalue
WITHOUT_CLASSIFICATION	see org.argouml.kernel.projectmember repair
WITHOUT_CLASSIFICATION	add adapters that do nothing for keyboard and mouse actions
WITHOUT_CLASSIFICATION	discard the event if its source is not from the correct type
WITHOUT_CLASSIFICATION	guard against error conditions if climb search was not successful
WITHOUT_CLASSIFICATION	sets the mouse cursor to hourglass mode
WITHOUT_CLASSIFICATION	start receiving all events and consume them if necessary
WITHOUT_CLASSIFICATION	activate the glass pane capabilities
WITHOUT_CLASSIFICATION	stop receiving all events
WITHOUT_CLASSIFICATION	parameterlist is guaranteed to contain at least
WITHOUT_CLASSIFICATION	deactivate the glass pane capabilities
WITHOUT_CLASSIFICATION	sets the mouse cursor back to the regular pointer
WITHOUT_CLASSIFICATION	no initialization required
WITHOUT_CLASSIFICATION	end class spacerpanel
WITHOUT_CLASSIFICATION	if dm is the top state of the statemachine then it is not supposed to have outgoing transitions.
WITHOUT_CLASSIFICATION	see java.awt.datatransfer.transferable gettransferdata java.awt.datatransfer.dataflavor
WITHOUT_CLASSIFICATION	see java.awt.datatransfer.transferable gettransferdataflavors
WITHOUT_CLASSIFICATION	see java.awt.datatransfer.transferable isdataflavorsupported java.awt.datatransfer.dataflavor
WITHOUT_CLASSIFICATION	end class clclassname
WITHOUT_CLASSIFICATION	see org.argouml.uml.cognitive.critics.umlwizard setsuggestion java.lang.string
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.ui.wizard getnumsteps
WITHOUT_CLASSIFICATION	see org.argouml.ui.targetmanager.targettablemodelview gettargettablemodel
WITHOUT_CLASSIFICATION	climb the component hierarchy until a rootpanecontainer is found or until the very top
WITHOUT_CLASSIFICATION	end class splashpanel
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.ui.wizard cangonext
WITHOUT_CLASSIFICATION	keep track of the visible window associated w the component useful during event filtering
WITHOUT_CLASSIFICATION	updates stereotype setting adds all children per treemodel build on demand design. see javax.swing.event.treewillexpandlistener treewillexpand javax.swing .event.treeexpansionevent
WITHOUT_CLASSIFICATION	if drop out we are ok
WITHOUT_CLASSIFICATION	if a toolbar was requested create an empty one.
WITHOUT_CLASSIFICATION	make sure we got what we started with
WITHOUT_CLASSIFICATION	java se 6 has a native gif writer but it is not in java 5. one is available in the jai imageio library but we do not currently bundle that and at 6 mb it seems like a heavyweight solution but i do not have time to produce a stripped down version right now tfm https jai imageio.dev.java.net
WITHOUT_CLASSIFICATION	end class tabtext
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umluserinterfacecontainer formatnamespace java.lang.object
WITHOUT_CLASSIFICATION	if a recursive call from setvisible just return
WITHOUT_CLASSIFICATION	windowopen state will be changed when window is activated
WITHOUT_CLASSIFICATION	create an instance of org.w3c.dom.document
WITHOUT_CLASSIFICATION	we have to tell the settings tab in which project the settings reside
WITHOUT_CLASSIFICATION	see java.util.list indexof java.lang.object
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.ui.wizard doaction int
WITHOUT_CLASSIFICATION	use case
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlmodelelementlistmodel2 isvalidelement object
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.ui.wizard makepanel int
WITHOUT_CLASSIFICATION	defer work until fetched visible
WITHOUT_CLASSIFICATION	actor
WITHOUT_CLASSIFICATION	rule management
WITHOUT_CLASSIFICATION	slope of the line we are finding the normal to is slope and the normal is the negative reciprocal slope is p1.y p2.y p1.x p2.x so recip is p1.x p2.x p1.y p2.y
WITHOUT_CLASSIFICATION	all rules
WITHOUT_CLASSIFICATION	todo factor out param rule the rule to be added
WITHOUT_CLASSIFICATION	see javax.swing.event.treeexpansionlistener treecollapsed javax.swing.event.treeexpansionevent
WITHOUT_CLASSIFICATION	put the current pane in a scroll pane.
WITHOUT_CLASSIFICATION	end class stylepanelfigtext
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umluserinterfacecontainer getprofile
WITHOUT_CLASSIFICATION	note these must stay in this order to match rendering styles
WITHOUT_CLASSIFICATION	we are not able to resize neither the top bound from the first region nor the bottom bound from the last region.
WITHOUT_CLASSIFICATION	the boundary box as held in the target fig and as listed in the boundary box style field null if we do not have anything valid
WITHOUT_CLASSIFICATION	change the fill colour
WITHOUT_CLASSIFICATION	change the line colour
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.state.ui.figstate getinitialy
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.poster stillvalid org.argouml.cognitive.todoitem org.argouml.cognitive.designer
WITHOUT_CLASSIFICATION	parse the boundary box text. null is returned if it is empty or invalid which causes no change. otherwise we tell gef we are making a change make the change and tell gef we have finished.
WITHOUT_CLASSIFICATION	get the text in the field and do not do anything if the field is empty.
WITHOUT_CLASSIFICATION	how to handle empty target lists? probably the tabprops should only show an empty pane in that case
WITHOUT_CLASSIFICATION	parse the string as if possible
WITHOUT_CLASSIFICATION	empty implementation we only care about keytyped
WITHOUT_CLASSIFICATION	ignored will never be called
WITHOUT_CLASSIFICATION	add preloading progress bar?
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlexpressionmodel2 getexpression
WITHOUT_CLASSIFICATION	jasonsthemes
WITHOUT_CLASSIFICATION	todo the src visibility tag does not appear to be created anywhere by argouml currently
WITHOUT_CLASSIFICATION	todo let us pass in project as a constructor argument
WITHOUT_CLASSIFICATION	listen to name changes in the path useful for e.g. package
WITHOUT_CLASSIFICATION	make up a default
WITHOUT_CLASSIFICATION	lafclass null
WITHOUT_CLASSIFICATION	set to the default laf
WITHOUT_CLASSIFICATION	top left bottom right
WITHOUT_CLASSIFICATION	set a custom laf
WITHOUT_CLASSIFICATION	see javax.swing.jtree firetreecollapsed javax.swing.tree.treepath
WITHOUT_CLASSIFICATION	see javax.swing.jtree setmodel javax.swing.tree.treemodel
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.critics.critic todoitem java.lang.object org.argouml.cognitive.designer
WITHOUT_CLASSIFICATION	it looks better if the height increases too
WITHOUT_CLASSIFICATION	the model is changed job done
WITHOUT_CLASSIFICATION	todo 10 and 120 were found by trial and error. calculate them.
WITHOUT_CLASSIFICATION	pack
WITHOUT_CLASSIFICATION	see org.argouml.uml.cognitive.critics.cruml predicate2 java.lang.object org.argouml.cognitive.designer
WITHOUT_CLASSIFICATION	not localized
WITHOUT_CLASSIFICATION	alphabetic order!
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.critics.critic initwizard org.argouml.cognitive.ui.wizard
WITHOUT_CLASSIFICATION	end class aboutbox
WITHOUT_CLASSIFICATION	these are the positions of child figs inside this fig they must be added in the constructor in this order. for now the name must not be last as this would force zero width lines until gef is fixed
WITHOUT_CLASSIFICATION	saves the project
WITHOUT_CLASSIFICATION	return true if the given object is a valid node in this graph. see org.tigris.gef.graph.mutablegraphmodel canaddnode java.lang.object
WITHOUT_CLASSIFICATION	mvw we should use default font sizes as much as possible. btw this impacts only the width and reduces readibility
WITHOUT_CLASSIFICATION	see org.argouml.uml.cognitive.critics.cruml getcriticizeddesignmaterials
WITHOUT_CLASSIFICATION	setfont lookandfeelmgr.getinstance .getsmallfont
WITHOUT_CLASSIFICATION	the stereodim has height 2 even if it is empty hence the 2 below
WITHOUT_CLASSIFICATION	this enables tooltips for tree this one will not be shown
WITHOUT_CLASSIFICATION	for some reason this alleged directory is a single file this could be that there is some confusion or just the normal that a single file was selected and is supposed to be imported.
WITHOUT_CLASSIFICATION	methods that override jtree methods
WITHOUT_CLASSIFICATION	with a name...
WITHOUT_CLASSIFICATION	look for stereotype
WITHOUT_CLASSIFICATION	use default formatting for any other type of uml element
WITHOUT_CLASSIFICATION	the event source is the stub state s referenced state or one of the referenced state s path.
WITHOUT_CLASSIFICATION	other methods
WITHOUT_CLASSIFICATION	see org.argouml.ui.clarifier hit int int
WITHOUT_CLASSIFICATION	labels at the left ...
WITHOUT_CLASSIFICATION	and when the class changes name
WITHOUT_CLASSIFICATION	... and fields at the right.
WITHOUT_CLASSIFICATION	the user s full name
WITHOUT_CLASSIFICATION	see org.argouml.ui.clarifier settodoitem org.argouml.cognitive.todoitem
WITHOUT_CLASSIFICATION	get the ends from the association we know there are two and the types associated with them.
WITHOUT_CLASSIFICATION	the user s email
WITHOUT_CLASSIFICATION	the project description
WITHOUT_CLASSIFICATION	this non editable field shows the version of the argouml that last saved this project
WITHOUT_CLASSIFICATION	there is no default description.
WITHOUT_CLASSIFICATION	see org.argouml.ui.explorer.rules.abstractperspectiverule getchildren java.lang.object
WITHOUT_CLASSIFICATION	defer all work until we are actually needed
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.critic getcriticizeddesignmaterials
WITHOUT_CLASSIFICATION	class accessors
WITHOUT_CLASSIFICATION	todo the following can be used when we drop java 5 support or when an imageio gif writer plugin is bundled cmd new savegifaction2 translator.localize action.save gif
WITHOUT_CLASSIFICATION	leave logging commented out by default for efficiency log.debug determine rendering for value log.debug show icon showicon
WITHOUT_CLASSIFICATION	see org.tigris.gef.base.cmd undoit
WITHOUT_CLASSIFICATION	actionlistener implementation
WITHOUT_CLASSIFICATION	see org.argouml.application.api.progressmonitor setmaximumprogress int
WITHOUT_CLASSIFICATION	see javax.swing.plaf.metal.metaltheme getprimary1
WITHOUT_CLASSIFICATION	accumulate a bounding box for all the figs in the group.
WITHOUT_CLASSIFICATION	private jcheckbox jchbbold null
WITHOUT_CLASSIFICATION	see org.tigris.gef.graph.graphlistener noderemoved org.tigris.gef.graph.graphevent
WITHOUT_CLASSIFICATION	private jcheckbox jchbitalic null
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.poster getclarifier
WITHOUT_CLASSIFICATION	initialize font faces list
WITHOUT_CLASSIFICATION	end class actioncreatepseudostate
WITHOUT_CLASSIFICATION	most of this code originates from actionopenproject.
WITHOUT_CLASSIFICATION	initialize font sizes list
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.ui.wizard canfinish
WITHOUT_CLASSIFICATION	try adding the extension from the chosen filter.
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.sourcepathcontroller deletesourcepath java.lang.object
WITHOUT_CLASSIFICATION	keep d even or odd just like the line width
WITHOUT_CLASSIFICATION	see org.tigris.gef.graph.graphlistener graphchanged org.tigris.gef.graph.graphevent
WITHOUT_CLASSIFICATION	see org.argouml.profile.internal.ocl.modelinterpreter getbuiltinsymbol java.lang.string
WITHOUT_CLASSIFICATION	load project at slightly lower priority to keep ui responsive
WITHOUT_CLASSIFICATION	see java.util.collection isempty
WITHOUT_CLASSIFICATION	end class projectbrowser
WITHOUT_CLASSIFICATION	see org.argouml.uml.reveng.importcommon iscreatediagramschecked
WITHOUT_CLASSIFICATION	see java.lang.runnable run
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.state.ui.figstate getinitialwidth
WITHOUT_CLASSIFICATION	these are blue in metal default theme
WITHOUT_CLASSIFICATION	these are gray in metal default theme
WITHOUT_CLASSIFICATION	keylistener implementation
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.state.ui.fighistorystate geth
WITHOUT_CLASSIFICATION	listselectionlistener implementation
WITHOUT_CLASSIFICATION	diagrams are not placed in search results
WITHOUT_CLASSIFICATION	see org.argouml.ui.explorer.rules.perspectiverule getchildren java.lang.object
WITHOUT_CLASSIFICATION	no related
WITHOUT_CLASSIFICATION	now remove the ones already applied.
WITHOUT_CLASSIFICATION	todo tabs for class state usecase help
WITHOUT_CLASSIFICATION	load of the new project just reuse of the actionopen object
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.state.ui.figstate getinitialx
WITHOUT_CLASSIFICATION	the south panel always has tabs but they are added later elsewhere.
WITHOUT_CLASSIFICATION	remove the element from available list
WITHOUT_CLASSIFICATION	loads the project
WITHOUT_CLASSIFICATION	special case for backward compatibility
WITHOUT_CLASSIFICATION	add the path of the model to the search path so we can read dependent models
WITHOUT_CLASSIFICATION	default tab todo
WITHOUT_CLASSIFICATION	select prop panel if current panel is not appropriate for selected target
WITHOUT_CLASSIFICATION	see org.argouml.persistence.xmifilepersister issaveenabled
WITHOUT_CLASSIFICATION	not visible any more so remove as listener
WITHOUT_CLASSIFICATION	update the previously selected tab
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlexpressionmodel2 newexpression
WITHOUT_CLASSIFICATION	the other tabs need to be updated depending on the selection.
WITHOUT_CLASSIFICATION	if center points are close enough we just adjust the endpoints of the line a little bit. otherwise we add a jog in the middle to deal with the offset. todo epsilon is currently fixed but could probably be computed dynamically as 10 of the width of the narrowest figure or some other value which is visually not noticeable.
WITHOUT_CLASSIFICATION	we could check for base class of the stereotype but the condition normally covers it all.
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlcomboboxmodel buildmodellist
WITHOUT_CLASSIFICATION	todo quick return here for target null? tfm
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.umldiagram getdependentelement
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.sourcepathcontroller getsourcepath java.lang.object
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.umldiagram setnamespace java.lang.object
WITHOUT_CLASSIFICATION	remove duplicates and take care of getowner and remove nulls
WITHOUT_CLASSIFICATION	if there is an outgoing association no problem
WITHOUT_CLASSIFICATION	see org.argouml.persistence.xmltokentablebase setuptokens
WITHOUT_CLASSIFICATION	see org.argouml.persistence.projectfilepersister doload java.io.file
WITHOUT_CLASSIFICATION	listener management
WITHOUT_CLASSIFICATION	since there are no buttons on this panel we have to set the size of the buttonpanel otherwise the title would not be aligned right.
WITHOUT_CLASSIFICATION	tree structure
WITHOUT_CLASSIFICATION	see org.argouml.persistence.abstractfilepersister getextension
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.stereotypecontainer setstereotypevisible boolean
WITHOUT_CLASSIFICATION	create a timer.
WITHOUT_CLASSIFICATION	mount the glasspane on the component window
WITHOUT_CLASSIFICATION	keep track of the glasspane as an instance variable
WITHOUT_CLASSIFICATION	the name. width is the same as the cover height is the default. the text of the name will be centered by default. in the same place as the stereotype since at this stage the stereotype is not displayed. being a classifier role it is underlined
WITHOUT_CLASSIFICATION	end class stylepanel
WITHOUT_CLASSIFICATION	see org.argouml.persistence.memberfilepersister save org.argouml.kernel.projectmember java.io.outputstream
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig setenclosingfig org.tigris.gef.presentation.fig
WITHOUT_CLASSIFICATION	getcontentpane .add menubar borderlayout.north
WITHOUT_CLASSIFICATION	calculate the insets for the jtree not the viewport the tree is in. this makes it a bit messy. see java.awt.dnd.autoscroll getautoscrollinsets
WITHOUT_CLASSIFICATION	allows me to ask do you want to save first?
WITHOUT_CLASSIFICATION	ok we have been told to scroll because the mouse cursor is in our scroll zone. see java.awt.dnd.autoscroll autoscroll java.awt.point
WITHOUT_CLASSIFICATION	add listener for project changes
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getxmiwriter java.lang.object java.io.writer java.lang.string
WITHOUT_CLASSIFICATION	add a listener to focus changes. rationale reset the undo manager to start a new chain.
WITHOUT_CLASSIFICATION	load modules specified by a system property. modules specified by a system property is for running modules from within eclipse and running from java web start.
WITHOUT_CLASSIFICATION	we get many many events why? so let us filter
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getusecaseshelper
WITHOUT_CLASSIFICATION	create the todopane
WITHOUT_CLASSIFICATION	if we delete a figedge or fignode we actually call this method with the owner not the fig itself. however this method is called by actiondeletemodelelements for primitive figs without owner .
WITHOUT_CLASSIFICATION	see javax.swing.jframe getjmenubar
WITHOUT_CLASSIFICATION	see org.argouml.persistence.saxparserbase iselementofinterest string
WITHOUT_CLASSIFICATION	see org.argouml.persistence.abstractfilepersister issaveenabled
WITHOUT_CLASSIFICATION	toolbar boundary is the area between the menu and the status bar. it contains the workarea at centre and the toolbar position north south east or west.
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.pathcontainer setpathvisible boolean
WITHOUT_CLASSIFICATION	add target listeners for details panes
WITHOUT_CLASSIFICATION	see java.awt.dnd.dragsourcelistener dragenter java.awt.dnd.dragsourcedragevent
WITHOUT_CLASSIFICATION	convenience methods to return saved width and height values
WITHOUT_CLASSIFICATION	in theory there can be multiple details pane work in progress . it must first be determined which details page contains the properties tab. bob tarling 7 dec 2002
WITHOUT_CLASSIFICATION	override setbounds to keep shapes looking right. see org.tigris.gef.presentation.fig setbounds int int int int
WITHOUT_CLASSIFICATION	end class windowcloser
WITHOUT_CLASSIFICATION	the project changed
WITHOUT_CLASSIFICATION	north south west east south west
WITHOUT_CLASSIFICATION	designer.thedesigner.gettodolist .removeallelements
WITHOUT_CLASSIFICATION	see org.argouml.persistence.memberfilepersister getmaintag
WITHOUT_CLASSIFICATION	update all panes
WITHOUT_CLASSIFICATION	see org.argouml.ui.targetmanager.targetlistener targetremoved targetevent
WITHOUT_CLASSIFICATION	this method is invoked from several places so we have to check whether if the project uri is set or not
WITHOUT_CLASSIFICATION	does the file really exists?
WITHOUT_CLASSIFICATION	project file does not exist. let us pop up a message dialog..
WITHOUT_CLASSIFICATION	see org.xml.sax.entityresolver resolveentity java.lang.string java.lang.string
WITHOUT_CLASSIFICATION	..and let us ask the user whether he wants to save the actual project into a new file or not
WITHOUT_CLASSIFICATION	eclipse uml2 implementation classes end with impl non nls 1
WITHOUT_CLASSIFICATION	save action has been cancelled
WITHOUT_CLASSIFICATION	see org.argouml.application.events.argonotationeventlistener notationadded org.argouml.application.events.argonotationevent
WITHOUT_CLASSIFICATION	prompt the user for the new name.
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umluserinterfacecomponent targetreasserted
WITHOUT_CLASSIFICATION	let us call the real save method
WITHOUT_CLASSIFICATION	repair any errors in the project
WITHOUT_CLASSIFICATION	e.g. for an operation if pce.getsource modelelement event.propertyname parameter if event instanceof addassociationevent get the parameter instance from event.newvalue call model to add listener on parameter on change of name type else if event instanceof removeassociationevent get the parameter instance from event.oldvalue call model to remove listener on parameter on change of name type end if end if
WITHOUT_CLASSIFICATION	notification of menu bar
WITHOUT_CLASSIFICATION	simulate some errors to repair. replace with junits bob
WITHOUT_CLASSIFICATION	change to true to enable testing
WITHOUT_CLASSIFICATION	a fig with a null owner
WITHOUT_CLASSIFICATION	see junit.framework.testcase setup
WITHOUT_CLASSIFICATION	a fig with a null layer
WITHOUT_CLASSIFICATION	a fig with a removed model element
WITHOUT_CLASSIFICATION	let us save this project in the mru list
WITHOUT_CLASSIFICATION	defer initialization until we are visible
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getconcurrencykind
WITHOUT_CLASSIFICATION	see java.awt.dnd.dragsourcelistener dropactionchanged java.awt.dnd.dragsourcedragevent
WITHOUT_CLASSIFICATION	let us save this project as the last used one in the configuration file
WITHOUT_CLASSIFICATION	uri persistencemanager.getinstance .fixuriextension theprojecturi
WITHOUT_CLASSIFICATION	an error that can be corrected by the user so no stack trace but instead an explanation and a hint how to fix
WITHOUT_CLASSIFICATION	see org.argouml.persistence.progresslistener progress org.argouml.persistence.progressevent
WITHOUT_CLASSIFICATION	this is temporary. load project should create a new project with its own undomanager and so there should be no command
WITHOUT_CLASSIFICATION	make sure save action is always reinstated
WITHOUT_CLASSIFICATION	finally apply profile configuration to the model
WITHOUT_CLASSIFICATION	adding project files icon
WITHOUT_CLASSIFICATION	see org.argouml.application.api.progressmonitor updatemaintask java.lang.string
WITHOUT_CLASSIFICATION	filled in later
WITHOUT_CLASSIFICATION	see org.argouml.application.api.progressmonitor iscanceled
WITHOUT_CLASSIFICATION	see org.argouml.uml.reveng.importsettingtypes.uniqueselection setselection int
WITHOUT_CLASSIFICATION	see org.argouml.notation.providers.notationprovider getparsinghelp
WITHOUT_CLASSIFICATION	see org.argouml.application.api.progressmonitor notifynullaction
WITHOUT_CLASSIFICATION	setup similar to the super implementation
WITHOUT_CLASSIFICATION	see javax.swing.tree.treecellrenderer gettreecellrenderercomponent javax.swing.jtree java.lang.object boolean boolean boolean int boolean
WITHOUT_CLASSIFICATION	make this change persistant
WITHOUT_CLASSIFICATION	see targetlistener targetadded targetevent
WITHOUT_CLASSIFICATION	if there is persistant state for this toolbar respect it or add it to persistance data
WITHOUT_CLASSIFICATION	see org.argouml.application.api.progressmonitor close
WITHOUT_CLASSIFICATION	queue to event thread to prevent race during close
WITHOUT_CLASSIFICATION	test an unknown file
WITHOUT_CLASSIFICATION	add toolbar.
WITHOUT_CLASSIFICATION	register popup menu with toolbar.
WITHOUT_CLASSIFICATION	these settings are needed to make the progressmonitor pop up early
WITHOUT_CLASSIFICATION	now we are sure dm is a composite state.
WITHOUT_CLASSIFICATION	treecellrenderer implementation
WITHOUT_CLASSIFICATION	see org.argouml.notation.notationname samenotationas org.argouml.notation.notationname
WITHOUT_CLASSIFICATION	see java.awt.event.windowlistener windowiconified java.awt.event.windowevent
WITHOUT_CLASSIFICATION	add settings from the settings registry.
WITHOUT_CLASSIFICATION	see org.argouml.application.events.argogeneratoreventlistener generatorchanged org.argouml.application.events.argogeneratorevent
WITHOUT_CLASSIFICATION	increase width to accommodate all tabs on one row.
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.todolistlistener todolistchanged org.argouml.cognitive.todolistevent
WITHOUT_CLASSIFICATION	called when the user has pressed save. performs save in all tabs.
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.sourcepathcontroller setsourcepath java.lang.object java.io.file
WITHOUT_CLASSIFICATION	called when the user has pressed cancel. performs cancel in all tabs.
WITHOUT_CLASSIFICATION	see org.argouml.uml.reveng.importsettingtypes.uniqueselection getdefaultselection
WITHOUT_CLASSIFICATION	we only request focus the first time we become visible
WITHOUT_CLASSIFICATION	ignored we only care about open closing
WITHOUT_CLASSIFICATION	see org.argouml.uml.reveng.importsettings getinputsourceencoding
WITHOUT_CLASSIFICATION	handle the same as an explicit cancel
WITHOUT_CLASSIFICATION	see org.argouml.uml.reveng.importcommon getimportlevel
WITHOUT_CLASSIFICATION	todo concatenate? tfm overwrite for now
WITHOUT_CLASSIFICATION	see org.argouml.uml.reveng.settingstypes.booleanselection isselected
WITHOUT_CLASSIFICATION	end class stylepanelfigrrect
WITHOUT_CLASSIFICATION	see org.argouml.application.api.progressmonitor notifymessage java.lang.string java.lang.string java.lang.string
WITHOUT_CLASSIFICATION	let the parent do its refresh.
WITHOUT_CLASSIFICATION	see org.argouml.uml.reveng.importcommon isdiagramlayoutselected
WITHOUT_CLASSIFICATION	let us redraw the box
WITHOUT_CLASSIFICATION	c.gridy 0 c.gridx 4 jlabel threelabel new jlabel asd gb.setconstraints threelabel c mainpanel.add threelabel
WITHOUT_CLASSIFICATION	called when the user selects a tab by clicking or otherwise. see javax.swing.event.changelistener statechanged javax.swing.event.changeevent
WITHOUT_CLASSIFICATION	see org.argouml.uml.reveng.importcommon ischangedonlyselected
WITHOUT_CLASSIFICATION	we do not know what thread events will be delivered on so make sure we run swing methods on the swing thread
WITHOUT_CLASSIFICATION	this instead of the label ??? displaypane.setborder new titledborder translator.localize display
WITHOUT_CLASSIFICATION	eclipse uml2 implementation classes often start with uml non nls 1
WITHOUT_CLASSIFICATION	add in front of the others add the label in front of the pane
WITHOUT_CLASSIFICATION	specifies valid elements for a class to contain
WITHOUT_CLASSIFICATION	and finally adjust the scrollbars to show the fig
WITHOUT_CLASSIFICATION	see javax.swing.event.treewillexpandlistener treewillcollapse javax.swing .event.treeexpansionevent
WITHOUT_CLASSIFICATION	thresholds for bar color changes
WITHOUT_CLASSIFICATION	record the changes in the instance variables of our parent tell gef and trigger the edges to reconsider themselves.
WITHOUT_CLASSIFICATION	making it possible to jump to the modelroots
WITHOUT_CLASSIFICATION	readonly class no generalization no association to self
WITHOUT_CLASSIFICATION	timer action method. periodically update our stats and force a repaint.
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.ui.wizstep settarget java.lang.object
WITHOUT_CLASSIFICATION	virtual memory heap stats
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlmodelelementlistmodel2 buildmodellist
WITHOUT_CLASSIFICATION	thin bar to show current allocated heap size
WITHOUT_CLASSIFICATION	c.gridy 0 c.gridx 1 jlabel offlabel new jlabel off gb.setconstraints offlabel c mainpanel.add offlabel
WITHOUT_CLASSIFICATION	todo assumes public user pref for default visibility? do i have to check the namespace here? toby
WITHOUT_CLASSIFICATION	we recalculate all the activations
WITHOUT_CLASSIFICATION	the introducing label
WITHOUT_CLASSIFICATION	critiquing api
WITHOUT_CLASSIFICATION	how to handle empty target lists? probably the multieditorpane should only show an empty pane in that case
WITHOUT_CLASSIFICATION	todo qualifiers e.g. const todo stereotypes...
WITHOUT_CLASSIFICATION	private jpanel constraintstab new jpanel
WITHOUT_CLASSIFICATION	see javax.swing.event.changelistener statechanged javax.swing.event.changeevent
WITHOUT_CLASSIFICATION	the child is sometimes not found when the tree is being updated
WITHOUT_CLASSIFICATION	private jtabbedpane tabs new jtabbedpane
WITHOUT_CLASSIFICATION	tabs.setminimumsize new dimension 300 250
WITHOUT_CLASSIFICATION	see org.argouml.uml.reveng.importsettings iscreatediagramsselected
WITHOUT_CLASSIFICATION	private jpanel modifiedtab new jpanel
WITHOUT_CLASSIFICATION	the activitygraph.
WITHOUT_CLASSIFICATION	private jpanel tagvalstab new jpanel
WITHOUT_CLASSIFICATION	see javax.swing.tree.treemodel isleaf java.lang.object
WITHOUT_CLASSIFICATION	open space at gridy 2
WITHOUT_CLASSIFICATION	mainpanel.add north borderlayout.north
WITHOUT_CLASSIFICATION	see org.argouml.uml.reveng.importsettingsinternal isdiagramlayoutselected
WITHOUT_CLASSIFICATION	any type
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.behavior.common behavior.actionnewaction createaction
WITHOUT_CLASSIFICATION	see java.util.list listiterator
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getmodelmanagementfactory
WITHOUT_CLASSIFICATION	todo localize
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlplaintextdocument setproperty java.lang.string
WITHOUT_CLASSIFICATION	if this fails then there is a problem... dthompson 29 12 2008 it seems that the returned value is irrelevant here so i assume that the purpose of this call is just to throw an exception in case of a problem.
WITHOUT_CLASSIFICATION	empty implementation we only handle mouseclicked
WITHOUT_CLASSIFICATION	this text is for the developers. it does not need to be localized.
WITHOUT_CLASSIFICATION	these should not really be br instead of p elements but the lines all get run together when pasted into a browser window.
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlradiobuttonpanel buildmodel
WITHOUT_CLASSIFICATION	initconstraintstab tabs.addtab translator.localize tab.constraints constraintstab tabs.setenabledat 3 false
WITHOUT_CLASSIFICATION	inittagvalstab tabs.addtab translator.localize dialog.find.tab.tagged values tagvalstab tabs.setenabledat 2 false
WITHOUT_CLASSIFICATION	secondly we check the previous model structure
WITHOUT_CLASSIFICATION	end class finddialog
WITHOUT_CLASSIFICATION	if we got back null we interpret this as meaning delete the reference to the extension point from the use case otherwise we set the fields of the extension point to the values in newep.
WITHOUT_CLASSIFICATION	name in dname
WITHOUT_CLASSIFICATION	a string of the form location . this will be confused by the string so we pick this out as an instruction to clear both name and location.
WITHOUT_CLASSIFICATION	help tab is 0
WITHOUT_CLASSIFICATION	dialog box to list all critics and allow editing of some of their properties. p todo supported goals critic network.
WITHOUT_CLASSIFICATION	end rungc actionperformed
WITHOUT_CLASSIFICATION	end class predicatemtype
WITHOUT_CLASSIFICATION	follow well formedness rule for a class 2 . determine the owning namespace for the statemachine
WITHOUT_CLASSIFICATION	end updateinfo
WITHOUT_CLASSIFICATION	end class navigatorpane
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.abstractactionaddmodelelement getchoices
WITHOUT_CLASSIFICATION	end copy actionperformed
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.figedgemodelelement updatelisteners java.lang.object java.lang.object
WITHOUT_CLASSIFICATION	end class systeminfodialog
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umlexpressionmodel2 setexpression java.lang.object
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.poster expand java.lang.string org.argouml.cognitive.listset
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.critics.controlmech isrelevant org.argouml.cognitive.critics.critic org.argouml.cognitive.designer
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.poster supports org.argouml.cognitive.decision
WITHOUT_CLASSIFICATION	but exclude elements that enclose others since their algorithms to calculate the minimum size does not take enclosed objects into account
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.poster containsknowledgetype java.lang.string
WITHOUT_CLASSIFICATION	super translator.localize action.size to fit contents
WITHOUT_CLASSIFICATION	see org.argouml.uml.util.namespace.namespace getcommonnamespace org.argouml.uml.util.namespace.namespace
WITHOUT_CLASSIFICATION	unsupported.
WITHOUT_CLASSIFICATION	see org.tigris.gef.base.modecreatefigpoly createnewitem java.awt.event.mouseevent int int
WITHOUT_CLASSIFICATION	only resize elements which the user would also be able to resize
WITHOUT_CLASSIFICATION	see org.argouml.uml.reveng.importsettingsinternal ischangedonlyselected
WITHOUT_CLASSIFICATION	set the name
WITHOUT_CLASSIFICATION	let us load the default shortcut for every action
WITHOUT_CLASSIFICATION	end class actionfind
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.figedgemodelelement getnamebounds
WITHOUT_CLASSIFICATION	generate menu
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.figeditablecompartment getumlcollection
WITHOUT_CLASSIFICATION	it should never go here!
WITHOUT_CLASSIFICATION	view menu
WITHOUT_CLASSIFICATION	file menu
WITHOUT_CLASSIFICATION	see java.util.collection toarray
WITHOUT_CLASSIFICATION	align submenu
WITHOUT_CLASSIFICATION	edit menu
WITHOUT_CLASSIFICATION	see java.io.inputstream read byte int int
WITHOUT_CLASSIFICATION	arrange menu
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.fignodemodelelement updatelisteners java.lang.object java.lang.object
WITHOUT_CLASSIFICATION	help menu
WITHOUT_CLASSIFICATION	this id is used as default id !
WITHOUT_CLASSIFICATION	end class actionaboutargouml
WITHOUT_CLASSIFICATION	in the past 0 milliseconds after january 1 1970 00 00 00 gmt.
WITHOUT_CLASSIFICATION	distribute submenu
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.critics.critic addsupportedgoal org.argouml.cognitive.goal
WITHOUT_CLASSIFICATION	end class actionpagesetup
WITHOUT_CLASSIFICATION	skip the 2 lines ?xml version 1.0 encoding utf 8 ? !doctype todo system todo.dtd
WITHOUT_CLASSIFICATION	trap focus traversal keys also
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.fignodemodelelement getnotationprovidertype
WITHOUT_CLASSIFICATION	let us add the key printing logic
WITHOUT_CLASSIFICATION	both lists have the same length.
WITHOUT_CLASSIFICATION	we have found the matching tag but do we have the correct instance with matching attributes?
WITHOUT_CLASSIFICATION	if we drop out here there was no match and we have no problem
WITHOUT_CLASSIFICATION	if a not default current shortcut was added then we have to save it
WITHOUT_CLASSIFICATION	if the actual is not going to be saved then try to remove it as it could have been cancelled
WITHOUT_CLASSIFICATION	this pair of params where the same. let us check the next pair.
WITHOUT_CLASSIFICATION	no modifiers let us check if the key is valid
WITHOUT_CLASSIFICATION	method 1 collect data and assign later in endelement method . hashtable string string ht new hashtable string string ht.put classname classname ht.put figclassname figclassname ht.put ownerhref ownerhref ht.put angle angle ht.put offset offset pathitemattrs.add ht
WITHOUT_CLASSIFICATION	middle of shortcut
WITHOUT_CLASSIFICATION	only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	add last recently used list before exit menu
WITHOUT_CLASSIFICATION	see tudresden.ocl.parser.analysis.depthfirstadapter outaemptyfeaturecallparameters tudresden.ocl.parser.node.aemptyfeaturecallparameters
WITHOUT_CLASSIFICATION	keystroke f7 keystroke.getkeystroke keyevent.vk f7 0
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.abstracttestactionadddiagram getaction
WITHOUT_CLASSIFICATION	and exit menu entry starting with separator.
WITHOUT_CLASSIFICATION	this used to be deferred but it is only 30 40 msec of work.
WITHOUT_CLASSIFICATION	a newly created associationclass may not have all its parts created by the time we are called
WITHOUT_CLASSIFICATION	now let us set up the selected action container
WITHOUT_CLASSIFICATION	get all the features giving up if there are none . then loop through finding all operations. each time we find one we compare its signature with all previous held in collection operseen and then if it does not match add it to the collection.
WITHOUT_CLASSIFICATION	generate.add actions.generateweb
WITHOUT_CLASSIFICATION	see java.awt.event.windowlistener windowdeactivated java.awt.event.windowevent
WITHOUT_CLASSIFICATION	add the help menu item.
WITHOUT_CLASSIFICATION	see org.argouml.ui.targetmanager.targetlistener targetset targetevent
WITHOUT_CLASSIFICATION	see org.argouml.cognitive.todolistlistener todoitemsremoved org.argouml.cognitive.todolistevent
WITHOUT_CLASSIFICATION	if the pathitemplacement was unknown leave the diagram with the default settings.
WITHOUT_CLASSIFICATION	set the name and icon
WITHOUT_CLASSIFICATION	clean the history
WITHOUT_CLASSIFICATION	create the edit toolbar based on the menu. all menuitems that have an icon are presumed to be based upon an action and these actions are used in the toolbar.
WITHOUT_CLASSIFICATION	sethelpmenu help
WITHOUT_CLASSIFICATION	this code has to go within the startelement block after the strings have been matched.
WITHOUT_CLASSIFICATION	component or action
WITHOUT_CLASSIFICATION	see guisettingstabinterface handlesettingstabcancel
WITHOUT_CLASSIFICATION	set maximum length of menu entry
WITHOUT_CLASSIFICATION	see org.argouml.application.events.argonotationeventlistener notationprovideradded org.argouml.application.events.argonotationevent
WITHOUT_CLASSIFICATION	jmenuitem item filemenu.add new actionreopenproject filename
WITHOUT_CLASSIFICATION	the text is used by the event handler for opening the project
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.umldiagram isrelocationallowed java.lang.object
WITHOUT_CLASSIFICATION	create all nessessary configuration keys for lru
WITHOUT_CLASSIFICATION	holds file menu
WITHOUT_CLASSIFICATION	text is short tooltip is long
WITHOUT_CLASSIFICATION	read existing file names from configuration
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.figedgemodelelement texteditstarted org.tigris.gef.presentation.figtext
WITHOUT_CLASSIFICATION	empty entry stops reading last line!
WITHOUT_CLASSIFICATION	this is the recent count
WITHOUT_CLASSIFICATION	delete all existing entries
WITHOUT_CLASSIFICATION	add new entry as first entry
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.figedgemodelelement getsource
WITHOUT_CLASSIFICATION	add other existing entries but filter the just added one
WITHOUT_CLASSIFICATION	save count
WITHOUT_CLASSIFICATION	and store configuration props
WITHOUT_CLASSIFICATION	see org.argouml.model.umlhelper addlistenerstomodel java.lang.object
WITHOUT_CLASSIFICATION	end class actionexit
WITHOUT_CLASSIFICATION	change things
WITHOUT_CLASSIFICATION	box.setlocationrelativeto jframe
WITHOUT_CLASSIFICATION	end class actionhelp
WITHOUT_CLASSIFICATION	assert that the copy is not modified when the source changes
WITHOUT_CLASSIFICATION	instantiation not allowed
WITHOUT_CLASSIFICATION	see org.argouml.model.modeleventpump addmodeleventlistener java.beans.propertychangelistener java.lang.object java.lang.string
WITHOUT_CLASSIFICATION	end class actionprint
WITHOUT_CLASSIFICATION	let us add the table inside a jscrollpane
WITHOUT_CLASSIFICATION	if save did not raise an exception and name exists move name to name this is the correct backup file
WITHOUT_CLASSIFICATION	see javax.swing.table.tablemodel getcolumnname int
WITHOUT_CLASSIFICATION	see javax.swing.table.tablemodel getrowcount
WITHOUT_CLASSIFICATION	see javax.swing.table.tablemodel getvalueat int int
WITHOUT_CLASSIFICATION	see org.argouml.model.modeleventpump removemodeleventlistener java.beans.propertychangelistener java.lang.object java.lang.string
WITHOUT_CLASSIFICATION	init from config read number write result as new default and prepare keys
WITHOUT_CLASSIFICATION	snooze and verify its been enabled
WITHOUT_CLASSIFICATION	get already existing names from menu actions real file names not action names !
WITHOUT_CLASSIFICATION	see org.argouml.model.modeleventpump addclassmodeleventlistener java.beans.propertychangelistener java.lang.object java.lang.string
WITHOUT_CLASSIFICATION	let us enable the radiobuttons container
WITHOUT_CLASSIFICATION	amount to increment y position by for each node placed. we pack them densely on the assumption that the user is going to split them into at least two swimlanes.
WITHOUT_CLASSIFICATION	updating the radiobuttons container s title
WITHOUT_CLASSIFICATION	let us select the correct radio button
WITHOUT_CLASSIFICATION	see org.argouml.model.modeleventpump removeclassmodeleventlistener java.beans.propertychangelistener java.lang.object java.lang.string
WITHOUT_CLASSIFICATION	no shortcuts none
WITHOUT_CLASSIFICATION	test that the category and description are correct
WITHOUT_CLASSIFICATION	current shortcut default default
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.abstractactioncheckboxmenuitem valueoftarget java.lang.object
WITHOUT_CLASSIFICATION	customized shortcut custom
WITHOUT_CLASSIFICATION	update the values
WITHOUT_CLASSIFICATION	let us reload the shortcuts
WITHOUT_CLASSIFICATION	see org.argouml.model.corehelper clearstereotypes java.lang.object all methods below similarly override methods in corehelper.
WITHOUT_CLASSIFICATION	saving shortcuts
WITHOUT_CLASSIFICATION	if the id does not look like a top level fig then we can assume that this is an id of a figedgeport inside some figedge. so extract the figedgeport from the figedge and return that as the fignode.
WITHOUT_CLASSIFICATION	if a shortcut has been select then we have to check if the actual action is in conflict with other ones
WITHOUT_CLASSIFICATION	see org.argouml.model.modeleventpump startpumpingevents
WITHOUT_CLASSIFICATION	blanking the old action s shortcut.. and now refreshing the table.
WITHOUT_CLASSIFICATION	re selecting the old row without changing the target and without throwing another listselectionevent!
WITHOUT_CLASSIFICATION	give priority to standard documentation tag
WITHOUT_CLASSIFICATION	let us change the target
WITHOUT_CLASSIFICATION	we are looking first to match with 3 different constructor types. we would not expect a fig to have any mix of these. any constructor other than these should be deprecated so we look for these first. fig diagramedgesettings diagramsettings fig object rectangle diagramsettings fig rectangle diagramsettings
WITHOUT_CLASSIFICATION	duplicate shortcut not found let us check for duplicates
WITHOUT_CLASSIFICATION	following the update the priority should be equivalent to decision.unspec
WITHOUT_CLASSIFICATION	there is a duplicate let us recheck if there is a conflict
WITHOUT_CLASSIFICATION	see org.argouml.model.pseudostatekind getdeephistory
WITHOUT_CLASSIFICATION	updating the shortcut field
WITHOUT_CLASSIFICATION	see org.argouml.model.concurrencykind getconcurrent
WITHOUT_CLASSIFICATION	updating the table data
WITHOUT_CLASSIFICATION	see org.argouml.model.aggregationkind getcomposite
WITHOUT_CLASSIFICATION	the shortcut has already been assigned to another action!
WITHOUT_CLASSIFICATION	verify snoozeorder starts off not snoozed
WITHOUT_CLASSIFICATION	if the given object is a keystroke instance then we ca
WITHOUT_CLASSIFICATION	let us update also the actions array
WITHOUT_CLASSIFICATION	see org.argouml.model.changeablekind getchangeable
WITHOUT_CLASSIFICATION	see org.argouml.model.pseudostatekind getchoice
WITHOUT_CLASSIFICATION	see org.argouml.model.directionkind getoutparameter
WITHOUT_CLASSIFICATION	the default nr of rows is 8 but since we have 9 perspectives by default now setting to 9 is nicer.
WITHOUT_CLASSIFICATION	in uml 1.3 the name is the only place to store text. in uml 1.4 there is a body as well but some tools still seem to use name.
WITHOUT_CLASSIFICATION	check if multiple items are selected.
WITHOUT_CLASSIFICATION	1. a noneditable applied profile
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	just no item added in this case
WITHOUT_CLASSIFICATION	designgoalscm checks if the critic isrelevanttogoals of the designer this value is always true for the critic base class so designergoal should always return true in this condition
WITHOUT_CLASSIFICATION	3. the editable unapplied profile
WITHOUT_CLASSIFICATION	end of profile section
WITHOUT_CLASSIFICATION	todo these should get replaced immediately by the creating initialization code but make sure we have got a default just in case.
WITHOUT_CLASSIFICATION	cannot delete last top level model
WITHOUT_CLASSIFICATION	check that the model was initialized with one goal
WITHOUT_CLASSIFICATION	determine if only diagrams are in the target list.
WITHOUT_CLASSIFICATION	see org.argouml.model.concurrencykind getguarded
WITHOUT_CLASSIFICATION	x nodes and x edges
WITHOUT_CLASSIFICATION	extra care to be taken since allposters can be reset while this method is running.
WITHOUT_CLASSIFICATION	test if this element can be contained by the target
WITHOUT_CLASSIFICATION	see org.argouml.model.orderingkind getordered
WITHOUT_CLASSIFICATION	iterate through all possible model elements to determine which are valid to be contained by the selected target
WITHOUT_CLASSIFICATION	end class actionaddexistingrelatednode
WITHOUT_CLASSIFICATION	see org.argouml.ui.targetmanager.targetlistener targetadded targetevent
WITHOUT_CLASSIFICATION	... otherwise we select the item below the mousepointer.
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.actionadddiagram creatediagram object
WITHOUT_CLASSIFICATION	the dialog is modal
WITHOUT_CLASSIFICATION	unimplemented we only care about expanding
WITHOUT_CLASSIFICATION	see java.awt.component getminimumsize
WITHOUT_CLASSIFICATION	end class explorermouselistener
WITHOUT_CLASSIFICATION	fire all of the profile events
WITHOUT_CLASSIFICATION	does nothing.
WITHOUT_CLASSIFICATION	see org.argouml.model.modelimplementation getmodeleventpump
WITHOUT_CLASSIFICATION	need to update the selection state.
WITHOUT_CLASSIFICATION	see javax.swing.tree.treemodel getindexofchild java.lang.object java.lang.object
WITHOUT_CLASSIFICATION	get the elements
WITHOUT_CLASSIFICATION	block added by bobtarling 8 jan 2002 set the checkbox on or off according to the selected value of the action. if no selected value is found then this defaults to true in order to remain compatible with previous versions of this code.
WITHOUT_CLASSIFICATION	scan the visible rows for duplicates of this elem and select them
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.actionadddiagram isvalidnamespace object
WITHOUT_CLASSIFICATION	check which targetmanager method to call
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.pathcontainer ispathvisible
WITHOUT_CLASSIFICATION	we must call the correct method on targetmanager for each added or removed target
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	we cannot remove the targets in one go we have to do it one by one.
WITHOUT_CLASSIFICATION	model null
WITHOUT_CLASSIFICATION	settargets e.getnewtargets
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.behavior.state machines.actionnewevent createevent java.lang.object
WITHOUT_CLASSIFICATION	at the top right bottom left bottom
WITHOUT_CLASSIFICATION	sortjlistmodel rulelibrarylist
WITHOUT_CLASSIFICATION	see org.argouml.model.orderingkind getunordered
WITHOUT_CLASSIFICATION	see org.argouml.model.directionkind getreturnparameter
WITHOUT_CLASSIFICATION	the text will be set later
WITHOUT_CLASSIFICATION	see org.argouml.model.activitygraphshelper findclassifierbyname java.lang.object java.lang.string all methods below similarly implement methods from activitygraphshelper
WITHOUT_CLASSIFICATION	remove the ones already selected if a perspective is selected
WITHOUT_CLASSIFICATION	see org.argouml.model.aggregationkind getnone
WITHOUT_CLASSIFICATION	add them
WITHOUT_CLASSIFICATION	see org.argouml.model.scopekind getclassifier
WITHOUT_CLASSIFICATION	see org.argouml.uml.reveng.importsettings getimportlevel
WITHOUT_CLASSIFICATION	see org.argouml.model.pseudostatekind getfork
WITHOUT_CLASSIFICATION	must add an editable list of new explorerperspective s to the list model so that the original ones are not changed in the case of a cancel action by the user.
WITHOUT_CLASSIFICATION	see org.argouml.uml.reveng.importsettings isminimisefigsselected
WITHOUT_CLASSIFICATION	see org.argouml.model.aggregationkind getaggregate
WITHOUT_CLASSIFICATION	update the label which shows the number of rules
WITHOUT_CLASSIFICATION	set the newly selected item in the library list
WITHOUT_CLASSIFICATION	see org.tigris.swidgets.orientable setorientation org.tigris.swidgets.orientation
WITHOUT_CLASSIFICATION	the name of the umldiagram represented by this node has changed.
WITHOUT_CLASSIFICATION	uml model events
WITHOUT_CLASSIFICATION	specifies valid elements for a component to contain
WITHOUT_CLASSIFICATION	notation events
WITHOUT_CLASSIFICATION	see javax.swing.plaf.metal.metaltheme getsubtextfont
WITHOUT_CLASSIFICATION	handle remove for non uml elements e.g. diagrams
WITHOUT_CLASSIFICATION	if the diagram is empty gef will not write anything leaving us with an empty and invalid file. handle this case ourselves to prevent this from happening.
WITHOUT_CLASSIFICATION	get the selected targets uml modelelements from the targetmanager.
WITHOUT_CLASSIFICATION	to persist to and from zargo zipped file storage containing seperate xmi argo plgml and todo zip entries. author bob tarling todo review use of this against zargofilepersister bob
WITHOUT_CLASSIFICATION	project events
WITHOUT_CLASSIFICATION	see java.awt.event.keylistener keyreleased java.awt.event.keyevent
WITHOUT_CLASSIFICATION	show a chooser dialog for the file name only xmi is allowed
WITHOUT_CLASSIFICATION	4.5.2.28 namespace
WITHOUT_CLASSIFICATION	get one of the default profile dirs if available as a default value for the following save dialog
WITHOUT_CLASSIFICATION	save profile
WITHOUT_CLASSIFICATION	nop
WITHOUT_CLASSIFICATION	register it as a user profile
WITHOUT_CLASSIFICATION	if laf is metal either set explicitly or as the default
WITHOUT_CLASSIFICATION	load user perspectives
WITHOUT_CLASSIFICATION	see javax.swing.plaf.metal.metaltheme getsystemtextfont
WITHOUT_CLASSIFICATION	get the perspective name
WITHOUT_CLASSIFICATION	see javax.swing.plaf.metal.metaltheme getsecondary2
WITHOUT_CLASSIFICATION	make sure there are some rules...
WITHOUT_CLASSIFICATION	get the rules
WITHOUT_CLASSIFICATION	see javax.swing.event.listselectionlistener valuechanged javax.swing.event.listselectionevent
WITHOUT_CLASSIFICATION	get the rule name
WITHOUT_CLASSIFICATION	see java.awt.event.windowlistener windowdeiconified java.awt.event.windowevent
WITHOUT_CLASSIFICATION	create the rule
WITHOUT_CLASSIFICATION	rule name but no rules
WITHOUT_CLASSIFICATION	this method can be called only if there is a valid selection so go ahead and remove whatever s selected.
WITHOUT_CLASSIFICATION	add the perspective
WITHOUT_CLASSIFICATION	no user defined perspectives
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.figedgemodelelement getnotationprovidertype
WITHOUT_CLASSIFICATION	one last check that some loaded.
WITHOUT_CLASSIFICATION	works for both statediagram as activitygraph
WITHOUT_CLASSIFICATION	enter here go rules only relevant for uml 2 empty for now
WITHOUT_CLASSIFICATION	the drag gesture recognizer fires events in response to drag gestures in a component.
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.abstractactionnavigate navigateto java.lang.object
WITHOUT_CLASSIFICATION	specifies valid actions
WITHOUT_CLASSIFICATION	eliminates right mouse clicks as valid actions
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.figedgemodelelement textedited org.tigris.gef.presentation.figtext
WITHOUT_CLASSIFICATION	get the cell renderer which is a jlabel for the path being dragged.
WITHOUT_CLASSIFICATION	the layout manager would normally do this
WITHOUT_CLASSIFICATION	see java.awt.dnd.dragsourcelistener dragdropend java.awt.dnd.dragsourcedropevent
WITHOUT_CLASSIFICATION	get a buffered image of the selection for dragging a ghost image
WITHOUT_CLASSIFICATION	now paint a gradient under the ghosted jlabel text but not under the icon if any .
WITHOUT_CLASSIFICATION	log.log level.fine slope theta math.pi pi theta math.pi 180.0
WITHOUT_CLASSIFICATION	make the gradient ghostlike
WITHOUT_CLASSIFICATION	remember the path being dragged because if it is being moved we will have to delete it later .
WITHOUT_CLASSIFICATION	we pass our drag image just in case it is supported by the platform.
WITHOUT_CLASSIFICATION	implements the source path controller. note if requested in the future this could be returned from the language modules. todo update this to use the uml 1.4 tagdefinition mechanism instead of uml 1.3 string type tag types. the tagdefinition can be made more specific so that it just applies to components with a sourcemodule stereotype or something similar. tfm author euluis since 0.17.1
WITHOUT_CLASSIFICATION	if the destination is not a namespace then abort
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.actionnewdiagram creatediagram
WITHOUT_CLASSIFICATION	if the destination is a datatype then abort
WITHOUT_CLASSIFICATION	let us check all dragged elements if one of these may be dropped then the drag is valid. the others will be ignored when dropping.
WITHOUT_CLASSIFICATION	remove the rule from the library list
WITHOUT_CLASSIFICATION	see org.argouml.ui.targetmanager.targetlistener targetset org.argouml.ui.targetmanager.targetevent
WITHOUT_CLASSIFICATION	empty implementation not used.
WITHOUT_CLASSIFICATION	see org.argouml.ui.guisettingstabinterface gettabpanel
WITHOUT_CLASSIFICATION	figure out which row we are on.
WITHOUT_CLASSIFICATION	see org.argouml.ui.guisettingstabinterface handleresettodefault
WITHOUT_CLASSIFICATION	if we are not on a row then ignore this autoscroll request
WITHOUT_CLASSIFICATION	we are sure dest is a namespace now.
WITHOUT_CLASSIFICATION	see org.argouml.ui.explorer.relocatable relocate java.lang.object
WITHOUT_CLASSIFICATION	now decide if the row is at the top of the screen or at the bottom. we do this to make the previous row or the next row visible as appropriate. if were at the absolute top or bottom just return the first or last row respectively.
WITHOUT_CLASSIFICATION	set up a hover timer so that a node will be automatically expanded or collapsed if the user lingers on it for more than a short time.
WITHOUT_CLASSIFICATION	see tudresden.ocl.check.types.type navigateparameterized java.lang.string tudresden.ocl.check.types.type
WITHOUT_CLASSIFICATION	isrootpath
WITHOUT_CLASSIFICATION	set timer to one shot mode
WITHOUT_CLASSIFICATION	this class is a temporary wrapper around the gef undomanager. this will be changed when gef is modified to create commands and provide an observer interface for argouml to receive them. p todo how does this relate to link org.argouml.kernel.defaultundomanager ? author bob tarling
WITHOUT_CLASSIFICATION	log.log level.fine dragover
WITHOUT_CLASSIFICATION	the next condition becomes false when dragging in something from another application.
WITHOUT_CLASSIFICATION	see org.argouml.ui.guisettingstabinterface handlesettingstabsave
WITHOUT_CLASSIFICATION	if a drag image is not supported by the platform then draw my own drag image.
WITHOUT_CLASSIFICATION	see javax.swing.plaf.metal.metaltheme getprimary2
WITHOUT_CLASSIFICATION	rub out the last ghost image and cue line
WITHOUT_CLASSIFICATION	access methods for program infrastructure.
WITHOUT_CLASSIFICATION	just rub out the last cue line
WITHOUT_CLASSIFICATION	in any case draw over the ghost image if necessary a cue line indicating where a drop will occur.
WITHOUT_CLASSIFICATION	retrieve an existing glasspane if old one already exist or create a new one otherwise return null
WITHOUT_CLASSIFICATION	and include the cue line in the area to be rubbed out next time
WITHOUT_CLASSIFICATION	see org.argouml.ui.guisettingstabinterface handlesettingstabcancel
WITHOUT_CLASSIFICATION	types can probably contain operations but we should not nag at them not having any.
WITHOUT_CLASSIFICATION	see tudresden.ocl.check.types.type2 navigateparameterizedquery java.lang.string tudresden.ocl.check.types.type
WITHOUT_CLASSIFICATION	to prohibit dropping onto the drag source
WITHOUT_CLASSIFICATION	this element can be contained add a menu item that allows the user to take that action
WITHOUT_CLASSIFICATION	if the destination is not a namespace then reject
WITHOUT_CLASSIFICATION	note this may be called from a different thread so we need to be careful of the threading restrictions imposed by abstractdocument for mutators to be sure we do not deadlock.
WITHOUT_CLASSIFICATION	prevent hover timer from doing an unwanted expandpath or collapsepath
WITHOUT_CLASSIFICATION	see java.awt.event.windowlistener windowopened java.awt.event.windowevent
WITHOUT_CLASSIFICATION	clear the ghost image
WITHOUT_CLASSIFICATION	do nothing these buttons are not shown.
WITHOUT_CLASSIFICATION	get new parent node
WITHOUT_CLASSIFICATION	log.log level.fine adding resolution for c.getclass cancreate
WITHOUT_CLASSIFICATION	conflict detected showing a warning to the user instead of saving shortcuts
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.abstractactionradiomenuitem togglevalueoftarget java.lang.object
WITHOUT_CLASSIFICATION	only accept copy or move gestures ie link is not supported
WITHOUT_CLASSIFICATION	we can not remove this and have the application manage things directly based on the font since only the names should be bold.
WITHOUT_CLASSIFICATION	make sure the correspondence that we depend on does not change
WITHOUT_CLASSIFICATION	do this if you want to prohibit dropping onto the drag source...
WITHOUT_CLASSIFICATION	remove the dependent modelelements such as the statemachine for a statechartdiagram
WITHOUT_CLASSIFICATION	for a deployment diagram not just any namespace will do we need a package.
WITHOUT_CLASSIFICATION	remove references for gc
WITHOUT_CLASSIFICATION	strip all characters out of var s var that could not be part of a valid java identifier. return either the given string if all characters were valid or a new string with all invalid characters stripped out. this allows automatic conversion of strings containing punctuation and spaces to a resource name that can be looked up.
WITHOUT_CLASSIFICATION	this should only be helpful for old garbage collectors.
WITHOUT_CLASSIFICATION	see java.awt.event.focuslistener focusgained java.awt.event.focusevent
WITHOUT_CLASSIFICATION	avoid doing this too early in the initialization process
WITHOUT_CLASSIFICATION	see org.tigris.gef.base.modecreatepolyedge mousereleased java.awt.event.mouseevent
WITHOUT_CLASSIFICATION	avoid recursively updating the same child
WITHOUT_CLASSIFICATION	if one or the other is null or they are not equal
WITHOUT_CLASSIFICATION	types do not need a constructor.
WITHOUT_CLASSIFICATION	null elements represent new constraints which will be added to the target the first time any actual editing takes place. this is done to ensure syntactical correctness of constraints stored with the target.
WITHOUT_CLASSIFICATION	see javax.swing.tree.defaulttreemodel removenodefromparent javax.swing.tree.mutabletreenode
WITHOUT_CLASSIFICATION	see java.awt.event.windowlistener windowclosed java.awt.event.windowevent
WITHOUT_CLASSIFICATION	enumerate the current children of node to find out which now sorts in different order since these must be moved
WITHOUT_CLASSIFICATION	avoid our deinitialization here the node will be added back to the tree again
WITHOUT_CLASSIFICATION	for each reordered node find it is new position among the current children and move it there
WITHOUT_CLASSIFICATION	avoid our initialization here
WITHOUT_CLASSIFICATION	collect the current set of objects that should be children to this node
WITHOUT_CLASSIFICATION	see guisettingstabinterface handlesettingstabrefresh
WITHOUT_CLASSIFICATION	handle weakexplorernodes
WITHOUT_CLASSIFICATION	remove the node from removeset
WITHOUT_CLASSIFICATION	remove obj3 from weaknodes and newchildren
WITHOUT_CLASSIFICATION	we need to fill the whole pane so that the description field can take all available space
WITHOUT_CLASSIFICATION	add any remaining nodes
WITHOUT_CLASSIFICATION	in this case the bounds of the box are determined by the figclassassociationclass
WITHOUT_CLASSIFICATION	it is the combo for order
WITHOUT_CLASSIFICATION	order the new children the dependencies cannot and need not be ordered
WITHOUT_CLASSIFICATION	see org.argouml.ui.stylepanelfig settargetbbox
WITHOUT_CLASSIFICATION	newly selected tab may have stale target info so generate a new set target event for it to refresh it
WITHOUT_CLASSIFICATION	tabresults has really large preferred height so divide in half to reduce size of dialog which will be sized based on this preferred size.
WITHOUT_CLASSIFICATION	treemodel implementation
WITHOUT_CLASSIFICATION	the responsibility of determining if the given target is a correct one for this tab has been moved from the detailspane to the member tabs of the details pane. reason for this is that the details pane is configurable and cannot know what is the correct target for some tab.
WITHOUT_CLASSIFICATION	see org.argouml.ui.stylepanelfig refresh
WITHOUT_CLASSIFICATION	only return once per diagram so we do not for example find a class as a diagram element and also as a child of a package which is on the diagram
WITHOUT_CLASSIFICATION	jtabbedpane tabs new jtabbedpane mainpanel.add tabs borderlayout.center tabs.addtab all diagrams alldiagrams
WITHOUT_CLASSIFICATION	the name of this instance of diagram
WITHOUT_CLASSIFICATION	a fig designed to be the child of some fignode or figedge to display the stereotypes of the model element represented by the parent fig. currently multiple stereotypes are shown stacked one on top of the other each enclosed by guillemets. p the minimum width of this fig is the largest minimum width of its child figs. the minimum height of this fig is the total minimum height of its child figs. p the owner of this fig is the uml element that is extended with the stereotypes. we are listening to changes to the model addition and removal of stereotypes. p this fig supports showing one keyword as the first stereotype in the list. p there is no way to remove a keyword fig once added. p todo allow for uml2 style display where all stereotypes are displayed in the same guillemet pair and are delimited by commas. the style should be changeable by calling getorientation orientation . the swidget orientation class can be used for this. author bob tarling
WITHOUT_CLASSIFICATION	see java.lang.object hashcode
WITHOUT_CLASSIFICATION	tree nodes
WITHOUT_CLASSIFICATION	needs to happen after initialization is done modules loaded
WITHOUT_CLASSIFICATION	see org.tigris.gef.persistence.pgml.handlerfactory gethandler handlerstack object string string string attributes
WITHOUT_CLASSIFICATION	massociationend
WITHOUT_CLASSIFICATION	the string code log4j.configuration code is the same string found in link org.apache.log4j.configuration.default configuration file but if we use the reference then log4j configures itself and clears the system property and we never know if it was set. if it is set then we let the static initializer in link argo perform the initialization.
WITHOUT_CLASSIFICATION	in uml2 some elements are not to be shown
WITHOUT_CLASSIFICATION	the reason the gui is initialized before the commands are run is that some of the commands will use the projectbrowser.
WITHOUT_CLASSIFICATION	do not show a profile application
WITHOUT_CLASSIFICATION	do not show element imports in profiles
WITHOUT_CLASSIFICATION	mmessage
WITHOUT_CLASSIFICATION	do not show extensions in profiles
WITHOUT_CLASSIFICATION	model.getfacade .isaproperty o
WITHOUT_CLASSIFICATION	see guisettingstabinterface gettabpanel
WITHOUT_CLASSIFICATION	do not show base ... properties in stereotypes
WITHOUT_CLASSIFICATION	notify the user that the modules in the list that are selected but not enabled were not possible to enable and that are not selected that we cannot disable. currently we just log this. todo we could eventually pop up some warning window.
WITHOUT_CLASSIFICATION	n a or x nodes and x edges
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.figedgemodelelement canedit org.tigris.gef.presentation.fig
WITHOUT_CLASSIFICATION	also show unattached sequence diagrams
WITHOUT_CLASSIFICATION	see java.awt.event.mouselistener mousepressed java.awt.event.mouseevent
WITHOUT_CLASSIFICATION	a subclass of jpanel that can act as a tab in the detailspane or multieditorpane. added functionality p spawning when the tab is double clicked this jpanel will generate a separate window of the same size and with the same contents. this is almost like tearing off a tab. p todo spawning of windows disabled in spawn p title this jpanel keeps track of its own title. p icon this jpanel keeps track of its own icon i.e. an arrow pointing to the panel that it gives details of. p orientation this jpanel is orientable. p cloning this jpanel may be cloned. p this class used to be named tabspawnable. renamed since it is not a tab but a panel and being spawnable is not any more its main purpose.
WITHOUT_CLASSIFICATION	see tudresden.ocl.parser.analysis.depthfirstadapter caseafeaturecall tudresden.ocl.parser.node.afeaturecall
WITHOUT_CLASSIFICATION	transition
WITHOUT_CLASSIFICATION	disabled since it gives various problems e.g. the toolbar icons get too wide. also the default does not give the new java 5.0 looks. swingutilities.updatecomponenttreeui swingutilities.getrootpane this
WITHOUT_CLASSIFICATION	see guisettingstabinterface handlesettingstabsave
WITHOUT_CLASSIFICATION	see org.argouml.model.visibilitykind getprotected
WITHOUT_CLASSIFICATION	see javax.swing.table.tablemodel getcolumnclass int
WITHOUT_CLASSIFICATION	mouselistener implementation
WITHOUT_CLASSIFICATION	org.argouml.ui.tabtable tabmetrics tabjavasrc tabsrc tabumldisplay tabhash
WITHOUT_CLASSIFICATION	todo what?
WITHOUT_CLASSIFICATION	if nothing selected go to last selected target
WITHOUT_CLASSIFICATION	see java.awt.component getsize
WITHOUT_CLASSIFICATION	needed for argo startup
WITHOUT_CLASSIFICATION	!targets.contains target
WITHOUT_CLASSIFICATION	targets.remove target
WITHOUT_CLASSIFICATION	jpanel north new jpanel north.setlayout new borderlayout north.add tabs borderlayout.center
WITHOUT_CLASSIFICATION	utilities usually do not require a constructor either
WITHOUT_CLASSIFICATION	some subclasses will try to use this
WITHOUT_CLASSIFICATION	let us load the current shortcut from the configuration as a string
WITHOUT_CLASSIFICATION	implement set like behaviour. the same element may not be added more then once.
WITHOUT_CLASSIFICATION	see org.argouml.ui.guisettingstabinterface handlesettingstabrefresh
WITHOUT_CLASSIFICATION	cannot break here since an object can be multiple times in history
WITHOUT_CLASSIFICATION	figclass calls setboundsimpl before we set the stereotypefigprofileicon
WITHOUT_CLASSIFICATION	commentedge the owner of a figedgenote
WITHOUT_CLASSIFICATION	write any left over bytes in the input buffer perhaps from a partially decoded character
WITHOUT_CLASSIFICATION	check if there are new elements in the list if the old and new list are of the same size set the oldtargets to the correct selection
WITHOUT_CLASSIFICATION	catch all exceptions and errors however severe
WITHOUT_CLASSIFICATION	if not found try the parent namespace
WITHOUT_CLASSIFICATION	listen for the removal of diagrams from project
WITHOUT_CLASSIFICATION	see tudresden.ocl.parser.analysis.depthfirstadapter outaenumliteral tudresden.ocl.parser.node.aenumliteral
WITHOUT_CLASSIFICATION	figs on a diagram without an owning model element
WITHOUT_CLASSIFICATION	see java.awt.event.componentlistener componenthidden java.awt.event.componentevent
WITHOUT_CLASSIFICATION	end class documentationmanager
WITHOUT_CLASSIFICATION	see javax.management.notificationbroadcaster getnotificationinfo
WITHOUT_CLASSIFICATION	todo needs localization
WITHOUT_CLASSIFICATION	do nothing! the next time we refresh we will fetch the values again.
WITHOUT_CLASSIFICATION	end class childgenrelated
WITHOUT_CLASSIFICATION	see javax.swing.table.tablemodel getcolumncount
WITHOUT_CLASSIFICATION	adds all stereotypes defined at the top level namespaces
WITHOUT_CLASSIFICATION	and now remove them
WITHOUT_CLASSIFICATION	the creation of the actual gui elements is deferred until they are actually needed. otherwize we have problems with the initialization.
WITHOUT_CLASSIFICATION	collect the to be removed stereotypes
WITHOUT_CLASSIFICATION	we preserve the current multiple selection if we are over part of it ...
WITHOUT_CLASSIFICATION	the name of this type of diagram
WITHOUT_CLASSIFICATION	add stereotypes
WITHOUT_CLASSIFICATION	see java.awt.component getpreferredsize
WITHOUT_CLASSIFICATION	loop through each element in the namespace recursing.
WITHOUT_CLASSIFICATION	check to see if all targets are classifiers before adding an option to create an association between them all
WITHOUT_CLASSIFICATION	end class uuidmanager
WITHOUT_CLASSIFICATION	see javax.swing.table.tablemodel iscelleditable int int
WITHOUT_CLASSIFICATION	see javax.swing.table.tablemodel setvalueat java.lang.object int int
WITHOUT_CLASSIFICATION	see org.tigris.gef.util.childgenerator gen java.lang.object
WITHOUT_CLASSIFICATION	see org.argouml.ui.tabtarget shouldbeenabled java.lang.object
WITHOUT_CLASSIFICATION	instance
WITHOUT_CLASSIFICATION	for all other model elements return any elements associated in any way
WITHOUT_CLASSIFICATION	target may appear multiple places in the tree so we do not stop here but it is expensive to search the whole tree tfm 20070904 targets.remove t break
WITHOUT_CLASSIFICATION	adds all stereotypes defined at the profiles applied to the current project
WITHOUT_CLASSIFICATION	see org.argouml.ui.tabtarget gettarget
WITHOUT_CLASSIFICATION	tablemodel implementation
WITHOUT_CLASSIFICATION	see org.argouml.ui.tabtarget settarget java.lang.object
WITHOUT_CLASSIFICATION	the name of this type of modelelement
WITHOUT_CLASSIFICATION	the name of this instance of modelelement
WITHOUT_CLASSIFICATION	issue resolution
WITHOUT_CLASSIFICATION	the name of the parent diagram instance
WITHOUT_CLASSIFICATION	not safe to presume the destination is the comment
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.figsinglelinetext propertychange java.beans.propertychangeevent
WITHOUT_CLASSIFICATION	this also sets the target as a convenient side effect
WITHOUT_CLASSIFICATION	the notationprovider for the classifierrole. p the syntax is for uml is pre baselist base base classifierrole name role baselist pre p the code name code is the instance name not used currently. see classifierrolenotationuml for details. p this syntax is compatible with the uml 1.4 specification.
WITHOUT_CLASSIFICATION	this is the tooltip of a comment link
WITHOUT_CLASSIFICATION	see java.io.filefilter accept java.io.file
WITHOUT_CLASSIFICATION	class
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.abstractactioncheckboxmenuitem togglevalueoftarget java.lang.object
WITHOUT_CLASSIFICATION	see javax.swing.event.treeexpansionlistener treeexpanded javax.swing.event.treeexpansionevent updates the selection state.
WITHOUT_CLASSIFICATION	association
WITHOUT_CLASSIFICATION	if we have no source and dest connector then we assume this is load of an old uml1.4 diagram from before this data was saved in pgml. for uml1.4 we can assume the source is first connection and destination is last connection stored in repository for this association.
WITHOUT_CLASSIFICATION	first argument component to associate the target with second argument droptargetlistener
WITHOUT_CLASSIFICATION	operation
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.figsinglelinetext removefromdiagram
WITHOUT_CLASSIFICATION	interface
WITHOUT_CLASSIFICATION	see java.awt.event.componentlistener componentshown java.awt.event.componentevent
WITHOUT_CLASSIFICATION	link
WITHOUT_CLASSIFICATION	see java.lang.throwable printstacktrace
WITHOUT_CLASSIFICATION	umlreserved.add document
WITHOUT_CLASSIFICATION	if requested height equals needed height then do nothing it fits exactly.
WITHOUT_CLASSIFICATION	ask the cell renderer to paint itself into the bufferedimage. make the image ghostlike.
WITHOUT_CLASSIFICATION	check for all uppercase and or mixed with underscores
WITHOUT_CLASSIFICATION	umlreserved.add file
WITHOUT_CLASSIFICATION	umlreserved.add node
WITHOUT_CLASSIFICATION	mvw these are the wfrs for datatype 1 a datatype can only contain operations which all must be queries. self.allfeatures forall f f.ocliskindof operation and f.oclastype operation .isquery 2 a datatype cannot contain any other modelelements. self.allcontents isempty imho we should enforce these wfrs here. ... so it is still possible to copy or move query operations hence we should allow this.
WITHOUT_CLASSIFICATION	umlreserved.add send
WITHOUT_CLASSIFICATION	see javax.swing.tree.treemodel removetreemodellistener javax.swing.event.treemodellistener
WITHOUT_CLASSIFICATION	the modelelement must have been deleted ignore this it will pass.
WITHOUT_CLASSIFICATION	umlreserved.add destroy
WITHOUT_CLASSIFICATION	see javax.swing.tree.treemodel valueforpathchanged javax.swing.tree.treepath java.lang.object
WITHOUT_CLASSIFICATION	self.allconnections forall ar ar.participant self
WITHOUT_CLASSIFICATION	only refresh the tab if the bounds propertychange event arrives. see org.argouml.ui.stylepanel refresh java.beans.propertychangeevent
WITHOUT_CLASSIFICATION	end class crcircularassocclass
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.visibilitycontainer isvisibilityvisible
WITHOUT_CLASSIFICATION	mattribute
WITHOUT_CLASSIFICATION	clear out queues!
WITHOUT_CLASSIFICATION	copy returned parameters because it will be a live collection for mdr
WITHOUT_CLASSIFICATION	if the name is only underscores
WITHOUT_CLASSIFICATION	this is somewhat inconsistent with the design of the constructor that receives the root object by argument. if this is okay then there may be no need for a constructor with that argument.
WITHOUT_CLASSIFICATION	see javax.swing.icon painticon java.awt.component java.awt.graphics int int
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.visibilitycontainer setvisibilityvisible boolean
WITHOUT_CLASSIFICATION	see javax.swing.icon geticonheight
WITHOUT_CLASSIFICATION	see javax.swing.tree.defaulttreemodel insertnodeinto javax.swing.tree.mutabletreenode javax.swing.tree.mutabletreenode int
WITHOUT_CLASSIFICATION	umlreserved.add copy umlreserved.add create
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.fignodemodelelement texteditstarted org.tigris.gef.presentation.figtext
WITHOUT_CLASSIFICATION	end class clattributecompartment
WITHOUT_CLASSIFICATION	remember that children are not treenodes but userobjects
WITHOUT_CLASSIFICATION	check whether constant constants are often weird and thus not a problem
WITHOUT_CLASSIFICATION	why are we here?
WITHOUT_CLASSIFICATION	if the classifier does not have a name then no problem the model is not finished anyhow.
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.fignodemodelelement updatestereotypetext
WITHOUT_CLASSIFICATION	added by eric lefevre 13 mar 1999 we must check if the figtext for attributes is drawn before drawing things over it
WITHOUT_CLASSIFICATION	see org.argouml.ui.tabtarget refresh
WITHOUT_CLASSIFICATION	abstract elements do not necessarily require associations
WITHOUT_CLASSIFICATION	see javax.management.notificationlistener handlenotification javax.management.notification java.lang.object
WITHOUT_CLASSIFICATION	see javax.swing.plaf.metal.metaltheme getname
WITHOUT_CLASSIFICATION	added by eric lefevre 13 mar 1999 we must check if the figtext for operations is drawn before drawing things over it
WITHOUT_CLASSIFICATION	see tudresden.ocl.parser.analysis.depthfirstadapter outastringliteral tudresden.ocl.parser.node.astringliteral
WITHOUT_CLASSIFICATION	special cases for use cases extending use cases and use case that are being included are not required to have associations.
WITHOUT_CLASSIFICATION	see org.argouml.uml.ui.umluserinterfacecomponent targetchanged
WITHOUT_CLASSIFICATION	for use cases we need to check for extend includes actors cannot have them so no need to check
WITHOUT_CLASSIFICATION	the association that triggered the critic. its just possible the association is no longer there in which case we return null
WITHOUT_CLASSIFICATION	see org.argouml.ui.targetmanager.targetlistener targetremoved org.argouml.ui.targetmanager.targetevent
WITHOUT_CLASSIFICATION	end class cloperationcompartment
WITHOUT_CLASSIFICATION	abstractions are represented in the inheritance node.
WITHOUT_CLASSIFICATION	now create the five options
WITHOUT_CLASSIFICATION	in uml2 we do not want to see element imports in profiles
WITHOUT_CLASSIFICATION	get the names of the two ends. if there are none i.e they are currently anonymous use the argouml convention of anon for the names
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.figeditablecompartment getnotationtype
WITHOUT_CLASSIFICATION	default any other step is to return nothing
WITHOUT_CLASSIFICATION	see org.argouml.kernel.delayedvchangelistener delayedvetoablechange java.beans.propertychangeevent
WITHOUT_CLASSIFICATION	set the appropriate aggregation on each end
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.figedgemodelelement updatelisteners java.lang.object
WITHOUT_CLASSIFICATION	start is a composite aggregation of end
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.umldiagram relocate java.lang.object
WITHOUT_CLASSIFICATION	start is a shared aggregation of end
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.figedgemodelelement modelchanged java.beans.propertychangeevent
WITHOUT_CLASSIFICATION	end is a composite aggregation of start
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.fignodemodelelement renderingchanged
WITHOUT_CLASSIFICATION	end is a shared aggregation of start
WITHOUT_CLASSIFICATION	see org.tigris.gef.graph.basegraphmodel getowner java.lang.object
WITHOUT_CLASSIFICATION	no aggregation
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.fignodemodelelement addenclosedfig org.tigris.gef.presentation.fig
WITHOUT_CLASSIFICATION	someone took our association away.
WITHOUT_CLASSIFICATION	first get the collection of elementresidence
WITHOUT_CLASSIFICATION	cannot finish if our parent cannot
WITHOUT_CLASSIFICATION	can finish if it is step 0
WITHOUT_CLASSIFICATION	see java.awt.event.mouselistener mouseclicked java.awt.event.mouseevent
WITHOUT_CLASSIFICATION	can finish if we are on step1 and have actually made a choice
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.umldiagram getlabelname
WITHOUT_CLASSIFICATION	otherwise we cannot finish
WITHOUT_CLASSIFICATION	performs critique as soon as possible. see java.beans.propertychangelistener propertychange java.beans.propertychangeevent
WITHOUT_CLASSIFICATION	todo the wfr does not restrict this to classifiers tfm
WITHOUT_CLASSIFICATION	see java.awt.dnd.droptargetlistener dragexit java.awt.dnd.droptargetevent
WITHOUT_CLASSIFICATION	model.getfacade .getmodelelement
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.umldiagram getumlactions
WITHOUT_CLASSIFICATION	if the script of the action is empty or only specifies arguments and no method name then we generate a string based on a different model element
WITHOUT_CLASSIFICATION	replace all occurances of offender with the name of the first offender
WITHOUT_CLASSIFICATION	umlreserved.add initial umlreserved.add final umlreserved.add fork umlreserved.add join umlreserved.add history
WITHOUT_CLASSIFICATION	check if there is no ocl end if so the critic expression is not correct and can not be expanded
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.layout.layoutededge layout
WITHOUT_CLASSIFICATION	thestereotype.setstereotype ???
WITHOUT_CLASSIFICATION	see javax.swing.icon geticonwidth
WITHOUT_CLASSIFICATION	display related methods
WITHOUT_CLASSIFICATION	create a different client to bind to the same supplier
WITHOUT_CLASSIFICATION	end class crinterfaceallpublic
WITHOUT_CLASSIFICATION	return original string if no replacements made
WITHOUT_CLASSIFICATION	types can probably have associations but we should not nag at them not having any. utility is a namespace collection also not strictly required to have associations.
WITHOUT_CLASSIFICATION	if we drop out there is no problem
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.static structure.layout.classdiagramnode isstandalone
WITHOUT_CLASSIFICATION	only look at associations
WITHOUT_CLASSIFICATION	see org.tigris.gef.graph.graphfactory makegraphmodel
WITHOUT_CLASSIFICATION	end class crcrossnamespaceassoc
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.figedgemodelelement getdestination
WITHOUT_CLASSIFICATION	todo different critic for packages consisting only of references to elements of other packages?
WITHOUT_CLASSIFICATION	the next associationend and its classifier. check the classifier is in the namespace of the association. if not we have a problem.
WITHOUT_CLASSIFICATION	the purpose of this method is not explained and it give give npe depending on z order of figs as they are read. for now ignore if null but for future let us delete this.
WITHOUT_CLASSIFICATION	original class was not abstract
WITHOUT_CLASSIFICATION	see tudresden.ocl.parser.analysis.depthfirstadapter caseaunaryunaryexpression tudresden.ocl.parser.node.aunaryunaryexpression
WITHOUT_CLASSIFICATION	see if there is already an element with the same name
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.static structure.layout.classdiagramnode getweight
WITHOUT_CLASSIFICATION	end class crclassmustbeabstract
WITHOUT_CLASSIFICATION	design feedback
WITHOUT_CLASSIFICATION	end class cruselessabstract
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.static structure.layout.classdiagramnode getrank
WITHOUT_CLASSIFICATION	mclassifier
WITHOUT_CLASSIFICATION	see org.argouml.ui.explorer.rules.perspectiverule getdependencies java.lang.object
WITHOUT_CLASSIFICATION	only look at classes
WITHOUT_CLASSIFICATION	found a concrete subclass
WITHOUT_CLASSIFICATION	todo different critic or special message for classes that inherit all ops but define none of their own.
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.static structure.layout.classdiagramnode gettypeordernumer
WITHOUT_CLASSIFICATION	end class crtoomanyassoc
WITHOUT_CLASSIFICATION	see org.argouml.ui.targetmanager.targetlistener targetadded org.argouml.ui.targetmanager.targetevent
WITHOUT_CLASSIFICATION	end class cruselessinterface
WITHOUT_CLASSIFICATION	todo probably really want to cancel editing figtexteditor focusowner .cancelediting
WITHOUT_CLASSIFICATION	end class crcomponentinstancewithoutclassifier
WITHOUT_CLASSIFICATION	check that the parameter lists match.
WITHOUT_CLASSIFICATION	end class crtoomanyclasses
WITHOUT_CLASSIFICATION	utility is a namespace collection also not strictly required to have operations.
WITHOUT_CLASSIFICATION	see org.tigris.gef.base.diagram setname java.lang.string
WITHOUT_CLASSIFICATION	we do not consider secondary stuff.
WITHOUT_CLASSIFICATION	see org.tigris.gef.graph.mutablegraphmodel containsnode java.lang.object
WITHOUT_CLASSIFICATION	see org.argouml.notation.providers.notationprovider parse java.lang.object java.lang.string
WITHOUT_CLASSIFICATION	newedge.setdielement graphchangeadapter.getinstance .createelement gm edge
WITHOUT_CLASSIFICATION	if the object does not have a name than no problem
WITHOUT_CLASSIFICATION	end gef methods
WITHOUT_CLASSIFICATION	see guisettingstabinterface gettabkey
WITHOUT_CLASSIFICATION	not allowed
WITHOUT_CLASSIFICATION	todo comments are on element in uml 2.x
WITHOUT_CLASSIFICATION	there is a constructor.
WITHOUT_CLASSIFICATION	create a diagram. this 4 arg version is only for internal use. the namespace argument is deprecated and not used in the new apis.
WITHOUT_CLASSIFICATION	see profilemodelloader loadmodel profilereference
WITHOUT_CLASSIFICATION	this should not be possible but just in case
WITHOUT_CLASSIFICATION	end class crtoomanystates
WITHOUT_CLASSIFICATION	link does not exist in uml2 a link is represented just as an association
WITHOUT_CLASSIFICATION	create the uml connection of the given type between the given model elements. default aggregation none
WITHOUT_CLASSIFICATION	for compatibility with older format
WITHOUT_CLASSIFICATION	commentlinks for comments. iterate over all the comment links to find the comment and annotated elements.
WITHOUT_CLASSIFICATION	the connection is not valid unless both nodes are in this graph model.
WITHOUT_CLASSIFICATION	yeah right...we do not have an operation and thus no
WITHOUT_CLASSIFICATION	important these must remain in order!
WITHOUT_CLASSIFICATION	check that the names match.
WITHOUT_CLASSIFICATION	singleton no instantiation
WITHOUT_CLASSIFICATION	initialize test data
WITHOUT_CLASSIFICATION	the special value code null code is used internally to indicate that the default value should be inherited from the next level of settings.
WITHOUT_CLASSIFICATION	both lists have the same length
WITHOUT_CLASSIFICATION	repeat until no faults are fixed
WITHOUT_CLASSIFICATION	diagram appearance settings with project scope
WITHOUT_CLASSIFICATION	if the array has not been flagged to indicate otherwise swap elements the elements and add again.
WITHOUT_CLASSIFICATION	some cached fonts based on the above settings
WITHOUT_CLASSIFICATION	massociation
WITHOUT_CLASSIFICATION	if we have got a local uninherited font name or size or if we have got no parent to inherit from recompute our cached fonts
WITHOUT_CLASSIFICATION	types can probably have variables but we should not nag at them not having any.
WITHOUT_CLASSIFICATION	listen for name changes so we can veto them if we do not like them
WITHOUT_CLASSIFICATION	see org.argouml.model.modeleventpump stoppumpingevents
WITHOUT_CLASSIFICATION	get all the classes from the diagram
WITHOUT_CLASSIFICATION	only classes with name need a constructor
WITHOUT_CLASSIFICATION	see org.tigris.gef.base.command execute
WITHOUT_CLASSIFICATION	if we find an instance variable that is not a constant we have succeeded
WITHOUT_CLASSIFICATION	the report
WITHOUT_CLASSIFICATION	de selects the fig minimising layout if we are not creating diagrams
WITHOUT_CLASSIFICATION	we can give up looking if we have hit both criteria
WITHOUT_CLASSIFICATION	end class crnoinitialstate
WITHOUT_CLASSIFICATION	the fix
WITHOUT_CLASSIFICATION	if we drop out we did not meet both criteria and all is well.
WITHOUT_CLASSIFICATION	2. make sure that all figs are visible
WITHOUT_CLASSIFICATION	see org.argouml.ui.explorer.rules.perspectiverule getrulename
WITHOUT_CLASSIFICATION	see org.tigris.gef.graph.mutablegraphmodel canaddnode java.lang.object
WITHOUT_CLASSIFICATION	see tudresden.ocl.check.types.type hasstate java.lang.string
WITHOUT_CLASSIFICATION	create chooser for objects we are to import. old style modules get to provide their own although i do not believe any of them do while new style modules get the a chooser provided by us which matches what the abstract class fileimportsupport used to provide .
WITHOUT_CLASSIFICATION	1. make sure all figs in the diagrams layer refer back to that layer.
WITHOUT_CLASSIFICATION	maybe we have a modelelement that is part of some other fig
WITHOUT_CLASSIFICATION	register for notification of any global changes that would affect our rendering
WITHOUT_CLASSIFICATION	4. make sure all fignodes and figedges have an owner the report
WITHOUT_CLASSIFICATION	3. make sure all figedges are attached to a valid fignode the report
WITHOUT_CLASSIFICATION	5. make sure all fignodes and figedges have a valid owner the report
WITHOUT_CLASSIFICATION	do nothing override in subclass.
WITHOUT_CLASSIFICATION	if we have not succeeded in getting a namespace then abort
WITHOUT_CLASSIFICATION	this should always be true but just in case...
WITHOUT_CLASSIFICATION	the diagram to be laid out.
WITHOUT_CLASSIFICATION	point at which to start layout initial state goes here . the x coordinate must be greater than half the width of the widest figure to be placed because figures are centered on this location .
WITHOUT_CLASSIFICATION	finalstate element for activitydiagram
WITHOUT_CLASSIFICATION	find our initial state
WITHOUT_CLASSIFICATION	place all the nodes
WITHOUT_CLASSIFICATION	place the final state last with a little separation
WITHOUT_CLASSIFICATION	get the first editable extent which is ok unless there is more than one editable extent
WITHOUT_CLASSIFICATION	if we are trying to set the namespace to the existing value then do not do any more work.
WITHOUT_CLASSIFICATION	figclone.seperator figline it.next
WITHOUT_CLASSIFICATION	needed for project deletion
WITHOUT_CLASSIFICATION	todo midpoints for side handles
WITHOUT_CLASSIFICATION	we removed the last partition so now remove the pool too
WITHOUT_CLASSIFICATION	no action required in case of veto on setname
WITHOUT_CLASSIFICATION	this test needed for project deletion
WITHOUT_CLASSIFICATION	todo side handles
WITHOUT_CLASSIFICATION	listen to activitygraph deletion delete this diagram.
WITHOUT_CLASSIFICATION	no action required
WITHOUT_CLASSIFICATION	the namespace of the activitygraph is changed!
WITHOUT_CLASSIFICATION	getactionsubactivitystate
WITHOUT_CLASSIFICATION	the space between the 2 text figs is padding. see org.tigris.gef.presentation.fig getminimumsize
WITHOUT_CLASSIFICATION	we want to maintain a minimum size for the partition
WITHOUT_CLASSIFICATION	model.getactivitygraphshelper .isaddingactivitygraphallowed base
WITHOUT_CLASSIFICATION	register for events from the type
WITHOUT_CLASSIFICATION	create a map of partitions keyed by x coordinate
WITHOUT_CLASSIFICATION	sort the x coordinates into order
WITHOUT_CLASSIFICATION	the state name
WITHOUT_CLASSIFICATION	do not listen to all property names we only need to listen to its type and remove .
WITHOUT_CLASSIFICATION	the height of the blank space above and below the text figs
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig setlinewidth int
WITHOUT_CLASSIFICATION	override setbounds to keep shapes looking right. see org.tigris.gef.presentation.fig setboundsimpl int int int int
WITHOUT_CLASSIFICATION	and listen to name changes of the submachine
WITHOUT_CLASSIFICATION	add them back to front
WITHOUT_CLASSIFICATION	let our superclass sort itself out first
WITHOUT_CLASSIFICATION	see org.tigris.gef.base.selectionbuttons getnewnode int
WITHOUT_CLASSIFICATION	set up the property panels for activity diagrams
WITHOUT_CLASSIFICATION	overrule the single line name fig created by the parent
WITHOUT_CLASSIFICATION	setblinkports false make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	todo do we need to clone the stereotype s ?
WITHOUT_CLASSIFICATION	mgeneralization
WITHOUT_CLASSIFICATION	the width needs to be the height
WITHOUT_CLASSIFICATION	mclassifier node .setnamespace collab.getnamespace
WITHOUT_CLASSIFICATION	add the given edge to the graph if valid. see org.tigris.gef.graph.mutablegraphmodel addedge java.lang.object
WITHOUT_CLASSIFICATION	todo we may return the following when the relocate has been implemented.
WITHOUT_CLASSIFICATION	todo we may return something useful when the relocate has been implemented.
WITHOUT_CLASSIFICATION	the stereotype. width is the same as the cover height is its default since the font is not yet set . the text should be centered.
WITHOUT_CLASSIFICATION	getstereotypefig .setfilled false
WITHOUT_CLASSIFICATION	end class collabdiagramgraphmodel
WITHOUT_CLASSIFICATION	in the rather unlikely case that we have no name we give up.
WITHOUT_CLASSIFICATION	the big port. color of the big port is irrelevant
WITHOUT_CLASSIFICATION	the cover.
WITHOUT_CLASSIFICATION	at least one stereotype is visible
WITHOUT_CLASSIFICATION	remember where we are at present so we can tell gef later. then check we are as big as the minimum size
WITHOUT_CLASSIFICATION	set the bounds of the bigport and cover
WITHOUT_CLASSIFICATION	work out the padding each side depending on whether the stereotype is displayed and set bounds accordingly
WITHOUT_CLASSIFICATION	this one behaves differently hence seperated
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig calcbounds
WITHOUT_CLASSIFICATION	todo ?
WITHOUT_CLASSIFICATION	a binary association is not a node so reject.
WITHOUT_CLASSIFICATION	end class figassociationrole
WITHOUT_CLASSIFICATION	todo settings
WITHOUT_CLASSIFICATION	the figs that make up this group
WITHOUT_CLASSIFICATION	x first.getx y first.gety
WITHOUT_CLASSIFICATION	set up the property panels for collaboration diagrams
WITHOUT_CLASSIFICATION	this is neat...
WITHOUT_CLASSIFICATION	see org.tigris.gef.graph.mutablegraphmodel addedge java.lang.object
WITHOUT_CLASSIFICATION	see org.tigris.gef.graph.mutablegraphmodel addnoderelatededges java.lang.object
WITHOUT_CLASSIFICATION	todo assumes public
WITHOUT_CLASSIFICATION	set up the property panels for deployment diagrams
WITHOUT_CLASSIFICATION	getters for plugin modules
WITHOUT_CLASSIFICATION	so it still looks like a cube
WITHOUT_CLASSIFICATION	elementordering figures
WITHOUT_CLASSIFICATION	bigport.setbounds x 1 y 1 w 2 h 2
WITHOUT_CLASSIFICATION	nothing extra to do currently
WITHOUT_CLASSIFICATION	end class predisstartpackage
WITHOUT_CLASSIFICATION	see org.tigris.gef.graph.mutablegraphmodel addnode java.lang.object
WITHOUT_CLASSIFICATION	if the layer is null then most likely we are being deleted.
WITHOUT_CLASSIFICATION	graphmodel implementation
WITHOUT_CLASSIFICATION	both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	end class statediagramgraphmodel
WITHOUT_CLASSIFICATION	do not do it for comment.
WITHOUT_CLASSIFICATION	melementimport
WITHOUT_CLASSIFICATION	mtransition
WITHOUT_CLASSIFICATION	prevent no changes...
WITHOUT_CLASSIFICATION	if a uml object is found you can not remove selected elms.
WITHOUT_CLASSIFICATION	if nothing is selected then not allowed to remove it.
WITHOUT_CLASSIFICATION	the returned list of figs is sorted according layout from top to bottom.
WITHOUT_CLASSIFICATION	if only figs without owner are selected then you can remove them!
WITHOUT_CLASSIFICATION	end class predisfinalstate
WITHOUT_CLASSIFICATION	this presumes that the layer is set after the owner
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.figedge setfig org.tigris.gef.presentation.fig
WITHOUT_CLASSIFICATION	we only handle the case where a region has been removed
WITHOUT_CLASSIFICATION	if it is concurrent and contains concurrent regions the regions are resized
WITHOUT_CLASSIFICATION	none of the menu items below apply when multiple modelelements are selected
WITHOUT_CLASSIFICATION	do we need to
WITHOUT_CLASSIFICATION	there are one or more regions so find the one that the vertex was dropped in
WITHOUT_CLASSIFICATION	the event source is the owner stub state
WITHOUT_CLASSIFICATION	end class figcompositestate
WITHOUT_CLASSIFICATION	the event source is the submachine state
WITHOUT_CLASSIFICATION	targetmanager.getinstance .addtargetlistener this
WITHOUT_CLASSIFICATION	ignored fixed rendering
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	the submachine has got a new name
WITHOUT_CLASSIFICATION	this indicates a change in association not name tfm
WITHOUT_CLASSIFICATION	all states in the new reference state s path are added as listeners
WITHOUT_CLASSIFICATION	the source was the referenced state that has got a new name.
WITHOUT_CLASSIFICATION	the old submachine container is deleted as listener
WITHOUT_CLASSIFICATION	the referenced state or one of his path s states has got a new name
WITHOUT_CLASSIFICATION	the new submachine container is added as listener
WITHOUT_CLASSIFICATION	all states in the old reference state s path are deleted as listeners
WITHOUT_CLASSIFICATION	translate any old style sequence diagrams
WITHOUT_CLASSIFICATION	translate any sequence diagrams create with any previous svn work in progress
WITHOUT_CLASSIFICATION	get the first existing fignode and if it exists set the y position and height of pers to be the same as it.
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig makeselection
WITHOUT_CLASSIFICATION	ignored rendering is fixed
WITHOUT_CLASSIFICATION	ignore mouse clicks
WITHOUT_CLASSIFICATION	this assert fails for the testpropertypanels file guitestpropertypanels.zargo
WITHOUT_CLASSIFICATION	assert w h
WITHOUT_CLASSIFICATION	the machine state has been deleted from model
WITHOUT_CLASSIFICATION	ignore w and h from here on.
WITHOUT_CLASSIFICATION	leave some space below the include
WITHOUT_CLASSIFICATION	file load save gets done on a background thread so we will probably have to queue this to the swing event thread
WITHOUT_CLASSIFICATION	see org.tigris.gef.graph.graphedgerenderer getfigedgefor org.tigris.gef.graph.graphmodel org.tigris.gef.base.layer java.lang.object java.util.map
WITHOUT_CLASSIFICATION	both have the same settings
WITHOUT_CLASSIFICATION	both have the same owner
WITHOUT_CLASSIFICATION	frank in case of exception delete name and mv name back to name if name exists this is the rollback to old file
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.state.ui.figstatevertex initnotationproviders java.lang.object
WITHOUT_CLASSIFICATION	see org.argouml.uml.diagram.ui.fignodemodelelement removefromdiagramimpl
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig setfillcolor java.awt.color
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig getfillcolor
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig getlinewidth
WITHOUT_CLASSIFICATION	noop fixed rendering
WITHOUT_CLASSIFICATION	there are no regions so create one and place the vertex there.
WITHOUT_CLASSIFICATION	setblinkports false make port invisble unless mouse enters
WITHOUT_CLASSIFICATION	there can only be one
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig getminimumsize
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig getusetraprect
WITHOUT_CLASSIFICATION	the group must be resized if a text field exceed the bounds
WITHOUT_CLASSIFICATION	a concurrent region cannot have incoming or outgoing transitions so incoming or outgoing transitions are redirected to its concurrent composite state container.
WITHOUT_CLASSIFICATION	cat.debug note todoparser handlestarttag e.getname
WITHOUT_CLASSIFICATION	see java.awt.event.mouselistener mousereleased java.awt.event.mouseevent
WITHOUT_CLASSIFICATION	see java.awt.event.mousemotionlistener mousedragged java.awt.event.mouseevent
WITHOUT_CLASSIFICATION	see java.awt.event.mousemotionlistener mousemoved java.awt.event.mouseevent
WITHOUT_CLASSIFICATION	nothing we can do about veto so just ignore it
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	or just the owner?
WITHOUT_CLASSIFICATION	listen to machine deletion to delete the diagram.
WITHOUT_CLASSIFICATION	this in case we are being deleted
WITHOUT_CLASSIFICATION	the namespace of the statemachine is changed!
WITHOUT_CLASSIFICATION	throws propertyvetoexception
WITHOUT_CLASSIFICATION	check parameter types
WITHOUT_CLASSIFICATION	model.getstatemachineshelper .isaddingstatemachineallowed base
WITHOUT_CLASSIFICATION	set up the property panels for statechart diagrams
WITHOUT_CLASSIFICATION	mmodelelement modelelement elementimport.getmodelelement
WITHOUT_CLASSIFICATION	top of the hierarchy is me
WITHOUT_CLASSIFICATION	then generalizable element
WITHOUT_CLASSIFICATION	then classifier package
WITHOUT_CLASSIFICATION	navigable.... only want incoming
WITHOUT_CLASSIFICATION	then classifier
WITHOUT_CLASSIFICATION	mutablegraphmodel implementation
WITHOUT_CLASSIFICATION	vetoablechangelistener implementation
WITHOUT_CLASSIFICATION	cast the params
WITHOUT_CLASSIFICATION	set the new end type!
WITHOUT_CLASSIFICATION	rerouting the destination
WITHOUT_CLASSIFICATION	rerouting the source
WITHOUT_CLASSIFICATION	move down
WITHOUT_CLASSIFICATION	empty at the moment
WITHOUT_CLASSIFICATION	move more right
WITHOUT_CLASSIFICATION	move left
WITHOUT_CLASSIFICATION	use left and right up and down
WITHOUT_CLASSIFICATION	the amount of the sidestep
WITHOUT_CLASSIFICATION	currentedge.setbetweennearestpoints false
WITHOUT_CLASSIFICATION	log.debug result node1 this node2 node
WITHOUT_CLASSIFICATION	split split null split.isstandalone ? node split
WITHOUT_CLASSIFICATION	xoffset curw 2
WITHOUT_CLASSIFICATION	element is allowed but only namedelement can return nonempty list
WITHOUT_CLASSIFICATION	end class actiongotodiagram
WITHOUT_CLASSIFICATION	link does not exist in uml2
WITHOUT_CLASSIFICATION	end class figlink
WITHOUT_CLASSIFICATION	by default do not show operations nor attributes
WITHOUT_CLASSIFICATION	we are going to change the name immediately so just use
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	todo place comments near connected classes todo place from middle towards outer edges? or place largest groups first
WITHOUT_CLASSIFICATION	boolean haspackages false todo move package in row to noderow
WITHOUT_CLASSIFICATION	initpreinitialize initializesubsystems new simpletimer null argoframe.getinstance .setvisible true
WITHOUT_CLASSIFICATION	since uml2 this must appear before the isaclass clause
WITHOUT_CLASSIFICATION	this rectangle marks the operation section all operations are inside it
WITHOUT_CLASSIFICATION	2nd compartment so adjust y appropriately
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig translate int int
WITHOUT_CLASSIFICATION	see java.lang.object clone
WITHOUT_CLASSIFICATION	check if any stereotype is defined
WITHOUT_CLASSIFICATION	update the listeners to match the desired set using the minimal update facility
WITHOUT_CLASSIFICATION	add ...
WITHOUT_CLASSIFICATION	there are 2 boxes showing lines the tab and the body.
WITHOUT_CLASSIFICATION	this populates the stereotypes area
WITHOUT_CLASSIFICATION	else nothing changed
WITHOUT_CLASSIFICATION	on uniprocessors wait until we are sure the splash screen has been painted so that we are not competing for resources
WITHOUT_CLASSIFICATION	we got at least one stereotype
WITHOUT_CLASSIFICATION	the user wants to hide them
WITHOUT_CLASSIFICATION	modifier ...
WITHOUT_CLASSIFICATION	if we have any number of stereotypes displayed then allow some space for that only width height is included in namefig
WITHOUT_CLASSIFICATION	take into account the tab is not as wide as the body
WITHOUT_CLASSIFICATION	we want at least some of the package body to be displayed
WITHOUT_CLASSIFICATION	and now asize has the answer
WITHOUT_CLASSIFICATION	save our old boundaries needed later and get minimum size info. asize will be used to maintain a running calculation of our size at various points.
WITHOUT_CLASSIFICATION	the new size can not be smaller than the minimum.
WITHOUT_CLASSIFICATION	now sort out the stereotype display. if the stereotype is displayed move the upper boundary of the name compartment up and set new bounds for the name and the stereotype compartments and the stereolineblinder that blanks out the line between the two
WITHOUT_CLASSIFICATION	1 for 1 pixel overlap
WITHOUT_CLASSIFICATION	set bounds of big box
WITHOUT_CLASSIFICATION	the figpoly is located at the right edge of the namefig. the namefig size is such that it at least fits its text and the figpoly next to the text. making the package bigger causes the figpoly to stick to the right edge.
WITHOUT_CLASSIFICATION	only show the menuitems if they make sense
WITHOUT_CLASSIFICATION	save first
WITHOUT_CLASSIFICATION	and its stereotypes
WITHOUT_CLASSIFICATION	try to create a new class diagram.
WITHOUT_CLASSIFICATION	if package
WITHOUT_CLASSIFICATION	if doubleclicks
WITHOUT_CLASSIFICATION	change prefix
WITHOUT_CLASSIFICATION	end class figpackage
WITHOUT_CLASSIFICATION	end class stylepanelfigpackage
WITHOUT_CLASSIFICATION	in the deploymentdiagram there are no generalizations
WITHOUT_CLASSIFICATION	self association is not draggable
WITHOUT_CLASSIFICATION	end class stylepanelfiginterface
WITHOUT_CLASSIFICATION	no generalizations on deployment diagram
WITHOUT_CLASSIFICATION	add the listeners to the newowner
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	stereotype covers namefig
WITHOUT_CLASSIFICATION	compartments from top to bottom
WITHOUT_CLASSIFICATION	collect the set of model elements that we want to listen to
WITHOUT_CLASSIFICATION	and its features
WITHOUT_CLASSIFICATION	and the stereotypes of its features
WITHOUT_CLASSIFICATION	and the parameter of its operations
WITHOUT_CLASSIFICATION	use super because not fully init d
WITHOUT_CLASSIFICATION	and now add listeners to them all
WITHOUT_CLASSIFICATION	set the bounds of the figure to the total of the above
WITHOUT_CLASSIFICATION	testing add a parameter to an operation on an interface. does the interface fig adapt its width?
WITHOUT_CLASSIFICATION	set up the property panels for class diagrams
WITHOUT_CLASSIFICATION	the figure that holds the text of the note.
WITHOUT_CLASSIFICATION	see java.beans.vetoablechangelistener vetoablechange java.beans.propertychangeevent
WITHOUT_CLASSIFICATION	see java.beans.propertychangelistener propertychange java.beans.propertychangeevent
WITHOUT_CLASSIFICATION	see java.awt.event.keylistener keypressed java.awt.event.keyevent
WITHOUT_CLASSIFICATION	get the size of the text field.
WITHOUT_CLASSIFICATION	update the relative sizes and positions of internel figs
WITHOUT_CLASSIFICATION	resize the text figure
WITHOUT_CLASSIFICATION	resize the fignode to accomodate the new text
WITHOUT_CLASSIFICATION	not used do nothing.
WITHOUT_CLASSIFICATION	resize the big port around the figure
WITHOUT_CLASSIFICATION	the text element has no border so the line color does not matter.
WITHOUT_CLASSIFICATION	the text is always opaque.
WITHOUT_CLASSIFICATION	? 2 line width?
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig getclosestpoint java.awt.point
WITHOUT_CLASSIFICATION	see org.tigris.gef.graph.graphnoderenderer getfignodefor org.tigris.gef.graph.graphmodel org.tigris.gef.base.layer java.lang.object java.util.map
WITHOUT_CLASSIFICATION	see java.awt.event.itemlistener itemstatechanged java.awt.event.itemevent
WITHOUT_CLASSIFICATION	make a seamless integration of the text in the note figure.
WITHOUT_CLASSIFICATION	user interaction methods
WITHOUT_CLASSIFICATION	accessor methods
WITHOUT_CLASSIFICATION	if we have a stereotype displayed then allow some space for that width and height
WITHOUT_CLASSIFICATION	and add the gaps around the textfield to get the minimum size of the note.
WITHOUT_CLASSIFICATION	just move the corner to it is new position.
WITHOUT_CLASSIFICATION	all connected edges
WITHOUT_CLASSIFICATION	only adjust the stereotype height if we are not newly created. this gets round the problem of loading classes with stereotypes defined which have the height already including the stereotype.
WITHOUT_CLASSIFICATION	whatever happened we are no longer newly created so clear the flag. then set the bounds for the rectangle we have defined.
WITHOUT_CLASSIFICATION	end class stylepanelfigclass
WITHOUT_CLASSIFICATION	todo get tip string from comment
WITHOUT_CLASSIFICATION	this one is still usable so let us retain it
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.figedge setsourcefignode org.tigris.gef.presentation.fignode
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig setfilled boolean
WITHOUT_CLASSIFICATION	although not generally true for gef for argo we know that the layer is a layerperspective which knows the associated diagram
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	contructors
WITHOUT_CLASSIFICATION	modifiers ...
WITHOUT_CLASSIFICATION	visibility ...
WITHOUT_CLASSIFICATION	stereotype fig covers the name fig
WITHOUT_CLASSIFICATION	element will normally be null when called from pgml parser it will get it is source destination set later in attachedges
WITHOUT_CLASSIFICATION	unimplemented
WITHOUT_CLASSIFICATION	alternatively we could just return null here so that you can not create a comment just linked to a comment this way which is a bit uncommon but not illegal so for consistency we better allow it.
WITHOUT_CLASSIFICATION	class to display a stereotype declaration figure using classifier box notation. p todo this is just a place holder right now! tfm this needs to show tags and constraints.
WITHOUT_CLASSIFICATION	add...
WITHOUT_CLASSIFICATION	register for tagdefinitions
WITHOUT_CLASSIFICATION	todo constraints ...
WITHOUT_CLASSIFICATION	see javax.swing.abstractaction isenabled
WITHOUT_CLASSIFICATION	set the drop location in the case of d d
WITHOUT_CLASSIFICATION	make all the parts match the main fig
WITHOUT_CLASSIFICATION	the next line is needed so that we have the right dimension when drawing this fig on the diagram by pressing down the mouse button even before releasing the mouse button
WITHOUT_CLASSIFICATION	if moved into an package
WITHOUT_CLASSIFICATION	if default namespace is not already set
WITHOUT_CLASSIFICATION	when this is called from pgmlstackparser.attachedges we finished the initialization of owning pseudo element commentedge
WITHOUT_CLASSIFICATION	avoid gef calcdrawingarea bug when nothing in a diagram.
WITHOUT_CLASSIFICATION	no generalizations in deployment diagrams
WITHOUT_CLASSIFICATION	copy the gif image to the clipboard
WITHOUT_CLASSIFICATION	the diagram image data
WITHOUT_CLASSIFICATION	hide grid otherwise cannot see anything
WITHOUT_CLASSIFICATION	bigport.setfilled f
WITHOUT_CLASSIFICATION	background color.
WITHOUT_CLASSIFICATION	set up hide all show all
WITHOUT_CLASSIFICATION	perform the action
WITHOUT_CLASSIFICATION	only the bigport may be filled
WITHOUT_CLASSIFICATION	see parent
WITHOUT_CLASSIFICATION	we remove all of them
WITHOUT_CLASSIFICATION	see org.tigris.gef.undo.undoableaction isenabled
WITHOUT_CLASSIFICATION	?line width?
WITHOUT_CLASSIFICATION	but its position may have been changed
WITHOUT_CLASSIFICATION	bounds not relevant here but i am perfectionist...
WITHOUT_CLASSIFICATION	we need to set a new notationprovider since the notation language may have been changed
WITHOUT_CLASSIFICATION	add it again but now in the right sequence
WITHOUT_CLASSIFICATION	now put the text in we must handle the case where the text is null
WITHOUT_CLASSIFICATION	find the compartment fig for this umlobject
WITHOUT_CLASSIFICATION	override superclass to do nothing. fill property cannot be changed.
WITHOUT_CLASSIFICATION	override superclass to do nothing. line width cannot be changed.
WITHOUT_CLASSIFICATION	override superclass to do nothing. line width property cannot be changed.
WITHOUT_CLASSIFICATION	aggregation
WITHOUT_CLASSIFICATION	end class actionsrcmultonetomany
WITHOUT_CLASSIFICATION	todo set font?
WITHOUT_CLASSIFICATION	to circumvent too many registered listeners
WITHOUT_CLASSIFICATION	this shortcut was already been assigned to another action let us pop up a message for the user
WITHOUT_CLASSIFICATION	see javax.swing.event.documentlistener removeupdate javax.swing.event.documentevent
WITHOUT_CLASSIFICATION	see javax.swing.event.documentlistener changedupdate javax.swing.event.documentevent
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig hit java.awt.rectangle
WITHOUT_CLASSIFICATION	ending editing
WITHOUT_CLASSIFICATION	used by pgml.tee
WITHOUT_CLASSIFICATION	actually return the figedge that the figedgeport is part of.
WITHOUT_CLASSIFICATION	throw new illegalargumentexception
WITHOUT_CLASSIFICATION	see javax.swing.event.documentlistener insertupdate javax.swing.event.documentevent
WITHOUT_CLASSIFICATION	updating the actions
WITHOUT_CLASSIFICATION	here the actions to divide a region
WITHOUT_CLASSIFICATION	the 1st region has an invisible divider line the box is always invisible
WITHOUT_CLASSIFICATION	throw out any previous elements that were enclosed but are not a concurrent region let us move them onto the first region
WITHOUT_CLASSIFICATION	linewidth?
WITHOUT_CLASSIFICATION	the divider line should be visible so no need to change its color.
WITHOUT_CLASSIFICATION	make the composite state 1 region higher
WITHOUT_CLASSIFICATION	look for the dashed edge
WITHOUT_CLASSIFICATION	we have the dashed edge now find the opposite fignode
WITHOUT_CLASSIFICATION	prevent triggering too many events by setname .
WITHOUT_CLASSIFICATION	not???
WITHOUT_CLASSIFICATION	consume to stop other modes from trying to take over
WITHOUT_CLASSIFICATION	marker interface only
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig setboundsimpl int int int int
WITHOUT_CLASSIFICATION	cannot do anything if we do not have a fig.
WITHOUT_CLASSIFICATION	2 pixel padding after compartment
WITHOUT_CLASSIFICATION	or vice versa?
WITHOUT_CLASSIFICATION	provide feedback to the user that their name was not accepted
WITHOUT_CLASSIFICATION	do not show border line make transparent
WITHOUT_CLASSIFICATION	cleanup of unused figtext s
WITHOUT_CLASSIFICATION	todo this does not do anything special with keywords. they should probably go first.
WITHOUT_CLASSIFICATION	there is one fig more in the group than stereotypes keyword
WITHOUT_CLASSIFICATION	the keyword fig already exists.
WITHOUT_CLASSIFICATION	bounds not relevant here
WITHOUT_CLASSIFICATION	the stereotype fig already exists.
WITHOUT_CLASSIFICATION	remove all stereotypes that have a graphical icon
WITHOUT_CLASSIFICATION	todo check!
WITHOUT_CLASSIFICATION	set new bounds for all included figs
WITHOUT_CLASSIFICATION	stylepanelfigclass relies on getpaneltarget to return a figcompartmentbox
WITHOUT_CLASSIFICATION	get class box because we will set it is bounding box
WITHOUT_CLASSIFICATION	get class box because we will set it is bounding box in text field
WITHOUT_CLASSIFICATION	the keyword fig does not exist yet. let us create one
WITHOUT_CLASSIFICATION	keywords which look like a stereotype e.g. interface have no owner
WITHOUT_CLASSIFICATION	if there are no stereotypes we return 0 0 preventing double lines in the class see issue 4939
WITHOUT_CLASSIFICATION	end class stylepanelfigassociationclass
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	create the singleton if it does not exist and then return it
WITHOUT_CLASSIFICATION	when a new target is selected we have to check if it s a use case. then the icone add extension point have to become enabled.
WITHOUT_CLASSIFICATION	create a new extension point and make it the browser target. then invoke the superclass action method.
WITHOUT_CLASSIFICATION	end class actionaddextensionpoint
WITHOUT_CLASSIFICATION	if there are bits of an association class then remember their location and path.
WITHOUT_CLASSIFICATION	create the new fignodeassociation and locate it.
WITHOUT_CLASSIFICATION	add the association ends to the graph model
WITHOUT_CLASSIFICATION	add the edges such as comment edges that were on the old figassociation to our new fignodeassociation and make sure they are positioned correctly.
WITHOUT_CLASSIFICATION	see java.awt.dnd.droptargetlistener dragenter java.awt.dnd.droptargetdragevent
WITHOUT_CLASSIFICATION	see java.awt.dnd.droptargetlistener dragover java.awt.dnd.droptargetdragevent
WITHOUT_CLASSIFICATION	see java.awt.dnd.droptargetlistener dropactionchanged java.awt.dnd.droptargetdragevent
WITHOUT_CLASSIFICATION	get the model elements that are being transfered.
WITHOUT_CLASSIFICATION	multiplicity
WITHOUT_CLASSIFICATION	end class modecreateassociation
WITHOUT_CLASSIFICATION	umldiagram dia .doesaccept dtde.getsource
WITHOUT_CLASSIFICATION	the new height can not be less than the name height
WITHOUT_CLASSIFICATION	end class spfigedgemodelelement
WITHOUT_CLASSIFICATION	system.err.println nullpointerexception ignored.
WITHOUT_CLASSIFICATION	get all our sub figs and hit them with the big stick too
WITHOUT_CLASSIFICATION	only show the path item when there is an owning namespace.
WITHOUT_CLASSIFICATION	enumerate all selected figures and update their path accordingly
WITHOUT_CLASSIFICATION	compartments
WITHOUT_CLASSIFICATION	add
WITHOUT_CLASSIFICATION	20 height of name fig ?
WITHOUT_CLASSIFICATION	now force calculation of the bounds of the figure update the edges and trigger anyone who is listening to see if the bounds property has changed.
WITHOUT_CLASSIFICATION	2 line width? or extra padding?
WITHOUT_CLASSIFICATION	set properties of the stereotype box.
WITHOUT_CLASSIFICATION	the namefig is transparent since this is a box and the fill color is drawn by the bigport.
WITHOUT_CLASSIFICATION	use asize to build up the minimum size. start with the size of the name compartment and build up.
WITHOUT_CLASSIFICATION	only take into account the stereotype width not the height since the height is included in the name fig
WITHOUT_CLASSIFICATION	add the height of all the compartments if there are any and check their minimum width
WITHOUT_CLASSIFICATION	save our old boundaries so it can be used in property message later
WITHOUT_CLASSIFICATION	make sure we do not try to set things smaller than the minimum
WITHOUT_CLASSIFICATION	now the new namefig height will include the stereotype height
WITHOUT_CLASSIFICATION	check for uninitialised instance variables and constructor.
WITHOUT_CLASSIFICATION	calculate the minimum needed height for all the compartments
WITHOUT_CLASSIFICATION	increase the height of the fig
WITHOUT_CLASSIFICATION	finally set the bounds of the big box and the border fig
WITHOUT_CLASSIFICATION	hide compartment
WITHOUT_CLASSIFICATION	hiding one compartment means that the fig returns to minimal dimensions
WITHOUT_CLASSIFICATION	see org.tigris.gef.base.pathconv stuffpoint java.awt.point
WITHOUT_CLASSIFICATION	see org.tigris.gef.base.pathconv setclosestpoint java.awt.point
WITHOUT_CLASSIFICATION	show compartment
WITHOUT_CLASSIFICATION	this sets the linewidth of all in the group
WITHOUT_CLASSIFICATION	namefig and stereotypefig are handled by parent.
WITHOUT_CLASSIFICATION	forcerepaintshadow
WITHOUT_CLASSIFICATION	update the diagram and other users of these settings
WITHOUT_CLASSIFICATION	jve decl index 0 visual constraint 10 10
WITHOUT_CLASSIFICATION	find the point offset on the line that gives a correct offset
WITHOUT_CLASSIFICATION	default angle is 90 deg.
WITHOUT_CLASSIFICATION	boundary condition in gef make sure this is less than not equal
WITHOUT_CLASSIFICATION	check for a collision between our computed position and the edge
WITHOUT_CLASSIFICATION	increase offset by 2px at a time
WITHOUT_CLASSIFICATION	get the points representing the poly line for our edge
WITHOUT_CLASSIFICATION	increase offset by increments until we are clear
WITHOUT_CLASSIFICATION	if we timed out give it one more try on the other side
WITHOUT_CLASSIFICATION	count limit
WITHOUT_CLASSIFICATION	force the line width to 0 since the figgroup that contains the stereotype may want to show a border but we do not.
WITHOUT_CLASSIFICATION	log.log level.fine final point count result offset of scaledoffset
WITHOUT_CLASSIFICATION	segment size for computing slope
WITHOUT_CLASSIFICATION	if our position was clamped try to make it up on the other end
WITHOUT_CLASSIFICATION	cannot get the slope of a point. just return an arbitrary point.
WITHOUT_CLASSIFICATION	this should not happen because of our line segment size check
WITHOUT_CLASSIFICATION	we are going vertical! goose in top gun
WITHOUT_CLASSIFICATION	arctan only returns pi 2 to pi 2 handle the other two quadrants and normalize to 0 2pi
WITHOUT_CLASSIFICATION	quadrant ii iii
WITHOUT_CLASSIFICATION	quadrant iv
WITHOUT_CLASSIFICATION	set the following for some backward compatibility with old algorithm
WITHOUT_CLASSIFICATION	add displacement angle to slope
WITHOUT_CLASSIFICATION	transform to 0 2pi range if we have gone all the way around circle
WITHOUT_CLASSIFICATION	compute our deltas
WITHOUT_CLASSIFICATION	load the standard colour just add an alpha channel.
WITHOUT_CLASSIFICATION	should never get here. if we do return the inner point.
WITHOUT_CLASSIFICATION	called by propertychange
WITHOUT_CLASSIFICATION	this does a calcbounds
WITHOUT_CLASSIFICATION	see org.tigris.gef.base.diagram getclassandmodelid
WITHOUT_CLASSIFICATION	see java.awt.component setvisible boolean
WITHOUT_CLASSIFICATION	if location is non null convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	the following is the default implementation for diagrams of which the owner is a namespace.
WITHOUT_CLASSIFICATION	source source position destination destination position number of objects to be copied
WITHOUT_CLASSIFICATION	unnamed
WITHOUT_CLASSIFICATION	different lengths
WITHOUT_CLASSIFICATION	todo should update to size of diagram contents
WITHOUT_CLASSIFICATION	this should not be needed if the above is correct but let us be sure
WITHOUT_CLASSIFICATION	next statement gives us a clone jgraph but not a cloned toolbar
WITHOUT_CLASSIFICATION	see org.tigris.gef.event.modechangelistener modechange org.tigris.gef.event.modechangeevent
WITHOUT_CLASSIFICATION	remains selected
WITHOUT_CLASSIFICATION	the old selection
WITHOUT_CLASSIFICATION	target might not have been initialised yet.
WITHOUT_CLASSIFICATION	add to selection
WITHOUT_CLASSIFICATION	how to handle empty target lists? probably the tabdiagram should only show an empty pane in that case
WITHOUT_CLASSIFICATION	assuming the target is some model element.
WITHOUT_CLASSIFICATION	was
WITHOUT_CLASSIFICATION	any swing work done here needs to be queued to the awt thread since we do not know what thread our event will arrive on
WITHOUT_CLASSIFICATION	redrawmanager.lock
WITHOUT_CLASSIFICATION	redrawmanager.unlock redrawer.repairdamage
WITHOUT_CLASSIFICATION	getlayermanager .getactivelayer .paint g
WITHOUT_CLASSIFICATION	see javax.swing.action getvalue java.lang.string
WITHOUT_CLASSIFICATION	this makes the text not touch the text border line
WITHOUT_CLASSIFICATION	certain types of fixed text e.g. a figstereotype with a keyword may not have an owner
WITHOUT_CLASSIFICATION	now we link it to the modelelements which are represented by fignode
WITHOUT_CLASSIFICATION	update all tools enabled status
WITHOUT_CLASSIFICATION	remember the fig for later
WITHOUT_CLASSIFICATION	let us build the comment first unlinked.
WITHOUT_CLASSIFICATION	prevent e.g. associationclasses from being added trice
WITHOUT_CLASSIFICATION	select the new comment as target
WITHOUT_CLASSIFICATION	create the node fig for the comment itself and draw it
WITHOUT_CLASSIFICATION	create the comment links and draw them
WITHOUT_CLASSIFICATION	if we are drawing from an edge
WITHOUT_CLASSIFICATION	non nls n
WITHOUT_CLASSIFICATION	see org.tigris.gef.ui.popupgenerator getpopupactions java.awt.event.mouseevent
WITHOUT_CLASSIFICATION	user made a false start
WITHOUT_CLASSIFICATION	so the target is a massociationrole
WITHOUT_CLASSIFICATION	mvw this is not the correct way but it allows connecting a commentedge to it! see e.g. actionaddnote for the correct way. testcase 1. select the message. 2. click the comment tool.
WITHOUT_CLASSIFICATION	end class actionaddmessage
WITHOUT_CLASSIFICATION	let us use groups to construct the different text sections at the association
WITHOUT_CLASSIFICATION	this only happens if model change events arrive before we are completely constructed.
WITHOUT_CLASSIFICATION	x 2 y 2 r 2 equation of a circle
WITHOUT_CLASSIFICATION	max distance is set at 100 pixels rsquared 100 2
WITHOUT_CLASSIFICATION	east
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig propertychange java.beans.propertychangeevent
WITHOUT_CLASSIFICATION	end class figassociation
WITHOUT_CLASSIFICATION	no need to listen to these property changes the notationprovider takes care of this.
WITHOUT_CLASSIFICATION	new string name visibility stereotype
WITHOUT_CLASSIFICATION	these are a list of arrow types.
WITHOUT_CLASSIFICATION	added to the arrow type for navigable
WITHOUT_CLASSIFICATION	finished editing. parse the text that was edited. only the role is editable hence
WITHOUT_CLASSIFICATION	figedge.showhelp role.getparsinghelp role.settext
WITHOUT_CLASSIFICATION	pass everything else to superclass
WITHOUT_CLASSIFICATION	end class actionnavigability
WITHOUT_CLASSIFICATION	fonts and colors should get updated automatically for contained figs
WITHOUT_CLASSIFICATION	there is none...
WITHOUT_CLASSIFICATION	make space for the clarifier margin between text and border
WITHOUT_CLASSIFICATION	add a listener for changes to any property
WITHOUT_CLASSIFICATION	is used as instancespecification see umldeploymentdiagram
WITHOUT_CLASSIFICATION	check if multiple items are selected
WITHOUT_CLASSIFICATION	show ...
WITHOUT_CLASSIFICATION	popupaddoffset should be equal to the number of items added here
WITHOUT_CLASSIFICATION	be careful here since subclasses could have overridden this with the assumption that it would not be called before the constructors finished
WITHOUT_CLASSIFICATION	this rectangle marks the whole modelelement figure everything is inside it
WITHOUT_CLASSIFICATION	clone this figure. after the base clone method has been called determine which child figs of the clone represent the name stereotype and port. p todo enclosedfigs encloser and eventsenders may also need to be cloned. see java.lang.object clone return the cloned figure
WITHOUT_CLASSIFICATION	idem here clone.stereotypefig figstereotypesgroup clonefig
WITHOUT_CLASSIFICATION	figclone. polygon polygon polygon.clone
WITHOUT_CLASSIFICATION	utility function to unregister all listeners registered through addelementlistener. see addelementlistener object string
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig getenclosingfig
WITHOUT_CLASSIFICATION	update any text colors fonts etc.
WITHOUT_CLASSIFICATION	parse the text that was edited
WITHOUT_CLASSIFICATION	add stereotype view submenu
WITHOUT_CLASSIFICATION	the node s been placed on the diagram
WITHOUT_CLASSIFICATION	add stereotypes submenu
WITHOUT_CLASSIFICATION	set the namespace of the enclosed model element to the namespace of the encloser.
WITHOUT_CLASSIFICATION	find all elementresidences between the class and the component
WITHOUT_CLASSIFICATION	there was no elementresidence yet so let us create one
WITHOUT_CLASSIFICATION	the node s been placed within some fig
WITHOUT_CLASSIFICATION	there were 2 elementresidences .. strange case.
WITHOUT_CLASSIFICATION	there is already a correct elementresidence
WITHOUT_CLASSIFICATION	the owner is already linked to the component
WITHOUT_CLASSIFICATION	we are getting events we do not want. filter them out.
WITHOUT_CLASSIFICATION	only update the bounds if they change
WITHOUT_CLASSIFICATION	we handle and consume editing events
WITHOUT_CLASSIFICATION	resize the fignode to accommodate the new text
WITHOUT_CLASSIFICATION	todo should this not be an assert?
WITHOUT_CLASSIFICATION	west
WITHOUT_CLASSIFICATION	south
WITHOUT_CLASSIFICATION	event handlers mouselistener implementation
WITHOUT_CLASSIFICATION	convert null to empty string and clear help message
WITHOUT_CLASSIFICATION	it is done
WITHOUT_CLASSIFICATION	this enables direct text editing for sub figs of a figgroup object
WITHOUT_CLASSIFICATION	either layer or owner was null
WITHOUT_CLASSIFICATION	default is to do nothing
WITHOUT_CLASSIFICATION	this test needed for a figpool
WITHOUT_CLASSIFICATION	get model listeners removed
WITHOUT_CLASSIFICATION	set the tooltip string
WITHOUT_CLASSIFICATION	todo state vertex are independent classes in uml 2.1
WITHOUT_CLASSIFICATION	only initialized to prevent warning
WITHOUT_CLASSIFICATION	not supported for this target
WITHOUT_CLASSIFICATION	internal methods
WITHOUT_CLASSIFICATION	todo assert modelelement ! null???
WITHOUT_CLASSIFICATION	default for name and stereotype is no border
WITHOUT_CLASSIFICATION	todo use per project undo manager not global
WITHOUT_CLASSIFICATION	use diagraminterface to add classes to diagram
WITHOUT_CLASSIFICATION	actionaddallclassesfrommodel
WITHOUT_CLASSIFICATION	situation 1
WITHOUT_CLASSIFICATION	we have an edge the uml modelelement!
WITHOUT_CLASSIFICATION	text group to contain name stereotype
WITHOUT_CLASSIFICATION	computeroute this recomputes the route if you reload the diagram.
WITHOUT_CLASSIFICATION	in case someone turns it on
WITHOUT_CLASSIFICATION	do not allow fill to change. we should see through the text to the color of the main fig background.
WITHOUT_CLASSIFICATION	now force minimum dimensions for the text
WITHOUT_CLASSIFICATION	now add the areas around the text to return the complete size
WITHOUT_CLASSIFICATION	calculate the source and dest figs for to self assoc
WITHOUT_CLASSIFICATION	reset the pointindex
WITHOUT_CLASSIFICATION	check pre conds
WITHOUT_CLASSIFICATION	set up
WITHOUT_CLASSIFICATION	the fig that was under the mouse when it was released
WITHOUT_CLASSIFICATION	and find the fig
WITHOUT_CLASSIFICATION	last is the top fig.
WITHOUT_CLASSIFICATION	check intermediate post condition.
WITHOUT_CLASSIFICATION	delegate the re routing to graphmodels.
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig setlinecolor java.awt.color
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig getlinecolor
WITHOUT_CLASSIFICATION	add figs to the fignode in back to front order
WITHOUT_CLASSIFICATION	set it to an invalid number by default to make sure it is set correctly.
WITHOUT_CLASSIFICATION	figpoly.setfillcolor col
WITHOUT_CLASSIFICATION	north
WITHOUT_CLASSIFICATION	do nothing until code is reviewed
WITHOUT_CLASSIFICATION	todo do nothing until code is reviewed
WITHOUT_CLASSIFICATION	see javax.swing.action isenabled
WITHOUT_CLASSIFICATION	see java.awt.event.actionlistener actionperformed java.awt.event.actionevent
WITHOUT_CLASSIFICATION	classifierrole classifierrole
WITHOUT_CLASSIFICATION	simulate a press of the mouse above the calculated point
WITHOUT_CLASSIFICATION	calculate the drop location and place every n th element at an offset proportional to n.
WITHOUT_CLASSIFICATION	simulate a release of the mouse
WITHOUT_CLASSIFICATION	make sure the file does not exist so the user will get prompted to choose a new name
WITHOUT_CLASSIFICATION	do nothing by default
WITHOUT_CLASSIFICATION	do not allow drag outside of bounds of diagram
WITHOUT_CLASSIFICATION	overridden in order to implement pathcompartmentcontainer.
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig paint java.awt.graphics
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig removefromdiagram
WITHOUT_CLASSIFICATION	see org.tigris.gef.presentation.fig deletefrommodel
WITHOUT_CLASSIFICATION	if the user has selected modeplace either by a diagram tool or addtodiagram then we do not want to show the clarifiers.
WITHOUT_CLASSIFICATION	remember what handle was clicked for the case where the drag is released over empty space
WITHOUT_CLASSIFICATION	transparent cyan
WITHOUT_CLASSIFICATION	yellow
WITHOUT_CLASSIFICATION	translucent green
WITHOUT_CLASSIFICATION	super modecreatepolyedge.class edgeclass model.getmetatypes .getassociation name
WITHOUT_CLASSIFICATION	set this to true on to enable debugging figs
WITHOUT_CLASSIFICATION	anchor position
WITHOUT_CLASSIFICATION	todo the uml does not seem to define this name. or is it?
WITHOUT_CLASSIFICATION	the serialversionuid generated by eclipse
WITHOUT_CLASSIFICATION	uml spec for generalizations does not call for name
WITHOUT_CLASSIFICATION	name stereotypes get updated by superclass
WITHOUT_CLASSIFICATION	show it
WITHOUT_CLASSIFICATION	fig.calcbounds
WITHOUT_CLASSIFICATION	see java.awt.event.mouselistener mouseentered java.awt.event.mouseevent
WITHOUT_CLASSIFICATION	we only take the filename not the whole system path
WITHOUT_CLASSIFICATION	x x y y w w h h
